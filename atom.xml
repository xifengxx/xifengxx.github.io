<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>西风Web前端</title>
  <subtitle>Web前端学习博客。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-04-07T04:20:54.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Xifengxx</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo 内置标签</title>
    <link href="http://yoursite.com/2016/04/07/hexo-%E5%86%85%E7%BD%AE%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2016/04/07/hexo-内置标签/</id>
    <published>2016-04-07T01:47:25.000Z</published>
    <updated>2016-04-07T04:20:54.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;标签(Tag Plugin)&lt;/strong&gt; 是 Hexo 提供的一种快速生成特定内容的方式。 在标准 Markdown 中，我们无法指定图片的大小，在这种情景下，我们即可使用标签来解决。 Hexo 内置来许多标签来帮助写作者可以更快的书写， 完整的标签列表 可以参考 &lt;a href=&quot;https://hexo.io/docs/tag-plugins.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo 官网&lt;/a&gt;。 另外，Hexo 也开放来接口给主题，使主题有可能提供给写作者更简便的写作方法。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;文字引用&quot;&gt;&lt;a href=&quot;#文字引用&quot; class=&quot;headerlink&quot; title=&quot;文字引用&quot;&gt;&lt;/a&gt;文字引用&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% blockquote [author[, source]] [link] [source_link_title] %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;content&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% endblockquote %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以下为文字引用&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% blockquote %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipiscin……(中间为文本内容)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% endblockquote %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以下为书籍引用：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% blockquote David Levithan, Wide Awake %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Do not just seek happiness for yourself. Seek happiness hrough mercy.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% endblockquote %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以下为网页文字引用：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/welcome-to-island-marketing.html Welcome to Island Marketing %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Every interaction is both precious and an opportunity to delight.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% endblockquote %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;文本居中引用&quot;&gt;&lt;a href=&quot;#文本居中引用&quot; class=&quot;headerlink&quot; title=&quot;文本居中引用&quot;&gt;&lt;/a&gt;文本居中引用&lt;/h3&gt;&lt;p&gt;此标签将生成一个带上下分割线的引用，同时引用内文本将自动居中。 文本居中时，多行文本若长度不等，视觉上会显得不对称，因此建议在引用单行文本的场景下使用。 例如作为文章开篇引用 或者 结束语之前的总结引用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方式&lt;/strong&gt;&lt;br&gt;HTML方式：使用这种方式时，给 img 添加属性 class=”blockquote-center” 即可。&lt;br&gt;标签方式：使用 centerquote 或者 简写 cq。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 其中 class=&amp;quot;blockquote-center&amp;quot; 是必须的 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;blockquote class=&amp;quot;blockquote-center&amp;quot;&amp;gt;blah blah blah&amp;lt;/blockquote&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 标签 方式，要求NexT版本在0.4.5或以上 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% centerquote %&amp;#125;blah blah blah&amp;#123;% endcenterquote %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 标签别名 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% cq %&amp;#125; blah blah blah &amp;#123;% endcq %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果示例：&lt;br&gt;&lt;img src=&quot;http://theme-next.iissnan.com/uploads/tags/blockquote-center.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;h3 id=&quot;图片容器宽度限制的图片&quot;&gt;&lt;a href=&quot;#图片容器宽度限制的图片&quot; class=&quot;headerlink&quot; title=&quot;图片容器宽度限制的图片&quot;&gt;&lt;/a&gt;图片容器宽度限制的图片&lt;/h3&gt;&lt;p&gt;当使用此标签引用图片时，图片将自动扩大 26%，并突破文章容器的宽度。 此标签使用于需要突出显示的图片, 图片的扩大与容器的偏差从视觉上提升图片的吸引力。 此标签有两种调用方式（详细参看底下示例）：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方式&lt;/strong&gt;&lt;br&gt;HTML方式：使用这种方式时，为 img 添加属性 class=”full-image”即可。&lt;br&gt;标签方式：使用 fullimage 或者 简写 fi， 并传递图片地址、 alt 和 title 属性即可。 属性之间以逗号分隔。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &amp;lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &amp;lt;!-- 其中 class=&amp;quot;full-image&amp;quot; 是必须的 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &amp;lt;img src=&amp;quot;/image-url&amp;quot; class=&amp;quot;full-image&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &amp;lt;!-- 标签 方式，要求版本在0.4.5或以上 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &amp;#123;% fullimage /image-url, alt, title %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &amp;lt;!-- 别名 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &amp;#123;% fi /image-url, alt, title %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果示例：&lt;br&gt;&lt;img src=&quot;http://theme-next.iissnan.com/uploads/tags/full-image.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;如何设置阅读全文&quot;&gt;&lt;a href=&quot;#如何设置阅读全文&quot; class=&quot;headerlink&quot; title=&quot;如何设置阅读全文&quot;&gt;&lt;/a&gt;如何设置阅读全文&lt;/h3&gt;&lt;p&gt;在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面是一个常见的需求。 NexT 提供三种方式来控制文章在首页的显示方式。 也就是说，在首页显示文章的摘录并显示&lt;strong&gt;阅读全文&lt;/strong&gt;按钮，可以通过以下方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在文章中使用’’more’’手动进行截断，Hexo 提供的方式 推荐&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; 以上是文章摘要&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &amp;lt;!--more--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; 以下是余下全文&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;more以上內容即是文章摘要，在主页显示，more以下內容点击”Read More”链接打开全文才显示。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在文章的 front-matter 中添加 description，并提供文章摘录&lt;/li&gt;
&lt;li&gt;自动形成摘要，在 主题配置文件 中添加：&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;auto_excerpt:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;enable: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;length: 150&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;默认截取的长度为 150 字符，可以根据需要自行设定&lt;/p&gt;
&lt;p&gt;建议使用第一种方式，除了可以精确控制需要显示的摘录内容以外， 这种方式也可以让 Hexo 中的插件更好的识别。&lt;/p&gt;
&lt;h3 id=&quot;插入视频&quot;&gt;&lt;a href=&quot;#插入视频&quot; class=&quot;headerlink&quot; title=&quot;插入视频&quot;&gt;&lt;/a&gt;插入视频&lt;/h3&gt;&lt;p&gt;如插人YouTube视频&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% youtube video_id %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如需插入其他视频网站视频，直接插入其分享代码即可。&lt;br&gt;如插入一个优酷视频的分享代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;embed src=&amp;quot;http://player.youku.com/player.php/sid/XMTMyMzc4OTIxNg==/v.swf&amp;quot; allowFullScreen=&amp;quot;true&amp;quot; quality=&amp;quot;high&amp;quot; width=&amp;quot;480&amp;quot; height=&amp;quot;400&amp;quot; align=&amp;quot;middle&amp;quot; allowScriptAccess=&amp;quot;always&amp;quot; type=&amp;quot;application/x-shockwave-flash&amp;quot;&amp;gt;&amp;lt;/embed&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;embed src=&quot;http://player.youku.com/player.php/sid/XMTMyMzc4OTIxNg==/v.swf&quot; allowfullscreen=&quot;true&quot; quality=&quot;high&quot; width=&quot;480&quot; height=&quot;400&quot; align=&quot;middle&quot; allowscriptaccess=&quot;always&quot; type=&quot;application/x-shockwave-flash&quot;&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;标签(Tag Plugin)&lt;/strong&gt; 是 Hexo 提供的一种快速生成特定内容的方式。 在标准 Markdown 中，我们无法指定图片的大小，在这种情景下，我们即可使用标签来解决。 Hexo 内置来许多标签来帮助写作者可以更快的书写， 完整的标签列表 可以参考 &lt;a href=&quot;https://hexo.io/docs/tag-plugins.html&quot;&gt;Hexo 官网&lt;/a&gt;。 另外，Hexo 也开放来接口给主题，使主题有可能提供给写作者更简便的写作方法。&lt;br&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hello</title>
    <link href="http://yoursite.com/2016/04/06/hello/"/>
    <id>http://yoursite.com/2016/04/06/hello/</id>
    <published>2016-04-06T12:24:07.000Z</published>
    <updated>2016-04-06T12:24:08.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/04/06/hello-world/"/>
    <id>http://yoursite.com/2016/04/06/hello-world/</id>
    <published>2016-04-06T12:15:39.870Z</published>
    <updated>2016-04-06T12:15:40.000Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Git实战教程</title>
    <link href="http://yoursite.com/2016/04/05/git%E5%AE%9E%E6%88%98%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2016/04/05/git实战教程/</id>
    <published>2016-04-05T11:09:51.000Z</published>
    <updated>2016-04-07T01:13:28.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;简明释义&quot;&gt;&lt;a href=&quot;#简明释义&quot; class=&quot;headerlink&quot; title=&quot;简明释义&quot;&gt;&lt;/a&gt;简明释义&lt;/h3&gt;&lt;h4 id=&quot;Git&quot;&gt;&lt;a href=&quot;#Git&quot; class=&quot;headerlink&quot; title=&quot;Git&quot;&gt;&lt;/a&gt;Git&lt;/h4&gt;&lt;p&gt;Git 是一个版本控制工具，是一个可以安装在你自己机器上的软件。&lt;br&gt;git 的用途，就是对一个文件夹中的所有数据信息做跟踪，通过记录版本的形式来对内容的变化做记录。&lt;/p&gt;
&lt;h4 id=&quot;github&quot;&gt;&lt;a href=&quot;#github&quot; class=&quot;headerlink&quot; title=&quot;github&quot;&gt;&lt;/a&gt;github&lt;/h4&gt;&lt;p&gt;Git 的魅力在于开源文化，2008 年 github 的诞生把开源协作的理念更好的进行了推广，因为 Github 让 Git 变得更为易用。&lt;br&gt;Github 首先是一个公司，&lt;a href=&quot;https://github.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github网站&lt;/a&gt;是他们的产品，提供 Git 仓库的托管服务，但是更重要的，它是世界上最大的开源软件分享协作平台。&lt;/p&gt;
&lt;h3 id=&quot;安装及初始化&quot;&gt;&lt;a href=&quot;#安装及初始化&quot; class=&quot;headerlink&quot; title=&quot;安装及初始化&quot;&gt;&lt;/a&gt;安装及初始化&lt;/h3&gt;&lt;h4 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Windows上安装Git&lt;/strong&gt;&lt;br&gt;msysgit是Windows版的Git。&lt;br&gt;&lt;a href=&quot;http://msysgit.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;然后按默认选项安装即可。&lt;/p&gt;
&lt;p&gt;安装完成后，在开始菜单里找到“Git”-&amp;gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！&lt;/p&gt;
&lt;p&gt;安装完成后，还需要最后一步设置，在命令行输入：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ git config –global user.name “Your Name”&lt;br&gt;$ git config –global user.email “email@example.com”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;git config命令的–global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。&lt;/p&gt;
&lt;h4 id=&quot;创建版本库&quot;&gt;&lt;a href=&quot;#创建版本库&quot; class=&quot;headerlink&quot; title=&quot;创建版本库&quot;&gt;&lt;/a&gt;创建版本库&lt;/h4&gt;&lt;p&gt;版本库又名仓库，英文名repository，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。&lt;/p&gt;
&lt;p&gt;如何创建版本库？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在电脑磁盘里的任意位置，创建一个空目录&lt;br&gt;方法1：直接在磁盘任意位置，右键-新建文件夹；&lt;br&gt;方法2：在git命令行里创建。&lt;br&gt;关于创建文件常用命令（Unix Linux命令）：&lt;br&gt;-mkdir&lt;br&gt;-cd        ：切换目录命令&lt;br&gt;–cd ..    : 切换到上一级目录。&lt;br&gt;如当前目录为e盘下的code目录，使用命令”cd ..”，会切换到e盘。&lt;br&gt;–cd e:    : 切换盘符。&lt;br&gt;如当前在e盘，需要切换到c盘，使用命令”cd c:”即可。&lt;br&gt;–cd /     : 切换到根目录。&lt;br&gt;–cd 目录名：切换到具体目录。&lt;br&gt;如当前在e盘，需要切换到e盘下的code目录，使用命令”cd code”即可。&lt;br&gt;如果当前在其他目录或根目录，需要切换到e盘下的code目录，使用命令”cd e:code”即可。&lt;br&gt;-pwd       : 显示当前所在目录&lt;br&gt;-dir       : 显示当前目录下的所有文件&lt;br&gt;-mkdir     : 创建目录。&lt;br&gt;如当前在e盘下，需要在e盘下创建一个新目录”code1”,使用命令”mkdir code1”即可；&lt;br&gt;如果要在其他盘下创建目录，先使用cd命令定位到目标盘，然后再使用mkdir命令。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过git init命名把这个目录变成Git可以管理的仓库。&lt;br&gt;创建完目录后，在磁盘中找到该目录，右键–Git Bash Here即可定位到当前目录，或是通过上面的Linux命令来定位到目标目录。&lt;br&gt;在命令行输入命令”git init”，即成功创建Git仓库。&lt;br&gt;这时在当前目录下，会多出一个.git目录（如果没有，说明被隐藏了，需要在”工具-文件夹选项-查看”里设置隐藏属性为显示所有文件）。这个目录是Git来跟踪管理版本库的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;远程仓库&quot;&gt;&lt;a href=&quot;#远程仓库&quot; class=&quot;headerlink&quot; title=&quot;远程仓库&quot;&gt;&lt;/a&gt;远程仓库&lt;/h3&gt;&lt;h4 id=&quot;配置SSH-Key&quot;&gt;&lt;a href=&quot;#配置SSH-Key&quot; class=&quot;headerlink&quot; title=&quot;配置SSH Key&quot;&gt;&lt;/a&gt;配置SSH Key&lt;/h4&gt;&lt;p&gt;目的：本地Git仓库与GitHub网站仓库之间实现同步传输及存储。&lt;br&gt;步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要注册一个GitHub账号。(注册地址)[&lt;a href=&quot;https://github.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com&lt;/a&gt;].&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置SSH Key.(本地Git仓库和GitHub仓库之间的传输是通过SSH加密的)&lt;br&gt;打开Git Bash,创建SSH Key.&lt;br&gt;输入命令：$ ssh-keygen -t rsa -c “youremail@examle.com”&lt;br&gt;将邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可。&lt;br&gt;成功的话，会在用户主目录（我的是在”C:\Documents and Settings\Administrator”）里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件。（这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;登录&lt;a href=&quot;https://github.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub网站&lt;/a&gt;，打开”我的账号/Account settings”—“personal settings”—“SSH keys”，点击”New SSH key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打开Git Bash，输入命令以下命令检测是否成功连接本机与GitHub。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ssh -T git@github.com&lt;br&gt;在遇到提示的情况下，输入”yes”即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;添加远程库&quot;&gt;&lt;a href=&quot;#添加远程库&quot; class=&quot;headerlink&quot; title=&quot;添加远程库&quot;&gt;&lt;/a&gt;添加远程库&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;登录GitHub,点击右上角的”+”号—“New repository”，创建新的Git仓库。&lt;/li&gt;
&lt;li&gt;把本地仓库的内容推送到GitHub仓库。&lt;br&gt;① 打开GitHub上新建的repository仓库，找到HTTPS/SSH地址并复制地址，如”&lt;a href=&quot;https://github.com/xifengxx/demo.git&amp;quot;是我的一个仓库https地址。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/xifengxx/demo.git&amp;quot;是我的一个仓库https地址。&lt;/a&gt;&lt;br&gt;② 本地仓库下运行命令&lt;blockquote&gt;
&lt;p&gt;$ git remote add origin &lt;a href=&quot;https://github.com/xifengxx/demo.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/xifengxx/demo.git&lt;/a&gt;&lt;br&gt;添加后，远程仓库的名字就是origin(这是Git默认叫法，可以将origin改成其他的名字)&lt;br&gt;③ 继续运行命令&lt;br&gt;$ git push -u origin master&lt;br&gt;把本地仓库内容推送到远程，用git push命令。实际上是把当前分支master推送到远程。&lt;br&gt;由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。&lt;br&gt;推送成功后，可以立刻在GitHub页面中看到远程库的内容已经和本地一模一样。&lt;br&gt;此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改：&lt;br&gt;$ git push origin master&lt;br&gt;④ 推送时，会弹出需要输入github账号及密码框，输入即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意事项&lt;/strong&gt;&lt;br&gt;在第二步②时，输入命令”$ git remote add origin &lt;a href=&quot;https://github.com/xifengxx/demo.git&amp;quot;时，可能会报错。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/xifengxx/demo.git&amp;quot;时，可能会报错。&lt;/a&gt;&lt;br&gt;错误信息：”fatal: remote origin already exists.……”&lt;br&gt;原因：远程仓库已经存在内容，与本地仓库推送内容冲突。&lt;br&gt;解决方法：&lt;br&gt; 1、先输入”$ git remote rm origin”命令，删除远程仓库内容。&lt;br&gt; 2、再输入”$ git remote add origin git@github.com:djqiang/gitdemo.git” 就不会报错了！&lt;br&gt;上述方法针对第一次将本地仓库推送到远程仓库时遇到这个问题的解决方法。&lt;br&gt;如果不想删除远程仓库内容，可以使用下面的方法，将本地仓库内容和远程仓库内容合并。&lt;br&gt;解决方法：&lt;br&gt; 1、先输入”$ git pull origin master”命令，将远程仓库内容pull到本地仓库。&lt;br&gt; 2、再输入”$ git push origin master”命令，即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;从远程库克隆&quot;&gt;&lt;a href=&quot;#从远程库克隆&quot; class=&quot;headerlink&quot; title=&quot;从远程库克隆&quot;&gt;&lt;/a&gt;从远程库克隆&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;登录GitHub,创建一个新的仓库，例如我的一个仓库，名字叫demo&lt;/li&gt;
&lt;li&gt;找到新仓库的HTTPS/SSH地址并复制地址，如”git@github.com:xifengxx/demo.git”或”&lt;a href=&quot;https://github.com/xifengxx/demo.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/xifengxx/demo.git&lt;/a&gt;“&lt;/li&gt;
&lt;li&gt;使用命令git clone克隆一个本地库&lt;blockquote&gt;
&lt;p&gt;$ git clone git@github.com:xifengxx/demo.git&lt;br&gt;也可以使用命令：&lt;br&gt;$ git clone &lt;a href=&quot;https://github.com/xifengxx/demo.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/xifengxx/demo.git&lt;/a&gt;&lt;br&gt;Git支持多种协议，默认的git://使用ssh，但也可以使用https等其他协议。&lt;br&gt;使用https除了速度慢以外，还有个最大的麻烦是每次推送都必须输入口令，但是在某些只开放http端口的公司内部就无法使用ssh协议而只能用https。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Git基础操作&quot;&gt;&lt;a href=&quot;#Git基础操作&quot; class=&quot;headerlink&quot; title=&quot;Git基础操作&quot;&gt;&lt;/a&gt;Git基础操作&lt;/h3&gt;&lt;h4 id=&quot;将文件添加到版本库&quot;&gt;&lt;a href=&quot;#将文件添加到版本库&quot; class=&quot;headerlink&quot; title=&quot;将文件添加到版本库&quot;&gt;&lt;/a&gt;将文件添加到版本库&lt;/h4&gt;&lt;p&gt;使用命令：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;git add:将文件添加到仓库。&lt;br&gt;命令：$ git add 文件名&lt;br&gt;将某个文件复制到当前目录，然后再使用这个命令。&lt;/li&gt;
&lt;li&gt;git commit:将文件提交到仓库。&lt;br&gt;命令：$ git commit -m “xxx”&lt;br&gt;git commit命令，-m后有一个空格，然后””中填写提交说明，可以输入任意内容，方便以后查找。&lt;br&gt;如：$ git commit -m “首次提交”&lt;br&gt;备注：commit命令可以一次提交很多文件；git add+文件名为添加一个文件，如果添加很多文件，使用命令”git add .”.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意事项&lt;/strong&gt;&lt;br&gt;将文件提交到仓库时，如果使用命令”git commit -a”时，会自动弹出系统默认的编辑器界面，在其中根据提示输入信息即可。&lt;br&gt;关键是如何退出默认编辑器界面并重新返回到Git bash界面。&lt;br&gt;方法：&lt;br&gt;① 按ESC键，确定退出编辑模式。&lt;br&gt;② 然后输入”:wq”，即可返回Git界面。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;利用Github-Page-搭建网页Demo&quot;&gt;&lt;a href=&quot;#利用Github-Page-搭建网页Demo&quot; class=&quot;headerlink&quot; title=&quot;利用Github Page 搭建网页Demo&quot;&gt;&lt;/a&gt;利用Github Page 搭建网页Demo&lt;/h3&gt;&lt;p&gt;适用场景：&lt;br&gt;写了一些网页demo,想上传到网上查看效果，并做展示用途。不同于用Github搭建的个人博客。&lt;/p&gt;
&lt;p&gt;方法：Github Page部署。&lt;br&gt;步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;注册&lt;a href=&quot;https://github.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github账号&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;下载安装git.&lt;br&gt;msysgit是Windows版的Git。(下载地址)[&lt;a href=&quot;http://msysgit.github.io/]。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://msysgit.github.io/]。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;登录Github，新建一个repository项目(这里使用project做项目名字)。&lt;/li&gt;
&lt;li&gt;在新建的项目里，点击”Settings”设置”Launch automatic page generator”,按步骤设置即可。&lt;br&gt;设置完成后，这个repository项目的展示地址变为：&lt;br&gt;&lt;a href=&quot;http://xifengxx.github.io/project&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://xifengxx.github.io/project&lt;/a&gt;&lt;br&gt;‘xifengxx’为我注册Github的账号名，project为repository项目名。&lt;br&gt;可以通过上面的网址来访问项目。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;电脑里选定一个文件夹（这里是Git）放置Github上的项目project。&lt;br&gt;右键——“git bash here”,调出git命令界面，输入以下命令将project项目克隆到本地文件夹下。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ git clone &lt;a href=&quot;https://github.com/xifengxx/project.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/xifengxx/project.git&lt;/a&gt;&lt;br&gt;这时本地Git文件夹下会多出一个文件夹Project。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;本地新建分支。&lt;br&gt;输入以下命令，在本地新建一个gh-pages分支并切换到gh-pages分支，这个分支是远程分支origin/gh-pages的镜像。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ cd project/&lt;br&gt;$ git checkout -b gh-pages origin/gh-pages&lt;br&gt;这时本地文件夹project里多出的文件，来自github上的gh-pages分支中的文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;执行以下命令，删除原有的gh-pages文件，并提交（commit）本次修改。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ git rm -rf .&lt;br&gt;$ git add .&lt;br&gt;$ git commit -m “delete all files”&lt;br&gt;这时project里的文件都删除了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将自己的网页Demo文件复制粘贴到project文件夹里。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将本地gh-pages中的网页文件同步到远程库的gh-pages中。&lt;br&gt;输入以下命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ git add .&lt;br&gt;$ git commit -m “My design Demo”&lt;br&gt;$ git push origin gh-pages&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;输入第三行命令时，会有弹出框提示输入Github账号和密码，输入后等待片刻，当命令行提示”$”符号时，说明已经完成。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;浏览器输入网址访问：&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://xifengxx.github.io/project/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://xifengxx.github.io/project/index.html&lt;/a&gt;&lt;br&gt;或 &lt;a href=&quot;http://xifengxx.github.io/project&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://xifengxx.github.io/project&lt;/a&gt;&lt;br&gt;此处的index.html为网页Demo中的文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/lijiayi/p/githubpages.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考资源&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简明释义&quot;&gt;&lt;a href=&quot;#简明释义&quot; class=&quot;headerlink&quot; title=&quot;简明释义&quot;&gt;&lt;/a&gt;简明释义&lt;/h3&gt;&lt;h4 id=&quot;Git&quot;&gt;&lt;a href=&quot;#Git&quot; class=&quot;headerlink&quot; title=&quot;Git&quot;&gt;&lt;/a&gt;Gi
    
    </summary>
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="Git实战" scheme="http://yoursite.com/tags/Git%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>Hexo安装及部署</title>
    <link href="http://yoursite.com/2016/04/05/Hexo%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2016/04/05/Hexo基本操作/</id>
    <published>2016-04-05T11:09:51.000Z</published>
    <updated>2016-04-07T03:56:08.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;配置SSH-Key&quot;&gt;&lt;a href=&quot;#配置SSH-Key&quot; class=&quot;headerlink&quot; title=&quot;配置SSH Key&quot;&gt;&lt;/a&gt;配置SSH Key&lt;/h3&gt;&lt;p&gt;用SSH Key将本地git项目与远程GitHub建立联系。&lt;br&gt;定位到目标文件夹，右键-Git Bash下输入命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ssh -T git@github.com&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Hexo安装&quot;&gt;&lt;a href=&quot;#Hexo安装&quot; class=&quot;headerlink&quot; title=&quot;Hexo安装&quot;&gt;&lt;/a&gt;Hexo安装&lt;/h3&gt;&lt;p&gt;首先要安装好Git 和Node.js软件。&lt;br&gt;安装完后，打开Git Bash，输入命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;npm install hexo-cli -g&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过以下命令来确认Hexo是否安装成功：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hexo -v&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果出现类似内容，则说明安装成功：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hexo-cli: 1.0.1&lt;br&gt;os: Windows_NT 5.1.2600 win32 ia32&lt;br&gt;http_parser: 2.5.0&lt;br&gt;node: 4.2.4&lt;br&gt;v8: 4.5.103.35&lt;br&gt;uv: 1.7.5&lt;br&gt;zlib: 1.2.8&lt;br&gt;ares: 1.10.1-DEV&lt;br&gt;icu: 56.1&lt;br&gt;modules: 46&lt;br&gt;openssl: 1.0.2e&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Hexo部署&quot;&gt;&lt;a href=&quot;#Hexo部署&quot; class=&quot;headerlink&quot; title=&quot;Hexo部署&quot;&gt;&lt;/a&gt;Hexo部署&lt;/h3&gt;&lt;p&gt;在目标文件夹下，Git Bash命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hexo init&lt;br&gt;npm install&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;新建博客文章：&quot;&gt;&lt;a href=&quot;#新建博客文章：&quot; class=&quot;headerlink&quot; title=&quot;新建博客文章：&quot;&gt;&lt;/a&gt;新建博客文章：&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;hexo new “文章标题”&lt;br&gt;一个博文内容包括以下几部分：&lt;br&gt;title: 如何通过Github Pages + hexo 搭建个人博客&lt;br&gt;date: 2016-03-13 00:09:51&lt;br&gt;tags: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标签1&lt;/li&gt;
&lt;li&gt;标签2&lt;/li&gt;
&lt;li&gt;标签3&lt;/li&gt;
&lt;li&gt;etc…&lt;br&gt;categories: hexo&lt;br&gt;description: #你对文章的描述，可省略&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;此处为正文内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;新建页面：&quot;&gt;&lt;a href=&quot;#新建页面：&quot; class=&quot;headerlink&quot; title=&quot;新建页面：&quot;&gt;&lt;/a&gt;新建页面：&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;hexo new page “页面名称”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;博客文章页面预览&quot;&gt;&lt;a href=&quot;#博客文章页面预览&quot; class=&quot;headerlink&quot; title=&quot;博客文章页面预览&quot;&gt;&lt;/a&gt;博客文章页面预览&lt;/h3&gt;&lt;p&gt;使用以下命令启动本地服务器&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hexo server&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;提示信息：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;INFO  Start processing&lt;br&gt;INFO  Hexo is running at &lt;a href=&quot;http://localhost:4000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000/&lt;/a&gt;. Press Ctrl+C to stop.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在浏览器访问：&lt;a href=&quot;http://localhost:4000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000/&lt;/a&gt; 访问页面&lt;/p&gt;
&lt;h3 id=&quot;将本地文件部署到GitHub&quot;&gt;&lt;a href=&quot;#将本地文件部署到GitHub&quot; class=&quot;headerlink&quot; title=&quot;将本地文件部署到GitHub&quot;&gt;&lt;/a&gt;将本地文件部署到GitHub&lt;/h3&gt;&lt;h4 id=&quot;修改-config-yml文件&quot;&gt;&lt;a href=&quot;#修改-config-yml文件&quot; class=&quot;headerlink&quot; title=&quot;修改_config.yml文件&quot;&gt;&lt;/a&gt;修改_config.yml文件&lt;/h4&gt;&lt;blockquote&gt;
&lt;h1 id=&quot;Deployment&quot;&gt;&lt;a href=&quot;#Deployment&quot; class=&quot;headerlink&quot; title=&quot;Deployment&quot;&gt;&lt;/a&gt;Deployment&lt;/h1&gt;&lt;h2 id=&quot;Docs-https-hexo-io-docs-deployment-html&quot;&gt;&lt;a href=&quot;#Docs-https-hexo-io-docs-deployment-html&quot; class=&quot;headerlink&quot; title=&quot;Docs: https://hexo.io/docs/deployment.html&quot;&gt;&lt;/a&gt;Docs: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io/docs/deployment.html&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;deploy:&lt;br&gt;  type: git&lt;br&gt;  repository: &lt;a href=&quot;https://github.com/xifengxx/xifengxx.github.io.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/xifengxx/xifengxx.github.io.git&lt;/a&gt;&lt;br&gt;  branch: master&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;将其deploy到仓库&quot;&gt;&lt;a href=&quot;#将其deploy到仓库&quot; class=&quot;headerlink&quot; title=&quot;将其deploy到仓库&quot;&gt;&lt;/a&gt;将其deploy到仓库&lt;/h4&gt;&lt;p&gt;打开Git Bash，依次输入以下命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hexo clean&lt;br&gt;hexo generate&lt;br&gt;hexo deploy&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此时有可能出现错误，如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ hexo d&lt;br&gt;ERROR Deployer not found: git&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;此时需要在Git Bash中运行以下命令：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;npm install hexo-deployer-git –save&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后重新再输入命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hexo clean&lt;br&gt;hexo generate&lt;br&gt;hexo deploy&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;hexo clean (清除缓存)&lt;br&gt;hexo generate (生成静态网页)&lt;br&gt;hexo deploy (开始部署)&lt;/p&gt;
&lt;p&gt;这时出现如下提示表示正确：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;…………（省略内容）&lt;br&gt;Branch master set up to track remote branch master from &lt;a href=&quot;https://github.com/xifengxx/xifengxx.github.io.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/xifengxx/xifengxx.github.io.git&lt;/a&gt;.&lt;br&gt;To &lt;a href=&quot;https://github.com/xifengxx/xifengxx.github.io.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/xifengxx/xifengxx.github.io.git&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fb62809…9b7c22e HEAD -&amp;gt; master (forced update)&lt;br&gt;INFO  Deploy done: git&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;到这里，个人博客已经部署到GitHub上了。可以输入网址查看博客：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;xifengxx.github.io&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;快捷键&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hexo g == hexo generate&lt;/li&gt;
&lt;li&gt;hexo d == hexo deploy&lt;/li&gt;
&lt;li&gt;hexo s == hexo server&lt;/li&gt;
&lt;li&gt;hexo n == hexo new&lt;br&gt;还能组合使用，如：&lt;/li&gt;
&lt;li&gt;hexo d -g&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;参考资源&quot;&gt;&lt;a href=&quot;#参考资源&quot; class=&quot;headerlink&quot; title=&quot;参考资源&quot;&gt;&lt;/a&gt;参考资源&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://sunwhut.com/2015/10/30/buildBlog/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sunwhut’s 博客&lt;/a&gt; ☆☆☆☆☆推荐。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.arao.me/2015/hexo-next-theme-optimize-seo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;arao博客&lt;/a&gt; :Hexo博客优化&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;配置SSH-Key&quot;&gt;&lt;a href=&quot;#配置SSH-Key&quot; class=&quot;headerlink&quot; title=&quot;配置SSH Key&quot;&gt;&lt;/a&gt;配置SSH Key&lt;/h3&gt;&lt;p&gt;用SSH Key将本地git项目与远程GitHub建立联系。&lt;br&gt;定位到目标文件夹
    
    </summary>
    
      <category term="博客搭建" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>如何通过Github Pages + hexo 搭建个人博客</title>
    <link href="http://yoursite.com/2016/03/13/%E9%80%9A%E8%BF%87Github%20Pages%20+%20Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2016/03/13/通过Github Pages + Hexo搭建博客/</id>
    <published>2016-03-12T16:09:51.000Z</published>
    <updated>2016-04-07T01:13:28.000Z</updated>
    
    <content type="html">&lt;p&gt;这是在github page上建立的个人博客站点，专注WEB前端开发技术知识，有别于个人独立博客站点：&lt;a href=&quot;http://www.xifengxx.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;西风博客&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;为什么要搭建个人博客呢？&quot;&gt;&lt;a href=&quot;#为什么要搭建个人博客呢？&quot; class=&quot;headerlink&quot; title=&quot;为什么要搭建个人博客呢？&quot;&gt;&lt;/a&gt;为什么要搭建个人博客呢？&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;个人知识积累。&lt;br&gt;经历过那么多，是不是想把自己的经历、想法观点给记录下来，网站是个不错的选择。&lt;br&gt;俗话说得好，好记性不如烂笔头。你不写出来，是会遗忘的，那是一笔多么宝贵的财富啊。同时，你在写的过程中，你会思考、会反思自己的过往经历，更能理性的认清生活，了解自己，积累经验教训。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自由无拘束。&lt;br&gt;你可能会说，我通过新浪微博、网易博客、QQ空间，照样可以写日记啊，何必多此一举，建自己的网站呢？&lt;br&gt;的却可以，但使用这些空间或服务的时候，必定会受到诸多限制，敏感词汇会被屏蔽，甚至你的博客都有可能被封。而自己的网站，自己想干啥就干啥，自由度很高。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;交流分享。&lt;br&gt;人与人之间是需要交流学习的，而通过网站这种形式，将自己的思想、经历、生活等展现出来，与别人分享，能让他人更加认识你，成为朋友的几率便更好，如此，你能找到志同道合的朋友，形成所谓的圈子。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;工作机会。&lt;br&gt;通过网站，你可以积累各方面的经验，让别人认识你，如果有合适的工作机会，别人考虑你的几率是不是会增大很多？&lt;br&gt;因为通过你的网站、你的文章，别人能更深刻认识你这个人，和你的专业度。&lt;br&gt;同时，你的网站相当于你的精彩简历，实力的证明，找工作时附上个人网站，有兴趣的HR会更看重你，因为仅通过面谈是会遗漏很多信息的，透过文字更能全面的了解一个人的过往经历。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;如何搭建个人博客？&quot;&gt;&lt;a href=&quot;#如何搭建个人博客？&quot; class=&quot;headerlink&quot; title=&quot;如何搭建个人博客？&quot;&gt;&lt;/a&gt;如何搭建个人博客？&lt;/h3&gt;&lt;p&gt;可以参看我写过的两篇文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.xifengxx.com/web-front-end/wordpress/161.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何搭建个人博客网站？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.xifengxx.com/wordpress-study&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;利用WordPress快速搭建个人网站教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;关于本博客&quot;&gt;&lt;a href=&quot;#关于本博客&quot; class=&quot;headerlink&quot; title=&quot;关于本博客&quot;&gt;&lt;/a&gt;关于本博客&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;基于Github Page搭建，主要记录个人学习Web前端开发技术过程中记录、总结、学习的各类知识、经验。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;阮一峰 &lt;a href=&quot;http://www.ruanyifeng.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阮一峰博客&lt;/a&gt;曾说过：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;喜欢写Blog的人，会经历三个阶段:&lt;/p&gt;
&lt;p&gt;第一阶段，刚接触Blog，觉得很新鲜，试着选择一个免费空间来写。&lt;/p&gt;
&lt;p&gt;第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客。&lt;/p&gt;
&lt;p&gt;第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管，自己只负责写文章。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我现在正在向第三阶段过渡，待完全掌握前端技术后，会重新制作个人博客，然后将其迁移到github上来。&lt;/p&gt;
&lt;h3 id=&quot;Github-Page-个人博客如何搭建？&quot;&gt;&lt;a href=&quot;#Github-Page-个人博客如何搭建？&quot; class=&quot;headerlink&quot; title=&quot;Github Page 个人博客如何搭建？&quot;&gt;&lt;/a&gt;Github Page 个人博客如何搭建？&lt;/h3&gt;&lt;p&gt;使用Github Page搭建个人博客有3种方式（个人了解的就这么多，也可能有其他方式）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Github Pages + Jekyll (需下载Ruby+Devkit) &lt;a href=&quot;http://cnfeat.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Github Pages + Hexo   &lt;a href=&quot;http://wsgzao.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Github Pages + Hugo   &lt;a href=&quot;http://blog.coderzh.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;互联网上关于这类教程非常多，其中很多作者写的非常好，堪称傻瓜式教程，只要按照其步骤便可以快速搭建起个人博客。&lt;br&gt;这里便引用他人的详细教程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方法1：&lt;br&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阮一峰博客&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/purediy/archive/2013/03/07/2948892.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;雨知博客&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://beiyuu.com/github-pages/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BeiYuu&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;方法2：&lt;br&gt;&lt;a href=&quot;http://zipperary.com/2013/05/28/hexo-guide-2/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Zippera博客&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://sunwhut.com/2015/10/30/buildBlog/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sunwhut博客&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;方法3：&lt;br&gt;&lt;a href=&quot;http://blog.coderzh.com/2015/08/29/hugo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CoderZh博客&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Github-Page-hexo搭建博客&quot;&gt;&lt;a href=&quot;#Github-Page-hexo搭建博客&quot; class=&quot;headerlink&quot; title=&quot;Github Page + hexo搭建博客&quot;&gt;&lt;/a&gt;Github Page + hexo搭建博客&lt;/h4&gt;&lt;p&gt;我的这个博客是使用方法2搭建的，基于Github Page + hexo搭建的。（原本最开始是准备用方法1的，结果测试后发现Jeky11好像不支持XP系统，无奈只能选用其他方法。）&lt;br&gt;以下详细介绍这种方法搭建博客注意点：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;工具：Github + Node.JS + Hexo&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://desktop.github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt; ——Win7及以上系统适用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.JS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://git-scm.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git&lt;/a&gt;   ——XP/Win7及以上系统皆适用&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Github和Git这两个工具，任选其一即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;XP系统适用教程：&lt;/strong&gt;&lt;br&gt;此文章使用的Git工具是：Github(工具下载见上面链接)&lt;br&gt;教程链接：&lt;a href=&quot;http://zipperary.com/2013/05/28/hexo-guide-2/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Zippera博客&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Win7及以上系统适用教程：&lt;/strong&gt;&lt;br&gt;此文章使用的Git工具是：Git(工具下载见上面链接)&lt;br&gt;教程链接：&lt;a href=&quot;http://wsgzao.github.io/post/hexo-guide/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hello Dog博客&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;可能出现的问题：（以下问题是我搭建时碰到的）&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ hexo deploy&lt;br&gt;ERROR Deployer not found: git&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrt0g.com1.z0.glb.clouddn.com/git-hexo%20deploy.png&quot; alt=&quot;图片&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决方法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方法1：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在_config.yml 中设置 deploy中的type一项为git。(我测试过这种方法，&lt;em&gt;失败&lt;/em&gt;)&lt;br&gt;（deploy下的”type”/“repository”/“branch”三项冒号后面需要空一格输入，正确格式如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repository: https://github.com/xifengxx/xifengxx.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方法2：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在git中运行：图片1-4，解决问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrt0g.com1.z0.glb.clouddn.com/git-hexo%20deploy%201.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrt0g.com1.z0.glb.clouddn.com/git-hexo%20deploy%202.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrt0g.com1.z0.glb.clouddn.com/git-hexo%20deploy%203.png&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrt0g.com1.z0.glb.clouddn.com/git-hexo%20deploy%204.png&quot; alt=&quot;4&quot;&gt;&lt;/p&gt;
&lt;p&gt;输入github博客网站：xifengxx.github.io.git，成功创建。&lt;/p&gt;
&lt;h3 id=&quot;引申阅读：&quot;&gt;&lt;a href=&quot;#引申阅读：&quot; class=&quot;headerlink&quot; title=&quot;引申阅读：&quot;&gt;&lt;/a&gt;引申阅读：&lt;/h3&gt;&lt;p&gt;FarBox、Jekyll、Octopress、ghost、marboo、Hexo、Medium、Logdown、prose.io，这些博客程序有什么特点？&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.zhihu.com/question/21981094&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知乎&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这是在github page上建立的个人博客站点，专注WEB前端开发技术知识，有别于个人独立博客站点：&lt;a href=&quot;http://www.xifengxx.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;西风博客&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id
    
    </summary>
    
      <category term="博客搭建" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Github Pages" scheme="http://yoursite.com/tags/Github-Pages/"/>
    
  </entry>
  
  <entry>
    <title>网易微专业之《前端开发工程师》学习笔记及总结（终）</title>
    <link href="http://yoursite.com/2016/03/03/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-e5-8f-8a-e6-80-bb-e7-bb-93/"/>
    <id>http://yoursite.com/2016/03/03/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-e5-8f-8a-e6-80-bb-e7-bb-93/</id>
    <published>2016-03-03T11:00:53.000Z</published>
    <updated>2016-04-07T06:47:16.000Z</updated>
    
    <content type="html">&lt;p&gt;间隔了一段时间没有在博客写学习笔记了，因为网易的前端开发工程师微专业课程学习时限比较紧，边学习边写博客会拖慢学习进程，所以没有更新博文。&lt;br&gt;在加上农历春节前后事务比较繁忙，也没来得及更新博客。&lt;/p&gt;
&lt;p&gt;直到今天（3月3日），我才全部看完网易微专业-前端开发工程师的全部视频课件，做完全部的笔记。&lt;/p&gt;
&lt;p&gt;整理笔记时，发现笔记内容非常多，有很多的图片，通过上传博文的方式，预计还要更新几十篇，考虑到网站虚拟主机容量，以及发布文章排版耗时问题，遂决定将笔记整理后上传到百度云空间，大家可以直接下载笔记后自行查阅相关内容，这样大家都省事，简单直接高效。&lt;br&gt;（PS:所谓你好，我好，大家都好！biaoqing;-);-);-)）&lt;/p&gt;
&lt;p&gt;以下是全部笔记下载链接，有需要的同学可自行下载：&lt;br&gt;《JavaScript程序设计》笔记 &lt;a href=&quot;http://pan.baidu.com/s/1i4hrnZf&quot; title=&quot;网易微专业-前端开发工程师-JavaScript程序设计笔记&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;《页面制作》笔记 &lt;a href=&quot;http://pan.baidu.com/s/1gedrJMF&quot; title=&quot;-网易微专业-前端开发工程师-页面制作笔记&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;《DOM编程艺术》笔记 &lt;a href=&quot;http://pan.baidu.com/s/1c0RS38c&quot; title=&quot;网易微专业-前端开发工程师-DOM编程艺术笔记&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;《页面架构》笔记 &lt;a href=&quot;http://pan.baidu.com/s/1eQPMBL4&quot; title=&quot;前端开发工程师-页面架构笔记&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;《产品前端架构》笔记 &lt;a href=&quot;http://pan.baidu.com/s/1i42qenb&quot; title=&quot;网易微专业 前端开发工程师-产品前端架构笔记&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;五门课程笔记汇总：下载地址&lt;/p&gt;
&lt;p&gt;每一门课程笔记包含两个版本：PDF版 + WORD版，方便进行修改。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;学习总结：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;网易云课堂的《前端开发工程师》微专业，共有5门课程。我参加的是第三期，微专业从2015.12.14日开始，截止至2016.3.31日，历时4个月。&lt;/p&gt;
&lt;p&gt;我想说的是，这个课程对于0基础的同学而言，有很大的难度，特别是其中的JS进阶篇、DOM编程艺术、产品前端架构、组件等章节内容，难度很大。&lt;/p&gt;
&lt;p&gt;打一个比方，你刚开始学习加减乘除法则操作，老师就已经开始讲解函数、积分了，自然听起课来，云里雾里，其中欠缺的知识积累太多了。&lt;/p&gt;
&lt;p&gt;正因为难度很大，才需要加倍学习，看一遍看不懂，再看一遍，还是不懂，搜索查询资料，加深理解记忆。&lt;/p&gt;
&lt;p&gt;因此，我是怀着痛并充实的学完这个课程的。学完后，对前端开发工程师这个IT岗位有了整体而系统的认识，知道它涉及到哪些知识点，自己欠缺哪些内容，进而有针对性的查漏补缺，以期尽快步入前端的大门。&lt;/p&gt;
&lt;p&gt;作家格拉德威尔在《异类》一书中指出：人们眼中的天才之所以卓越非凡，并非天资超人一等，而是付出了持续不断的努力。1万小时的锤炼是任何人从平凡变成超凡的必要条件。&lt;br&gt;他将此称为&lt;strong&gt;“一万小时定律”&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;要成为某个领域的专家，需要10000小时，按比例计算就是：如果每天工作八个小时，一周工作五天，那么成为一个领域的专家至少需要五年。&lt;/p&gt;
&lt;p&gt;因此：任何人成功，在任何的领域都需要一万个小时的苦练，都需要苦练一万个小时。如果没有基本功谈飞猪那真的是机会主义者，没有任何一个成功者不经过一万小时的苦练能够成功的。&lt;/p&gt;
&lt;p&gt;而属于我的前端开发工程师之路才刚刚开始，需要继续学习，每天学习，每天进步，这样，成功就是顺其自然的结果。&lt;/p&gt;
&lt;p&gt;当然，这需要大毅力，大恒心，强约束。&lt;/p&gt;
&lt;p&gt;但这一切都是值得的，朝着自己梦想的目标前行，痛并快乐着。&lt;/p&gt;
&lt;p&gt;谨以此文记录我的前端学习。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;间隔了一段时间没有在博客写学习笔记了，因为网易的前端开发工程师微专业课程学习时限比较紧，边学习边写博客会拖慢学习进程，所以没有更新博文。&lt;br&gt;在加上农历春节前后事务比较繁忙，也没来得及更新博客。&lt;/p&gt;
&lt;p&gt;直到今天（3月3日），我才全部看完网易微专业-前端开发工程师的
    
    </summary>
    
      <category term="网易微专业·前端开发工程师" scheme="http://yoursite.com/categories/%E7%BD%91%E6%98%93%E5%BE%AE%E4%B8%93%E4%B8%9A%C2%B7%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
    
      <category term="前端开发工程师学习笔记" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>HTTP协议及相关知识</title>
    <link href="http://yoursite.com/2016/03/03/HTTP%E5%8D%8F%E8%AE%AE%E7%9F%A5%E5%A4%9A%E5%B0%91/"/>
    <id>http://yoursite.com/2016/03/03/HTTP协议知多少/</id>
    <published>2016-03-03T11:00:53.000Z</published>
    <updated>2016-04-07T06:51:02.000Z</updated>
    
    <content type="html">&lt;p&gt;HTTP，或者超文本传输协议，是上世纪80年代由蒂姆.伯纳斯.李发明的。&lt;br&gt;它是一个规则系统，是一种协议，把应用程序和超文本文档之间的传输联系起来。换句话说，HTTP 就是机器之间彼此沟通的一个协议，或者说一个消息格式。&lt;br&gt;HTTP 遵循一个简单的模型：从客户端发出请求到服务器并等待响应。因此它也被认为是一种“请求–响应协议”。请求和响应都是文本信息，或者说是字符串，信息写法遵循着一个规则，能保证其他机器能够理解上面的内容。&lt;/p&gt;
&lt;h3 id=&quot;HTTP请求&quot;&gt;&lt;a href=&quot;#HTTP请求&quot; class=&quot;headerlink&quot; title=&quot;HTTP请求&quot;&gt;&lt;/a&gt;HTTP请求&lt;/h3&gt;&lt;p&gt;每一个HTTP请求都会得到一个响应，哪怕这响应是一个错误响应.(有时响应会超时)&lt;br&gt;GET请求：向服务器发起请求数据；&lt;br&gt;POST请求：给服务器提交数据&lt;/p&gt;
&lt;h4 id=&quot;GET请求&quot;&gt;&lt;a href=&quot;#GET请求&quot; class=&quot;headerlink&quot; title=&quot;GET请求&quot;&gt;&lt;/a&gt;GET请求&lt;/h4&gt;&lt;p&gt;GET 请求一般出现在超链接或者浏览器的地址栏里。当你在你的浏览器地址栏里输入类似 &lt;a href=&quot;http://www.reddit.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.reddit.com&lt;/a&gt; 这样的地址的时候，你就是在发起一个 GET 请求。你让浏览器去取这个地址上的资源，这就意味着我们在整本书里一直在使用GET请求。在你点击 web 应用上的超链接的时候也会发生同样的事情。超链接的默认行为就是向一个 URL 发送GET请求。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;GET 请求经常用于取得一个资源，而且大部分超链接都是 GET 请求。&lt;/li&gt;
&lt;li&gt;一个 GET 请求的响应可以是任何东西，但是如果响应是一个 HTML 并且里面引用了其他资源，你的浏览器会自动对这些资源发起请求，而一个纯粹的 HTTP 工具则不会。&lt;/li&gt;
&lt;li&gt;使用 GET 请求的时候在大小和安全性上有一些限制。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;POST请求&quot;&gt;&lt;a href=&quot;#POST请求&quot; class=&quot;headerlink&quot; title=&quot;POST请求&quot;&gt;&lt;/a&gt;POST请求&lt;/h4&gt;&lt;p&gt;浏览器里的典型 POST 使用案例就是你提交一个表单的时候。POST 请求允许我们向服务器发送更大或者敏感的数据，比如图片或者视频。&lt;br&gt;POST 请求也能避免你使用 GET 请求时的查询字符串长度限制问题。通过 POST 请求，我们可以给服务器发送更大的数据。&lt;/p&gt;
&lt;h4 id=&quot;HTTP头部&quot;&gt;&lt;a href=&quot;#HTTP头部&quot; class=&quot;headerlink&quot; title=&quot;HTTP头部&quot;&gt;&lt;/a&gt;HTTP头部&lt;/h4&gt;&lt;p&gt;HTTP 头部允许客户端和服务器在请求/响应的 HTTP 周期里发送额外的信息。头部，通常是以冒号分隔的键值对儿，一般是纯文本格式的。&lt;/p&gt;
&lt;h4 id=&quot;请求头部-Request-Headers&quot;&gt;&lt;a href=&quot;#请求头部-Request-Headers&quot; class=&quot;headerlink&quot; title=&quot;请求头部 Request Headers&quot;&gt;&lt;/a&gt;请求头部 Request Headers&lt;/h4&gt;&lt;p&gt;请求头部提供更多关于服务器和要获取的资源的信息。一些有用的请求头部是:&lt;/p&gt;
&lt;p&gt;字段名          |  描述                    |    举例&lt;br&gt;Host            |  服务器域名              |    Host:www.reddit.com&lt;br&gt;—————-|————————- | ————————-&lt;br&gt;Accept-Language |  可接受的语言            |    Accept-Language: en-US，en;q=0.8&lt;br&gt;User-Agent      |  一个标识客户端的字符串  |    User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML，like Gecko) Chrome/38.0.2125.101 Safari/537.36&lt;br&gt;Connection      |   客户端连接的类型       |    Connection: keep-alive&lt;/p&gt;
&lt;h3 id=&quot;处理响应&quot;&gt;&lt;a href=&quot;#处理响应&quot; class=&quot;headerlink&quot; title=&quot;处理响应&quot;&gt;&lt;/a&gt;处理响应&lt;/h3&gt;&lt;p&gt;服务器返回的原始数据就是所谓的响应。&lt;/p&gt;
&lt;h4 id=&quot;状态码&quot;&gt;&lt;a href=&quot;#状态码&quot; class=&quot;headerlink&quot; title=&quot;状态码&quot;&gt;&lt;/a&gt;状态码&lt;/h4&gt;&lt;p&gt;状态码是服务器接收到请求后返回的标识请求状态的三位数.在状态码的旁边，就是描述这个状态码的状态文本.&lt;br&gt;常见的状态码有：&lt;br&gt;状态码     |   状态文本                 |     含义&lt;br&gt;———–|—————————-|—————————&lt;br&gt;200        |    OK                      |     请求被正确处理&lt;br&gt;302        |    Found                   |     所请求的资源已暂时更改.通常会重定向到另一个 URL&lt;br&gt;404        |    Not Found               |     所请求的资源无法找到&lt;br&gt;500        |    Internal Server Error   |       服务器出现一般性错误&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;302 Redirect（重定向）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当一个资源的位置移动了会发生什么呢？ 最通用的解决方案是把对旧 URL 的请求重新引导到新 URL 上.这种重新引导请求的行为有一个术语叫重定向（ redirect ）。当你的浏览器看到一个 302 响应状态码的时候，他就知道这个资源已经移动到别处了，然后就会自动跳转到 Location 响应头部里指定的 URL 。&lt;br&gt;例子：&lt;br&gt;比如说你想要看 GitHub 上的账户配置，你就要访问这个链接 &lt;a href=&quot;https://github.com/settings/profile&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/settings/profile&lt;/a&gt; 。但是，要有访问账户配置页面的权限，你必须先登录。如果你没有登录就访问这个链接，浏览器会把你送到登录页面去。当你填写正确的登录信息后，你就会被重定向到你最早想访问的页面。这个是大多数 web 应用的通用工作流程。&lt;br&gt;当你在浏览器里输入 &lt;a href=&quot;https://github.com/settings/profile时，浏览器会直接按照重定向的指示给你展示出&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/settings/profile时，浏览器会直接按照重定向的指示给你展示出&lt;/a&gt; GitHub 的登录页面:&lt;br&gt;其Location响应头部如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Location: &lt;a href=&quot;https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fsettings%2Fprofile&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fsettings%2Fprofile&lt;/a&gt;&lt;br&gt;这个 URL 里有一个 return_to 参数，它的值就是在登录之后客户端要重定向到的 URL。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;响应头部&quot;&gt;&lt;a href=&quot;#响应头部&quot; class=&quot;headerlink&quot; title=&quot;响应头部&quot;&gt;&lt;/a&gt;响应头部&lt;/h4&gt;&lt;p&gt;响应头部提供了更多关于服务器返回的资源的信息。让我们来看看一些常见的响应头部:&lt;br&gt;头部名称            |   描述                   |  举例&lt;br&gt;——————–|————————–|————————-&lt;br&gt;Content-Encoding    |   数据的编码类型         |  Content-Encoding: gzip&lt;br&gt;Server              |   服务器的名称           |  Server:thin 1.5.0 codename Knife&lt;br&gt;Location            |   通知客户端新的资源位置 | Location: &lt;a href=&quot;http://www.github.com/login&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.github.com/login&lt;/a&gt;&lt;br&gt;Content-Type        |   响应数据的类型         |  Content-Type:text/html; charset=UTF-8&lt;/p&gt;
&lt;h4 id=&quot;消息正文&quot;&gt;&lt;a href=&quot;#消息正文&quot; class=&quot;headerlink&quot; title=&quot;消息正文&quot;&gt;&lt;/a&gt;消息正文&lt;/h4&gt;&lt;p&gt;HTTP响应中的原始数据。&lt;/p&gt;
&lt;h3 id=&quot;有状态的WEB应用&quot;&gt;&lt;a href=&quot;#有状态的WEB应用&quot; class=&quot;headerlink&quot; title=&quot;有状态的WEB应用&quot;&gt;&lt;/a&gt;有状态的WEB应用&lt;/h3&gt;&lt;p&gt;HTTP 协议是无状态的。换句话说，在你的各次请求之间，服务器是不会保留你的 “状态” 信息。&lt;br&gt;&lt;img src=&quot;http://book.haoduoshipin.com/tealeaf-http/images/http_client_server.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;每一次请求都被认为是一次全新的请求，不同的请求之间并不知道对方的存在.这种” 无状态性 “使得 HTTP 和互联网都是 “去中心化” 的，不会轻易被人掌控。&lt;/p&gt;
&lt;p&gt;web 开发者常用的实现 “有状态” 体验的技术手段,主要包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;会话（ session ）&lt;/li&gt;
&lt;li&gt;Cookies&lt;/li&gt;
&lt;li&gt;异步 javascript 调用（ AJAX ）&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;会话（session）&quot;&gt;&lt;a href=&quot;#会话（session）&quot; class=&quot;headerlink&quot; title=&quot;会话（session）&quot;&gt;&lt;/a&gt;会话（session）&lt;/h4&gt;&lt;p&gt;人们可以把这个无状态的HTTP 协议通过某种方式保持状态。&lt;br&gt;在客户端（一般就是指浏览器）的帮助下，HTTP 的行为会让人觉得它会在客户端与服务器之间维护一个有状态的连接，尽管实际并没有。达到这种效果的一个办法就是， 服务器在发送响应数据给客户端的时候带一个唯一的令牌（英文叫 token，就是一串数）。随后不论何时客户端向服务器发起请求的时候都把这个令牌附加在后面，让服务器能够辨识这个客户端。在 web 开发领域我们把这个来回传递的令牌叫做会话标识符（ session identifier ）。&lt;/p&gt;
&lt;p&gt;这种在客户端与服务器之间传递会话 id的机制，能让服务器创建一种各次请求之间的持续连接状态。Web 开发人员利用这种人造的状态，来构建复杂的应用程序。即使这样，每一个请求严格上来说还是无状态的，各次请求之间并不知道彼此的存在。&lt;/p&gt;
&lt;p&gt;这种人造状态，会有几个后果。第一，必须检查每个请求，查看它是否包含会话标识符。第二，如果请求有会话标识符，也就是有一个会话 id，服务器必须检查每一个会话 id ，确保这些会话 id 是没有过期的，也就是服务器需要维护一些关于如何处理会话过期，如何存储会话数据的规则。第三，服务器要基于这个会话 id 取出这个会话的数据。最后，服务器要根据取出的会话数据重新创建应用程序的状态（ 比如，一个请求对应的 HTML )，然后将其作为响应返回给客户端。&lt;/p&gt;
&lt;p&gt;这就意味着服务器必须非常辛勤的工作，来模拟这个有状态的用户体验。每一个请求都会有一个独立的响应，哪怕这次的响应跟前一个响应没有任何区别。&lt;br&gt;举个例子，如果你登录到 Facebook 上，服务器会给你一个响应，生成你看到的主页。这个响应是一个十分复杂的 HTML 页面。Facebook 的服务器会把页面上所有照片和留言的赞和评论都组合起来，然后显示在你的时间线上。生成这样一个页面的成本非常高。现在，如果你点了某个照片下面的” 赞 “链接，理论上，Facebook 会重新生成整个页面，它会把你赞过的照片的被赞数加 1，然后把整个 HTML 作为响应返回给你，尽管除了这个赞数以外大部分内容都没有改变。 庆幸的是，实际中 Facebook 使用 Ajax 代替了全页面刷新。不然的话，刷新一个页面会花费很长时间。&lt;/p&gt;
&lt;p&gt;服务器使用了很多先进的技术来优化会话和实现安全机制，不过这些话题都超出了本书的范围，暂且放下。现在我们来聊一个常用的存储会话信息的方法: 浏览器 cookie 。&lt;/p&gt;
&lt;h4 id=&quot;Cookies&quot;&gt;&lt;a href=&quot;#Cookies&quot; class=&quot;headerlink&quot; title=&quot;Cookies&quot;&gt;&lt;/a&gt;Cookies&lt;/h4&gt;&lt;p&gt;cookie 就是在一个请求/响应周期内，服务器发送给客户端（通常就是浏览器），并存储在客户端的一段数据。Cookies 或者 HTTP cookies，就是存储在浏览器里包含着会话信息的小文件。&lt;br&gt;默认情况下，大部分浏览器的 cookies 都是启用的。当你第一次访问一个网站的时候，服务器会给你发送会话信息并将其存储在你本地电脑浏览器的 cookie 里。要注意的是真正的会话数据是存在服务器上的。在客户端发起每一个请求的时候，服务器就会比对客户端的 cookie 和服务器上的会话数据，用来标识当前的会话。通过这种方法，当你再次访问同一个网站的时候，服务器就会通过 cookie 和里面的信息来认出你的会话。&lt;br&gt;&lt;strong&gt;会话数据是由服务器生成并存储在服务器上，会话 id 以 cookie 的形式发送到客户端上。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&quot;AJAX&quot;&gt;&lt;a href=&quot;#AJAX&quot; class=&quot;headerlink&quot; title=&quot;AJAX&quot;&gt;&lt;/a&gt;AJAX&lt;/h4&gt;&lt;p&gt;AJAX 是”异步 javascript 和 XML “ 的简称（ Asynchronous JavaScript and XML ）。它的主要特点就是允许浏览器发送请求和处理响应的时候不用刷新整个页面。&lt;br&gt;举个例子，如果你登录到 Facebook 上，服务器会给你一个响应，生成你看到的主页。 这个响应是一个十分复杂的 HTML 页面。Facebook 的服务器会把各种信息组合起来，显示在你的时间线上。在前面的讨论中，我们知道，为每一个请求都重新生成一次页面的成本是非常高的（记住，你的每一个动作，点个链接，提交个表单，都会发起一个新的请求）。&lt;br&gt;当使用 AJAX 的时候，所有客户端发送的请求都是异步的，就是说页面不会刷新。&lt;br&gt;AJAX 请求就像是普通请求：发送到服务器的请求依然跟普通请求一样有着一个 HTTP 请求该有的所有组成部分，并且服务器处理 AJAX 请求的方法跟处理普通请求也是一样的。唯一不同就是，不是通过浏览器刷新来处理响应，而通常由客户端的一些 javascript 代码来处理。&lt;/p&gt;
&lt;h3 id=&quot;HTTP安全相关&quot;&gt;&lt;a href=&quot;#HTTP安全相关&quot; class=&quot;headerlink&quot; title=&quot;HTTP安全相关&quot;&gt;&lt;/a&gt;HTTP安全相关&lt;/h3&gt;&lt;h4 id=&quot;HTTPS-安全的HTTP&quot;&gt;&lt;a href=&quot;#HTTPS-安全的HTTP&quot; class=&quot;headerlink&quot; title=&quot;HTTPS(安全的HTTP)&quot;&gt;&lt;/a&gt;HTTPS(安全的HTTP)&lt;/h4&gt;&lt;p&gt;在客户端和服务器互相发送请求和响应的时候，所有的请求和响应里的信息都是通过明文字符串发送的。如果一个恶意的黑客连接到同一网络，他就可以利用数据包嗅探技术来读取来回发送的消息。&lt;br&gt;正如我们已知道的，请求可以包含会话 id ，它唯一地标识你到服务器之间的联系，所以如果别人复制了这个会话 id ，他们可以手动创建到服务器的请求，伪装成你的客户端，甚至都不需要你的用户名和密码就可以自动登陆。&lt;/p&gt;
&lt;p&gt;这种情况就需要安全的 HTTP 也就是 HTTPS 来帮忙啦。通过 HTTPS 访问资源的时候，通常以 https:// 开头而不是 http:// ，而且通常在边上都会有个小锁子的图标：&lt;br&gt;&lt;img src=&quot;http://book.haoduoshipin.com/tealeaf-http/images/https_address_bar.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;通过 HTTPS 发送的请求和响应在发送前都会被加密。这意味着如果一个恶意的黑客监听 HTTP 通信，他得到的信息都是加密的和无用的。HTTPS 通过一个叫做 TLS 的加密协议来加密消息。在 TLS 开发完成前，早期 HTTPS 使用 SSL （ Secure Sockets Layer ）。这些加密协议在加密数据之前，需要先使用证书来与远程服务器进行通信来交换安全密钥。&lt;/p&gt;
&lt;h4 id=&quot;同源策略（-Same-origin-policy-）&quot;&gt;&lt;a href=&quot;#同源策略（-Same-origin-policy-）&quot; class=&quot;headerlink&quot; title=&quot;同源策略（ Same-origin policy ）&quot;&gt;&lt;/a&gt;同源策略（ Same-origin policy ）&lt;/h4&gt;&lt;p&gt;同源策略是一个重要的概念，它允许来自同一站点的资源进行互相访问而不受限制，但是会阻止其他不同站点对文档/资源的访问。换句话说它可以阻止另一个站点通过脚本来操纵本站点的文档。&lt;br&gt;&lt;strong&gt;同源的文档必须有相同的协议，主机名和端口号。&lt;/strong&gt;&lt;br&gt;举个例子，&lt;a href=&quot;http://www.test.com/aboutus.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.test.com/aboutus.html&lt;/a&gt; 上的 HTML 文档可以嵌入 &lt;a href=&quot;http://www.test.com/fancy.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.test.com/fancy.js&lt;/a&gt; 这个 javascript 文件，因为它们是同源的，有相同的协议，主机名和端口号(默认的 80) 。&lt;br&gt;反过来说，这就意味着 &lt;a href=&quot;http://www.test.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.test.com&lt;/a&gt; 上的文档不能嵌入 &lt;a href=&quot;http://www.example.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.example.com&lt;/a&gt; 上的文档，因为它们不是同源的。&lt;br&gt;同源策略是防范会话劫持的重要手段，并作为 web 应用安全的基石。&lt;br&gt;&lt;strong&gt;同源策略涉及的是访问文件内容，而不是链接，你可以随意链接到任何 URL。&lt;/strong&gt;&lt;br&gt;虽然这样很安全，但是有时 web 开发人员需要进行跨域的内容访问就会很麻烦，所以就有了跨域资源共享技术CORS 。 &lt;/p&gt;
&lt;h4 id=&quot;跨域资源共享技术-CORS&quot;&gt;&lt;a href=&quot;#跨域资源共享技术-CORS&quot; class=&quot;headerlink&quot; title=&quot;跨域资源共享技术 CORS&quot;&gt;&lt;/a&gt;跨域资源共享技术 CORS&lt;/h4&gt;&lt;p&gt;CORS是一种机制，允许我们绕过同源策略，从一个域名向另一个域名的资源发起请求。CORS的原理是添加新的 HTTP头部，来对一些域名授权，那这些域名就可以发起对本页面资源的请求。&lt;/p&gt;
&lt;h4 id=&quot;会话劫持（-Session-Hijacking-）&quot;&gt;&lt;a href=&quot;#会话劫持（-Session-Hijacking-）&quot; class=&quot;headerlink&quot; title=&quot;会话劫持（ Session Hijacking ）&quot;&gt;&lt;/a&gt;会话劫持（ Session Hijacking ）&lt;/h4&gt;&lt;p&gt;会话在维持 HTTP 的状态上扮演着重要的角色。我们也知道会话 id 作为一个唯一的令牌来唯一标识一个会话。通常，会话 id 是作为 cookie 存储在计算机上的一个随机字符串. 会话 id 随着每一个到服务器的请求被送往服务器用于唯一标识这个会话。&lt;br&gt;事实上，这也就是很多 web 应用的用户认证系统所在做的事情，当用户的用户名和密码匹配之后，会话 id 会存储在用户的浏览器里，这样他们的下一个请求就不用重新认证了。&lt;/p&gt;
&lt;p&gt;不幸的是，如果一个攻击者拿到了这个会话 id ，他就会跟用户共享这一个会话，同时也就能访问这个 web 应用了。在会话劫持攻击中，用户根本意识不到一个攻击者甚至不用知道她的用户名和密码就可以访问她的会话了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;会话劫持的对策&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;重置会话。也就是对于一个用户认证系统来说，一次成功的登录包括验证旧的会话 id 和生成一个新的会话id完成此步骤后，在下一个请求里，会要求受害者进行身份验证。然后会话 id 就会改变，这样攻击者就无法访问到这个会话了。很多网站都采取这种办法，当用户在进行敏感操作的时候保证用户身份的正确性，比如给信用卡充值或者删除账户的时候。&lt;/li&gt;
&lt;li&gt;给会话设置过期时间。那些不会过期的会话给了攻击者太多的时间去伪装成一个合法用户。如果设置了过期时间，比如 30 分钟，这样一来攻击者就不会那么从容的进行攻击了。&lt;/li&gt;
&lt;li&gt;整站使用 HTTPS 把攻击者能得到会话 id 的可能性降至最低。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;跨站脚本攻击-XSS&quot;&gt;&lt;a href=&quot;#跨站脚本攻击-XSS&quot; class=&quot;headerlink&quot; title=&quot;跨站脚本攻击 (XSS)&quot;&gt;&lt;/a&gt;跨站脚本攻击 (XSS)&lt;/h4&gt;&lt;p&gt;当你允许用户输入的 HTML 和 javascript 在你自己的网站上直接显示的时候，就有可能遭受这种攻击。&lt;/p&gt;
&lt;p&gt;如果服务器端对于用户的输入不做任何无害处理的话，这些内容就会注入到网页的内容中去，然后浏览器就会解释执行这些 HTML 和 javascript 代码。&lt;br&gt;恶意用户可以使用 HTML 和 javascript 代码对服务器或者以后访问这个页面的用户发起毁灭性的攻击。举个例子，一个攻击者可以使用 javascript 代码去获取所有在他之后访问这个页面的用户的会话 id ，然后伪装成其他用户。而这一切都发生在受害者一无所知的情况下。而且要注意的是，这种攻击也能绕过同源策略，因为这段恶意代码是存在于当前这个网站上的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;跨站脚本攻击的解决方案&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;总是对用户输入的内容做无害处理。消除有问题的输入，比如&lt;script&gt;标签，或者使用一个更安全的输入格式，比如 Markdown，这样就可以阻止 HTML 和 javascript 同时出现在用户的输入里。&lt;/li&gt;
&lt;li&gt;在显示之前转义用户输入的所有数据.如果你需要用户能够输入 HTML 和 javascript 代码，那么当你显示这些输入内容的时候要确保它们被正确转义，这样浏览器就不会把它们当做代码给执行了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://book.haoduoshipin.com/tealeaf-http/&quot;&gt;HTTP下午茶&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/script&gt;&lt;/li&gt;&lt;/ul&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;HTTP，或者超文本传输协议，是上世纪80年代由蒂姆.伯纳斯.李发明的。&lt;br&gt;它是一个规则系统，是一种协议，把应用程序和超文本文档之间的传输联系起来。换句话说，HTTP 就是机器之间彼此沟通的一个协议，或者说一个消息格式。&lt;br&gt;HTTP 遵循一个简单的模型：从客户端发出
    
    </summary>
    
      <category term="HTTP协议" scheme="http://yoursite.com/categories/HTTP%E5%8D%8F%E8%AE%AE/"/>
    
    
      <category term="HTTP" scheme="http://yoursite.com/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>网易微专业之《前端开发工程师》学习笔记（16）-JS操作符与表达式</title>
    <link href="http://yoursite.com/2016/01/25/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-8816-ef-bc-89-js/"/>
    <id>http://yoursite.com/2016/01/25/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-8816-ef-bc-89-js/</id>
    <published>2016-01-25T11:00:29.000Z</published>
    <updated>2016-04-07T06:47:16.000Z</updated>
    
    <content type="html">&lt;p&gt;以下内容为《前端开发工程师》微专业的第二门课《JavaScript程序设计》基础篇部分学习笔记。&lt;/p&gt;
&lt;h3 id=&quot;《JavaScript程序设计》之基础篇（四）&quot;&gt;&lt;a href=&quot;#《JavaScript程序设计》之基础篇（四）&quot; class=&quot;headerlink&quot; title=&quot;《JavaScript程序设计》之基础篇（四）&quot;&gt;&lt;/a&gt;《JavaScript程序设计》之基础篇（四）&lt;/h3&gt;&lt;h3 id=&quot;五、JS操作符与表达式&quot;&gt;&lt;a href=&quot;#五、JS操作符与表达式&quot; class=&quot;headerlink&quot; title=&quot;五、JS操作符与表达式&quot;&gt;&lt;/a&gt;&lt;strong&gt;五、JS操作符与表达式&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&quot;（一）JS操作符（运算符）&quot;&gt;&lt;a href=&quot;#（一）JS操作符（运算符）&quot; class=&quot;headerlink&quot; title=&quot;（一）JS操作符（运算符）&quot;&gt;&lt;/a&gt;&lt;strong&gt;（一）JS操作符（运算符）&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS操作符与表达式1.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS操作符与表达式1.png&quot; alt=&quot;JS操作符与表达式1&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;一元操作符：&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS操作符与表达式2.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS操作符与表达式2.png&quot; alt=&quot;JS操作符与表达式2&quot;&gt;&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;自增运算符**&lt;/strong&gt;：&lt;strong&gt;**++&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“++”是自增运算符，它指的是在原来值的基础上加1，i++表示“i=i+1”。该运算符有2种情况：&lt;/p&gt;
&lt;p&gt;u （1）i++：“i++”指的是在使用i之后，使i的值加1。&lt;/p&gt;
&lt;p&gt;举例：&lt;/p&gt;
&lt;p&gt;i=1;  j=i++;&lt;/p&gt;
&lt;p&gt;上面执行的结果：j的值为1，i的值为2。&lt;/p&gt;
&lt;p&gt;其实上面代码等价于下面这一段代码：&lt;/p&gt;
&lt;p&gt;i=1;j=i;i++;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;u （2）++i：“++i”指的是在使用i之前，先使i的值加1。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;举例：&lt;/p&gt;
&lt;p&gt;i=1;j=++i;&lt;/p&gt;
&lt;p&gt;上面的执行结果：j的值为2，i的值为2。&lt;/p&gt;
&lt;p&gt;其实上面代码等价于下面这一段代码：&lt;/p&gt;
&lt;p&gt;i=1;i++;j=i;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;自减运算符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;“–”是自减运算符，它指的是在原来值的基础上减1，i–表示“i=i-1”。该运算符同样有2种情况：&lt;/p&gt;
&lt;p&gt;（1）i–&lt;/p&gt;
&lt;p&gt;（2）–i&lt;/p&gt;
&lt;p&gt;举例：&lt;/p&gt;
&lt;p&gt;i=6;j=i–;//j的值为6，i的值为5&lt;/p&gt;
&lt;p&gt;i=6;j=–i;//j的值为5，i的值为5&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;算术操作符&lt;/strong&gt;&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;83&quot;&gt;+&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;94&quot;&gt;加&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;333&quot;&gt;4+6 //返回值10&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;83&quot;&gt;-&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;94&quot;&gt;减&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;333&quot;&gt;7-2 //返回值5&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;83&quot;&gt;&lt;em&gt;&lt;/em&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;94&quot;&gt;乘&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;333&quot;&gt;23 //返回值6&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;83&quot;&gt;/&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;94&quot;&gt;除&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;333&quot;&gt;12/3 //返回值4&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;83&quot;&gt;&lt;span style=&quot;color: #ff6600;&quot;&gt;%&lt;/span&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;94&quot;&gt;&lt;span style=&quot;color: #ff6600;&quot;&gt;求余&lt;/span&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;333&quot;&gt;&lt;span style=&quot;color: #ff6600;&quot;&gt;7%4 //返回值3&lt;/span&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;关系操作符&lt;/strong&gt;&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;79&quot;&gt;&lt;strong&gt;运算符&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;97&quot;&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;334&quot;&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;79&quot;&gt;&amp;lt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;97&quot;&gt;小于&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;334&quot;&gt;1&amp;lt;4 //返回true&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;79&quot;&gt;&amp;gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;97&quot;&gt;大于&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;334&quot;&gt;2&amp;gt;5 //返回false&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;79&quot;&gt;&amp;lt;=&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;97&quot;&gt;小于等于&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;334&quot;&gt;8&amp;lt;=8 //返回true&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;79&quot;&gt;&amp;gt;=&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;97&quot;&gt;大于等于&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;334&quot;&gt;3&amp;gt;=5 //返回false&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;相等操作符&lt;/strong&gt;&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;118&quot;&gt;==&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;94&quot;&gt;是否等于&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;0==false;//true;2==true;//false; “==0;//true&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;118&quot;&gt;!=&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;94&quot;&gt;是否不等于&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;5!=6 //返回true&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;118&quot;&gt;=== 和  !==&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;94&quot;&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;var num=”4”;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;num===4; //返回false;  num!==4; //返回true&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;案例：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;var a=5;var b=’5’;&lt;/p&gt;
&lt;p&gt;alert(a==b); //true 先转换类型，然后比较&lt;/p&gt;
&lt;p&gt;//alert(a===b); //false 不转换类型，直接比&lt;/p&gt;
&lt;p&gt;var a=’12’;&lt;/p&gt;
&lt;p&gt;var b=’5’;&lt;/p&gt;
&lt;p&gt;alert(a+b); //结果为125，不是17          1.字符串连接 2.数字相加&lt;/p&gt;
&lt;p&gt;alert(a-b);  //结果为7                      1.数字相减&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;逻辑操作符&lt;/strong&gt;&lt;br&gt;逻辑运算符通常用于执行布尔运算，它们常常和比较运算符一起使用来表示复杂比较运算，这些运算涉及的变量通常不止一个，而且常用于if、while和for语句中。&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td colspan=&quot;3&quot; width=&quot;594&quot;&gt;&lt;strong&gt;JavaScript中常用的算术运算符&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;66&quot;&gt;&lt;strong&gt;运算符&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;294&quot;&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;233&quot;&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;66&quot;&gt;&amp;amp;&amp;amp;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;294&quot;&gt;逻辑与，若两边表达式的值都为true，则返回true；任意一个值为false，则返回false&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;233&quot;&gt;(8&amp;gt;5)&amp;amp;&amp;amp;(4&amp;lt;6)，返回true；(8&amp;lt;5)&amp;amp;&amp;amp;(4&amp;lt;6)，返回false&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;66&quot;&gt;||&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;294&quot;&gt;逻辑或，只有表达式的值都为false，才返回false，其他情况返回true&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;233&quot;&gt;(8&amp;lt;5)||(4&amp;lt;6)，返回true；(8&amp;lt;5)&amp;amp;&amp;amp;(4&amp;gt;6)，返回false&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;66&quot;&gt;!&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;294&quot;&gt;逻辑非，若表达式的值为true，则返回false；若表达式的值为false，则返回true&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;233&quot;&gt;!(9&amp;gt;2)，返回false；!(9&amp;lt;2)，返回true&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;&lt;strong&gt;案例：&lt;/strong&gt;&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;284&quot;&gt;&lt;strong&gt;！&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;284&quot;&gt;Var flag=true; alert(!flag);//false;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alert(!0);//true&lt;/p&gt;
&lt;p&gt;Alert(![]);//false&lt;/p&gt;
&lt;p&gt;Alert(!””);//true&lt;/p&gt;
&lt;p&gt;Alert(!!1);//true&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;284&quot;&gt;&lt;strong&gt;&amp;amp;&amp;amp;&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;284&quot;&gt;Var result=true &amp;amp;&amp;amp; false;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;Var result=true &amp;amp;&amp;amp; 3; //3&lt;/p&gt;
&lt;p&gt;Var result=1&amp;amp;&amp;amp;3; //3&lt;/p&gt;
&lt;p&gt;Var result=[] &amp;amp;&amp;amp; ””; //””&lt;/p&gt;
&lt;p&gt;Var result=false &amp;amp;&amp;amp; 3; //false&lt;/p&gt;
&lt;p&gt;Var result=””&amp;amp;&amp;amp; 3; //””&lt;/p&gt;
&lt;p&gt;Var result=null &amp;amp;&amp;amp; true; //null&lt;/p&gt;
&lt;p&gt;Var num=0; var result=””&amp;amp;&amp;amp; num++;//num0&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;284&quot;&gt;&lt;strong&gt;||&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;284&quot;&gt;Var result=true || false;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;Var result=1 || 3;//1&lt;/p&gt;
&lt;p&gt;Var result=[] || ””;//[]&lt;/p&gt;
&lt;p&gt;Var result=false || 0;//0&lt;/p&gt;
&lt;p&gt;Var result=””|| 3;//3&lt;/p&gt;
&lt;p&gt;Var result=null || true;//true&lt;/p&gt;
&lt;p&gt;Var num=0;var result=3 || num++;//num 0&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;赋值操作符&lt;/strong&gt;&lt;br&gt;JavaScript中的赋值运算可以分为2种：简单赋值运算和复合赋值运算。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单赋值运算是将赋值运算符（=）右边表达式的值保存到左边的变量中。&lt;/p&gt;
&lt;p&gt;复合赋值运算结合了其他操作（如算术运算操作）和赋值操作。&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;100&quot;&gt;&lt;strong&gt;运算符&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;431&quot;&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;100&quot;&gt;=&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;431&quot;&gt;author=”helicopter”&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;100&quot;&gt;+=&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;431&quot;&gt;a+=b等价于a=a+b&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;100&quot;&gt;-=&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;431&quot;&gt;a-=b等价于a=a-b&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;100&quot;&gt;*=&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;431&quot;&gt;a&lt;em&gt;=b等价于a=a&lt;/em&gt;b&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;100&quot;&gt;/=&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;431&quot;&gt;a/=b等价于a=a/b&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;100&quot;&gt;%=&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;431&quot;&gt;a%=b等价于a=a%b&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;100&quot;&gt;&amp;amp;=&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;431&quot;&gt;a&amp;amp;=b等价于a=a&amp;amp;b（&amp;amp;是逻辑与运算）&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;100&quot;&gt;|=&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;431&quot;&gt;a|=b等价于a=a|b（|是逻辑或运算）&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;100&quot;&gt;^=&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;431&quot;&gt;a^=b等价于a=a^b（^是逻辑异或运算）&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;条件操作符&lt;/strong&gt;&lt;br&gt;条件运算符是JavaScript支持的一种特殊的运算符。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“？：”又被称作“三目运算符”、“三元运算符”，类似于if…else…条件语句。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff6600;&quot;&gt;条件 ? 表达式1 : 表达式2;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;如果“条件”为true，则表达式的值使用“表达式1”的值；如果“条件”为false，则表达式的值使用“表达式2”的值。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS操作符与表达式3.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS操作符与表达式3.png&quot; alt=&quot;JS操作符与表达式3&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;逗号操作符&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS操作符与表达式4.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS操作符与表达式4.png&quot; alt=&quot;JS操作符与表达式4&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;对象操作符&lt;/strong&gt;&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;167&quot;&gt;&lt;strong&gt;New&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;336&quot;&gt;Var cat=new Object();&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;167&quot;&gt;&lt;strong&gt;delete&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;336&quot;&gt;Var cat={name:’kitty’,age:2};&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alert(cat.name);//’kitty’&lt;/p&gt;
&lt;p&gt;Delete cat.name;&lt;/p&gt;
&lt;p&gt;Alert(cat.name);//undefined&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;167&quot;&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td rowspan=&quot;2&quot; width=&quot;336&quot;&gt;获取对象的值&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;Var cat={name:’kitty’,age:2};&lt;/p&gt;
&lt;p&gt;Alert(cat.name);//’kitty’&lt;/p&gt;
&lt;p&gt;Alert(cat[‘name’]);//’kitty’&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;167&quot;&gt;&lt;strong&gt;[]&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;167&quot;&gt;&lt;strong&gt;instanceof&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;336&quot;&gt;判断某个变量是否是某个对象的实例：&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;Var cat={name:’kitty’,age:2};&lt;/p&gt;
&lt;p&gt;Alert(cat instanceof Object);//true&lt;/p&gt;
&lt;p&gt;Alert(cat instanceof Number);//false&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;167&quot;&gt;&lt;strong&gt;in&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;336&quot;&gt;判断某个属性是否在对象中：&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;Var cat={name:’kitty’,age:2};&lt;/p&gt;
&lt;p&gt;Alert(‘name’ in cat);//true&lt;/p&gt;
&lt;p&gt;Alert(‘run’ in cat);//false&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;位操作符&lt;/strong&gt;&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;54&quot;&gt;操作符&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;57&quot;&gt;用法&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;387&quot;&gt;描述&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;54&quot;&gt;按位与&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;57&quot;&gt;a &amp;amp; b&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;387&quot;&gt;如果两个操作数对应位都是 1 的话则在该位返回 1。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;54&quot;&gt;按位或&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;57&quot;&gt;a | b&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;387&quot;&gt;如果两个操作数对应位都是 0 的话则在该位返回 0。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;54&quot;&gt;按位异或&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;57&quot;&gt;a ^ b&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;387&quot;&gt;如果两个操作数对应位只有一个 1 的话则在该位返回 1。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;54&quot;&gt;求反&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;57&quot;&gt;~ a&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;387&quot;&gt;反转操作数的每一位。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;54&quot;&gt;左移&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;57&quot;&gt;a &amp;lt;&amp;lt; b&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;387&quot;&gt;将 a 的二进制形式左移 b 位。右面的空位补零。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;54&quot;&gt;算术右移&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;57&quot;&gt;a &amp;gt;&amp;gt; b&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;387&quot;&gt;将 a 的二进制形式右移 b 位。忽略被移出的位。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;54&quot;&gt;逻辑右移&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;57&quot;&gt;a &amp;gt;&amp;gt;&amp;gt; b&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;387&quot;&gt;将 a 的二进制形式右移 b 位。忽略被移出的位，左侧补入 0。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS操作符与表达式5.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS操作符与表达式5.png&quot; alt=&quot;JS操作符与表达式5&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;位操作符：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;执行位操作时，操作符会将操作数看作一串二进制位(1和0)，而不是十进制、十六进制或八进制数字。例如，十进制的 9 就是二进制的 1001。位操作符在执行的时候会以二进制形式进行操作，但返回的值仍是标准的 JavaScript 数值。&lt;/p&gt;
&lt;p&gt;从原理上讲，位逻辑操作符的工作流程是这样的：&lt;/p&gt;
&lt;p&gt;将操作数转换为 32 位的整型数值并用二进制表示。&lt;/p&gt;
&lt;p&gt;第一操作数的每一位与第二操作数的对应位配对：第一位对第一位，第二位对第二位，以此类推。&lt;/p&gt;
&lt;p&gt;对每一对位应用操作符，最终结果按位组合起来。&lt;/p&gt;
&lt;p&gt;例如，9 的二进制表示为 1001，15 的二进制表示为 1111。所以如果对这两个数应用位逻辑操作符，结果应该像下面这样：&lt;/p&gt;
&lt;p&gt;15 &amp;amp; 9 结果为 9 (1111 &amp;amp; 1001 = 1001)&lt;/p&gt;
&lt;p&gt;15 | 9 为 15 (1111 | 1001 = 1111)&lt;/p&gt;
&lt;p&gt;15 ^ 9 为 6 (1111 ^ 1001 = 0110)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;移位操作符 &lt;/strong&gt;&lt;br&gt;移位操作符需要两个操作数：第一个是要进行移位的数值，第二个指定要对第一个数移位的数目。移位的方向由使用的操作符决定。&lt;br&gt;移位操作符将把两个操作符转换为 32 位整型数值，并返回与左操作数类型相同的结果。&lt;br&gt;&lt;strong&gt;&amp;lt;&amp;lt; (左移)&lt;/strong&gt;&lt;br&gt;该操作符将把第一个操作数向左移若干位。移出的位将被忽略。右侧空位补零。&lt;br&gt;例如，9&amp;lt;&amp;lt;2 结果为 36，因为 1001 向左移两位变成 100100，这是 36。&lt;br&gt;&lt;strong&gt;&amp;gt;&amp;gt; (算术右移)&lt;/strong&gt;&lt;br&gt;该操作符将把第一个操作数享有移若干位。移出的位将被忽略。左侧的空位补上与原来最左面位相同的值。&lt;br&gt;例如，9&amp;gt;&amp;gt;2 结果为 2，因为 1001 右移两位变成 10，这是 2。反之，-9&amp;gt;&amp;gt;2 结果为 -3，因为要考虑到符号位。&lt;br&gt;&lt;strong&gt;&amp;gt;&amp;gt;&amp;gt; (逻辑右移)&lt;/strong&gt;&lt;br&gt;该操作符将把第一个操作数享有移若干位。移出的位将被忽略。左侧的空位补零。&lt;br&gt;例如，19&amp;gt;&amp;gt;&amp;gt;2 结果为 4，因为 10011 右移两位变成 100，这是 4。对于非负数，算术右移和逻辑右移结果相同。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;操作符优先级&lt;/strong&gt;&lt;br&gt;下表列出了 JavaScript 运算符，并按优先级顺序从高到低排列。具有相同优先级的运算符按从左至右的顺序计算。&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;276&quot;&gt;&lt;strong&gt;运算符&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;276&quot;&gt;.[ ] ( )&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;字段访问、数组索引、函数调用和表达式分组&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;276&quot;&gt;++ – - ~ ! delete new typeof void&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;一元运算符、返回数据类型、对象创建、未定义的值&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;276&quot;&gt;* / %&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;相乘、相除、求余数&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;276&quot;&gt;+ - +&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;相加、相减、字符串串联&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;276&quot;&gt;&amp;lt;&amp;lt; &amp;gt;&amp;gt; &amp;gt;&amp;gt;&amp;gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;移位&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;276&quot;&gt;&amp;lt; &amp;lt;= &amp;gt; &amp;gt;= instanceof&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;小于、小于或等于、大于、大于或等于、是否为特定类的实例&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;276&quot;&gt;== != === !==&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;相等、不相等、全等，不全等&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;276&quot;&gt;&amp;amp;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;按位“与”&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;276&quot;&gt;^&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;按位“异或”&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;276&quot;&gt;|&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;按位“或”&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;276&quot;&gt;&amp;amp;&amp;amp;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;逻辑“与”&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;276&quot;&gt;||&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;逻辑“或”&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;276&quot;&gt;?:&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;条件运算&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;276&quot;&gt;= OP=&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;赋值、赋值运算（如 += 和 &amp;amp;=）&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;276&quot;&gt;,&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;357&quot;&gt;多个计算&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;圆括号用于改变由运算符优先级确定的计算顺序。这就是说，先计算完圆括号内的表达式，然后再将它的值用于表达式的其余部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;（二）表达式&quot;&gt;&lt;a href=&quot;#（二）表达式&quot; class=&quot;headerlink&quot; title=&quot;（二）表达式&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS操作符与表达式6.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS操作符与表达式6.png&quot; alt=&quot;JS操作符与表达式6&quot;&gt;&lt;/a&gt;&lt;strong&gt;（二）表达式&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;表达式是一个语句的集合，计算结果是个单一值。&lt;/p&gt;
&lt;p&gt;在JavaScript中，常见的表达式有4种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;（1）赋值表达式；&lt;/li&gt;
&lt;li&gt;（2）算术表达式；&lt;/li&gt;
&lt;li&gt;（3）布尔表达式；&lt;/li&gt;
&lt;li&gt;（4）字符串表达式；&lt;br&gt;&lt;strong&gt;赋值表达式&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在JavaScript种，赋值表达式的语法格式一般如下：&lt;/p&gt;
&lt;p&gt;变量 赋值运算符 表达式;&lt;/p&gt;
&lt;p&gt;赋值表达式在计算过程中是按照自右而左结合的。其中有简单的赋值表达式，如n=1；也有定义变量时，给变量赋初始值的赋值表达式，如var str=”我爱Javascript”;还有使用比较复杂的赋值运算符连接的赋值表达式，如n+=6。&lt;br&gt;&lt;strong&gt;算术表达式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;算术表达式就是用算术运算符连接的JavaScript语句。如a+b+c、20-12、m*n、m/n、sum%3等，都是合法的算术运算符的表达式。&lt;/p&gt;
&lt;p&gt;算术运算符的两边必须都是数值，若在“+”运算中存在字符或字符串，则该表达式将是字符串表达式.因为JavaScript会自动将数值型数据转换成字符串型数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;布尔表达式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;布尔表达式一般用来判断某个条件或者表达式是否成立，其结果只能为true或false。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;字符串表达式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;字符串表达式指的就是操作字符串的语句。&lt;/p&gt;
&lt;p&gt;“数字+字符串”返回值一定是字符串，因为JavaScript会自动将数值型数据转换成字符串型数据。&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;553&quot;&gt;&lt;/td&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;html xmlns=”&lt;a href=&quot;http://www.w3.org/1999/xhtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.w3.org/1999/xhtml&lt;/a&gt;“&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;head&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;script type=”text/javascript”&amp;gt;&lt;/p&gt;
&lt;p&gt;var a=”绿叶学习网”;&lt;/p&gt;
&lt;p&gt;var b=”JavaScript”;&lt;/p&gt;
&lt;p&gt;var c=”入门教程”;&lt;/p&gt;
&lt;p&gt;var str = a+b+c;&lt;/p&gt;
&lt;p&gt;document.write(str);&lt;/p&gt;
&lt;p&gt;&amp;lt;/script&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/head&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;body&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/body&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/html&amp;gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;在浏览器预览效果如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS操作符与表达式7.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS操作符与表达式7.png&quot; alt=&quot;JS操作符与表达式7&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;参考资源：&quot;&gt;&lt;a href=&quot;#参考资源：&quot; class=&quot;headerlink&quot; title=&quot;参考资源：&quot;&gt;&lt;/a&gt;&lt;strong&gt;参考资源：&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;JavaScript 中的相等性判断&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Equality_comparisons_and_sameness&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Equality_comparisons_and_sameness&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运算符优先级：&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JS操作符、运算符汇总表格：&lt;br&gt;&lt;a href=&quot;http://www.jb51.net/article/31518.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jb51.net/article/31518.htm&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JS运算符优先级：&lt;br&gt;&lt;a href=&quot;https://technet.microsoft.com/zh-cn/library/z3ks45k7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://technet.microsoft.com/zh-cn/library/z3ks45k7&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容为《前端开发工程师》微专业的第二门课《JavaScript程序设计》基础篇部分学习笔记。&lt;/p&gt;
&lt;h3 id=&quot;《JavaScript程序设计》之基础篇（四）&quot;&gt;&lt;a href=&quot;#《JavaScript程序设计》之基础篇（四）&quot; class=&quot;headerlin
    
    </summary>
    
      <category term="网易微专业·前端开发工程师" scheme="http://yoursite.com/categories/%E7%BD%91%E6%98%93%E5%BE%AE%E4%B8%93%E4%B8%9A%C2%B7%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
    
      <category term="前端开发工程师学习笔记" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>网易微专业之《前端开发工程师》学习笔记（15）-JS基本类型</title>
    <link href="http://yoursite.com/2016/01/23/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-8815-ef-bc-89-js/"/>
    <id>http://yoursite.com/2016/01/23/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-8815-ef-bc-89-js/</id>
    <published>2016-01-23T12:48:04.000Z</published>
    <updated>2016-04-07T06:47:16.000Z</updated>
    
    <content type="html">&lt;p&gt;以下内容为《前端开发工程师》微专业的第二门课《JavaScript程序设计》基础篇部分学习笔记。&lt;/p&gt;
&lt;h3 id=&quot;《JavaScript程序设计》之基础篇（三）&quot;&gt;&lt;a href=&quot;#《JavaScript程序设计》之基础篇（三）&quot; class=&quot;headerlink&quot; title=&quot;《JavaScript程序设计》之基础篇（三）&quot;&gt;&lt;/a&gt;《JavaScript程序设计》之基础篇（三）&lt;/h3&gt;&lt;h3 id=&quot;四、JS基本类型&quot;&gt;&lt;a href=&quot;#四、JS基本类型&quot; class=&quot;headerlink&quot; title=&quot;四、JS基本类型&quot;&gt;&lt;/a&gt;&lt;strong&gt;四、JS基本类型&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;每一种计算机语言除了有自己的数据结构外，还具有自己所支持的数据类型。JavaScript跟传统编程语言不同，它采用的是弱数据方式，也就是说一个数据不必首先做声明，可以在使用或赋值时再确定其数据类型，当然也可以先声明该数据类型。&lt;/p&gt;
&lt;p&gt;javascript中一共有5种简单数据类型（也称为&lt;strong&gt;基本数据类型&lt;/strong&gt;），和1种复杂数据类型（也称为&lt;strong&gt;引用数据类型&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;JavaScript数据类型包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Number(数字型)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;String（字符串行）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Boolean（布尔型）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Object （**&lt;/strong&gt;引用数据类型&lt;strong&gt;&lt;strong&gt;/&lt;/strong&gt;&lt;/strong&gt;对象型）**&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Null（空值）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Undefined（未定义值）&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS基本类型1.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS基本类型1.png&quot; alt=&quot;JS基本类型1&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;javascript是以Object为基础的语言，除基本数据类型外，其他所有的引用数据类型，本质上都是Object。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Number&lt;/strong&gt;&lt;br&gt;数字（Number）是最基本的数据类型。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;整型数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;整型数据指的是数据形式是十进制整数（也包括十六进制和八进制），整数可以为正数、0或负数。例如，“0、4、-5、1000”这些都是“整型数据”。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS基本类型2.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS基本类型2.png&quot; alt=&quot;JS基本类型2&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;浮点型数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;浮点型数据是指带有小数的数据。&lt;/p&gt;
&lt;p&gt;浮点数还可以使用指数法表示，即实数后跟随字母e或E，后面加上正负号，其后再加一个整型指数。这种计数法表示的数值等于前面的实数乘以10的指数次幂。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS基本类型3.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS基本类型3.png&quot; alt=&quot;JS基本类型3&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特殊值：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NaN(Not a Number)：&lt;/strong&gt;即&lt;strong&gt;&lt;span style=&quot;color: #ff9900;&quot;&gt;“非数字”&lt;/span&gt;&lt;/strong&gt;。当在程序中由于某种原因发生计算错误后，将产生一个没有意义的数字，此时JavaScript返回的数字值就是NaN。&lt;/p&gt;
&lt;p&gt;NaN==NaN，返回的结果为false.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;    Infinity：&lt;/strong&gt;如 var num = 1/0; //Infinity&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;String（字符串型）&lt;/strong&gt;&lt;br&gt;字符串是由Unicode字符、数字、标点符号等组成的序列，它是JavaScript用来表示文本的数据类型。程序中的字符串型数据是包含在单引号或双引号中的，由单引号定界的字符串中可以含有双引号，由双引号定界的字符串中也可以含有单引号。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;var name=”hello”;&lt;/p&gt;
&lt;p&gt;var month=’july’;&lt;/p&gt;
&lt;p&gt;var num=’3.14’;&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt;&lt;br&gt;布尔型数据类型只有2个：真（true）和假（false）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;0可以看作false，1可以看做true。&lt;/p&gt;
&lt;p&gt;布尔值通常在JavaScript程序中用来比较所得的结果，例如：n= =1；&lt;/p&gt;
&lt;p&gt;这行代码测试了变量n的值是否和数值1相等。如果相等，比较的结果就是布尔值true，否则结果就是false。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;什么是真、什么是假：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;真：true、非零数字、非空字符串、非空对象&lt;/li&gt;
&lt;li&gt;假：false、数字0、空字符串、空对象、undefined&lt;br&gt;如：&lt;blockquote&gt;
&lt;p&gt;var sex=true;&lt;/p&gt;
&lt;p&gt;if(sex) {document.write(‘男’);}&lt;/p&gt;
&lt;p&gt;else {document.write(‘女’);}&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Object&lt;/strong&gt;&lt;br&gt;Object 是一组无序的名值对的集合。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Object是一组数据和功能的集合&lt;/strong&gt;。一个简单的Object的示例：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;var myObject = {}; //和 new Object() 相同&lt;/p&gt;
&lt;p&gt;myObject.name = “yuki”; //属性&lt;/p&gt;
&lt;p&gt;myObject.sayHello = function() { //方法&lt;/p&gt;
&lt;p&gt;alert(“Hello! My name is “ + this.name);};&lt;/p&gt;
&lt;p&gt;alert(myObject.name); // “yuki”&lt;/p&gt;
&lt;p&gt;myObject.sayHello(); // “Hello! My name is yuki”&lt;br&gt;这里name是myObject的一个属性，而sayHello是它的一个方法。可以看到，访问属性，或者调用方法，都是通过点语法.来实现的。这种使用方法你一定非常熟悉，jQuery就是全局创建了一个名为jQuery（如果不冲突，还有别名$）的Object，然后把所有的方法都定义在了这个Object中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Null&lt;/strong&gt;&lt;br&gt;整型、浮点型这些数据在定义的时候，系统都会分配一定的内存空间。JavaScript中的关键字null是一个特殊的值，它表示空值，系统没有给它分配内存空间。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果试图引用一个没有定义的变量，则返回一个null值。这里要非常强调一点：&lt;span style=&quot;color: #ff9900;&quot;&gt;null不等同于空的字符串（””）或0，因为空的字符串（””）或0是存在的，但是null表示其不存在的。&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;值：null&lt;/li&gt;
&lt;li&gt;出现场景：表示不存在。如：var car=null;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Undefined&lt;/strong&gt;&lt;br&gt;如果一个变量虽然已经用var关键字声明了，但是并没有对这个变量进行赋值，而无法知道这个变量的数据类型，因此这个变量的数据类型是undefined，表示这是一个未定义数据类型的变量。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;值：undefined&lt;/p&gt;
&lt;p&gt;出现场景:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;已声明未赋值的变量。如：&lt;br&gt;var a;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;console.log(a); //undefined&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;获取对象不存在的属性：&lt;br&gt;var obj={a:1,b:2};&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;console.log(obj.c); //undefined&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff9900;&quot;&gt;null与undefined的区别是，null表示一个变量被赋予了一个空值，而undefined则表示该变量尚未被赋值。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;类型识别：&quot;&gt;&lt;a href=&quot;#类型识别：&quot; class=&quot;headerlink&quot; title=&quot;类型识别：&quot;&gt;&lt;/a&gt;&lt;strong&gt;类型识别：&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Typeof&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在JavaScript中，typeof运算符用于返回它的操作数当前所容纳的数据的类型，这对于判断一个变量是否已被定义特别有用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS基本类型4.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS基本类型4.png&quot; alt=&quot;JS基本类型4&quot;&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原始类型和引用类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;284&quot;&gt;原始类型&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;284&quot;&gt;引用类型&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;284&quot;&gt;Number&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;284&quot;&gt;Object&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;284&quot;&gt;String&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;284&quot;&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;284&quot;&gt;Boolean&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;284&quot;&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;284&quot;&gt;Undefined&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;284&quot;&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;284&quot;&gt;Null&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;284&quot;&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;原始类型与引用类型的区别：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS基本类型5.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS基本类型5.png&quot; alt=&quot;JS基本类型5&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff9900;&quot;&gt; &amp;lt;……未完待续……&amp;gt;&lt;/span&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容为《前端开发工程师》微专业的第二门课《JavaScript程序设计》基础篇部分学习笔记。&lt;/p&gt;
&lt;h3 id=&quot;《JavaScript程序设计》之基础篇（三）&quot;&gt;&lt;a href=&quot;#《JavaScript程序设计》之基础篇（三）&quot; class=&quot;headerlin
    
    </summary>
    
      <category term="网易微专业·前端开发工程师" scheme="http://yoursite.com/categories/%E7%BD%91%E6%98%93%E5%BE%AE%E4%B8%93%E4%B8%9A%C2%B7%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
    
      <category term="前端开发工程师学习笔记" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>网易微专业之《前端开发工程师》学习笔记（14）-JS基本语法</title>
    <link href="http://yoursite.com/2016/01/22/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-8814-ef-bc-89-js/"/>
    <id>http://yoursite.com/2016/01/22/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-8814-ef-bc-89-js/</id>
    <published>2016-01-22T15:47:47.000Z</published>
    <updated>2016-04-07T06:47:16.000Z</updated>
    
    <content type="html">&lt;p&gt;以下内容为《前端开发工程师》微专业的第二门课《JavaScript程序设计》基础篇部分学习笔记。&lt;/p&gt;
&lt;h3 id=&quot;《JavaScript程序设计》之基础篇（二）&quot;&gt;&lt;a href=&quot;#《JavaScript程序设计》之基础篇（二）&quot; class=&quot;headerlink&quot; title=&quot;《JavaScript程序设计》之基础篇（二）&quot;&gt;&lt;/a&gt;《JavaScript程序设计》之基础篇（二）&lt;/h3&gt;&lt;h3 id=&quot;三、JS基本语法&quot;&gt;&lt;a href=&quot;#三、JS基本语法&quot; class=&quot;headerlink&quot; title=&quot;三、JS基本语法&quot;&gt;&lt;/a&gt;&lt;strong&gt;三、JS基本语法&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;每一种计算机编程语言都有自己的数据结构，JavaScript脚本语言的数据结构包括：&lt;span style=&quot;color: #ff9900;&quot;&gt;标识符、常量、变量、保留字&lt;/span&gt;等。&lt;/p&gt;
&lt;h4 id=&quot;（一）-JS数据结构&quot;&gt;&lt;a href=&quot;#（一）-JS数据结构&quot; class=&quot;headerlink&quot; title=&quot;（一）**JS数据结构**&quot;&gt;&lt;/a&gt;&lt;strong&gt;（一）**&lt;/strong&gt;JS数据结构**&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;直接量（常量）&lt;/strong&gt;&lt;br&gt;常量，顾名思义就是指不能改变的量。常量的指从定义开始就是固定的，一直到程序结束。常量主要用于为程序提供固定和精确的值，包括&lt;span style=&quot;color: #ff9900;&quot;&gt;数值和字符串，如数字、逻辑值真（true）、逻辑值假（false）等都是常量。&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS数据结构-1.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS数据结构-1.png&quot; alt=&quot;JS数据结构 1&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;变量&lt;/strong&gt;&lt;br&gt;变量，顾名思义，就是指在程序运行过程中，其值是可以改变的。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;变量的命名：变量的名称实际上是一个标识符，因此命名一个变量时也要遵循标识符的命名规则。&lt;/li&gt;
&lt;li&gt;变量的声明与赋值：在JavaScript中，使用变量之前需要先声明变量。&lt;br&gt;&lt;strong&gt;&lt;span style=&quot;color: #ff9900;&quot;&gt;  “所有的JavaScript变量都由关键字var声明。”&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;声明变量：&lt;/strong&gt;var 变量名；&lt;/p&gt;
&lt;p&gt;在声明变量的同时，也可以对变量进行赋值。一个关键字var也可以同时声明多个变量名，变量名之间必须用英文逗号“,”隔开。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS数据结构-2.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS数据结构-2.png&quot; alt=&quot;JS数据结构 2&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;标识符：&lt;/strong&gt;&lt;br&gt;标识符，说白了，就是一个名字。在JavaScript中，变量和函数等都需要定义一个名字，这个名字就可以称为“标识符”。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;JavaScript语言中标识符最重要的3点就是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以字母、下划线或者美元符合（$）开头&lt;/li&gt;
&lt;li&gt;由字母、下划线、美元符合（$）和数字组成&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;变量名不能包含空格、加号、减号等符号；&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;不能使用JS关键字和保留字&lt;br&gt;以下图片中的age、add、num1、num2、name等都是标识符。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS数据结构-3.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS数据结构-3.png&quot; alt=&quot;JS数据结构 3&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;关键字和保留字&lt;/strong&gt;&lt;br&gt;JavaScript关键字是指在JavaScript语言中有特定含义，成为JavaScript语法中一部分的那些字。JavaScript关键字是不能作为变量名和函数名使用的，也就是说变量的名称或者函数的名称不能跟系统的关键字重名。使用JavaScript关键字作为变量名或函数名，会使JavaScript在载入过程中出现编译错误。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS数据结构-4.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS数据结构-4.png&quot; alt=&quot;JS数据结构 4&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;（二）-JS基本语法&quot;&gt;&lt;a href=&quot;#（二）-JS基本语法&quot; class=&quot;headerlink&quot; title=&quot;（二）**JS基本语法**&quot;&gt;&lt;/a&gt;&lt;strong&gt;（二）**&lt;/strong&gt;JS基本语法**&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;大小写敏感&lt;/strong&gt;&lt;br&gt;JavaScript是严格区分大小写的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS数据结构-5.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS数据结构-5.png&quot; alt=&quot;JS数据结构 5&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;语句：&lt;/strong&gt;&lt;br&gt;赋值语句，条件语句，循环语句&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS数据结构-6.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS数据结构-6.png&quot; alt=&quot;JS数据结构 6&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;共同点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以分号结尾；&lt;/li&gt;
&lt;li&gt;语句可以嵌套；&lt;/li&gt;
&lt;li&gt;多个语句可以放在一个代码块中，以{}符合包括起来。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;注释&lt;/strong&gt;&lt;br&gt;在编写JavaScript代码时，我们经常要在一些关键代码旁做一下注释，这样做的好处很多，比如：方便理解、方便查找或方便项目组里的其它程序员了解你的代码，而且可以方便以后你对自己代码进行修改。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS数据结构-7.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS数据结构-7.png&quot; alt=&quot;JS数据结构 7&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTML注释：&amp;lt;!–  –&amp;gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CSS注释：/&lt;em&gt;  &lt;/em&gt;/&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;命名规范&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;可读性——能看懂&lt;/li&gt;
&lt;li&gt;&lt;p&gt;规范性——符合规则&lt;br&gt;&lt;strong&gt;匈牙利命名法&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;类型前缀&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;首字母大写&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS数据结构-8.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/JS数据结构-8.png&quot; alt=&quot;JS数据结构 8&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如aDiv[]，表示数组；oDiv，表示一个对象；sDiv,表示一个字符串。通过这样的“类型前缀+首字母大写”的命名方式，提高代码可读性。&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff9900;&quot;&gt;&amp;lt;……未完待续……&amp;gt;&lt;/span&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容为《前端开发工程师》微专业的第二门课《JavaScript程序设计》基础篇部分学习笔记。&lt;/p&gt;
&lt;h3 id=&quot;《JavaScript程序设计》之基础篇（二）&quot;&gt;&lt;a href=&quot;#《JavaScript程序设计》之基础篇（二）&quot; class=&quot;headerlin
    
    </summary>
    
      <category term="网易微专业·前端开发工程师" scheme="http://yoursite.com/categories/%E7%BD%91%E6%98%93%E5%BE%AE%E4%B8%93%E4%B8%9A%C2%B7%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
    
      <category term="前端开发工程师学习笔记" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>网易微专业之《前端开发工程师》学习笔记（13）-JS介绍</title>
    <link href="http://yoursite.com/2016/01/21/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-8813-ef-bc-89-js/"/>
    <id>http://yoursite.com/2016/01/21/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-8813-ef-bc-89-js/</id>
    <published>2016-01-21T15:49:22.000Z</published>
    <updated>2016-04-07T06:47:16.000Z</updated>
    
    <content type="html">&lt;p&gt;《JavaScript程序设计》这门课在2015年12.21日就已经开课了，但当时我还在学习《网页制作》这门课的CSS部分，加上写测试，耽搁了1个星期。&lt;/p&gt;
&lt;p&gt;话说12.28日开始学习JavaScript课程部分，才学了不到1天，我便中断了，因为听不懂，视频课程中的内容有50%都不懂，更别提理解消化了。以前完全没有接触过编程语言，只是大学的时候学过一阵子C++、VB程序设计，对于JS而已，之前只看过一遍&lt;a href=&quot;http://www.imooc.com/learn/36&quot; title=&quot;慕课网JS入门&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;慕课网的JavaScript入门篇&lt;/a&gt;，不过现在都忘干净了，可以说是真正的零基础，因此只能找一些更基础的JS课程先学习下。&lt;/p&gt;
&lt;p&gt;因此，我的0基础JavaScript学习计划预计是这样的：&lt;/p&gt;
&lt;p&gt;1.&lt;a href=&quot;http://www.lvyestudy.com/les_js/js_list.aspx&quot; title=&quot;绿叶学习网&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;绿叶学习网《JavaScript初级教程》&lt;/a&gt;；&lt;/p&gt;
&lt;p&gt;2.&lt;a href=&quot;http://www.imooc.com/learn/36&quot; title=&quot;慕课网JS基础&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;慕课网JavaScript基础&lt;/a&gt;；&lt;/p&gt;
&lt;p&gt;3.&lt;a href=&quot;http://www.zhinengshe.com/video.html&quot; title=&quot;智能社JavaScript视频课程&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;智能社JavaScript视频&lt;/a&gt;；&lt;/p&gt;
&lt;p&gt;4.&lt;a href=&quot;http://study.163.com/course/courseMain.htm?courseId=195001&quot; title=&quot;翁恺JavaScript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;翁恺-JavaScript&lt;/a&gt;视频&lt;/p&gt;
&lt;p&gt;5.&lt;a href=&quot;http://www.imooc.com/learn/10&quot; title=&quot;慕课网JavaScript进阶&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;慕课网JavaScript进阶&lt;/a&gt;；&lt;/p&gt;
&lt;p&gt;6.&lt;a href=&quot;http://www.runoob.com/js/js-tutorial.html&quot; title=&quot;菜鸟教程-JS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;菜鸟教程-JavaScript教程&lt;/a&gt;；（这个和&lt;a href=&quot;http://www.w3school.com.cn/js/index.asp&quot; title=&quot;w3School-JS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;W3School.com.cn上JS教程&lt;/a&gt;类似）&lt;/p&gt;
&lt;p&gt;7.&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000&quot; title=&quot;廖雪峰JS教程&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;廖雪峰JavaScript教程&lt;/a&gt;；&lt;/p&gt;
&lt;p&gt;8.&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript&quot; title=&quot;MDN-JS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN-JavaScript文档&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;按照上面的学习计划，折腾到1月20号，断断续续看完了1、2、4、5，以及3的前10个视频（智能社JS视频共34个视频）。&lt;/p&gt;
&lt;p&gt;上面的步骤是循序渐进的，由简单到深入，学习起来，衔接的刚好，能够保证认真学下来能够入门。绿叶学习网的JS，是博主精心编辑的JS基础，0基础的人都可以看得懂，学完对JS有了一个大概的认识；&lt;/p&gt;
&lt;p&gt;慕课网的JS教程也是蛮不错的，边学习边实践的方法真的很不错，缺点是它的习题比较难，涉及的点很多，对于初学者而言不会做。&lt;/p&gt;
&lt;p&gt;网易云课堂上的翁恺老师主讲的JavaScript视频也是不错的，声音特有磁性，听着很悦耳。&lt;/p&gt;
&lt;p&gt;智能社的JS视频，讲的真不错，是非常不错，生动形象，让人对JS学习的兴趣大增。&lt;/p&gt;
&lt;p&gt;如果你还没有开始学习网易微专业《JavaScript程序设计》，而且JS基础很差，建议先看下智能社JS视频中的《初探javascript魅力》内容，然后，按照我上面的JS学习计划看到5（1-5的顺序），然后再来学习网易JS课程，这时，你会发现微专业《JavaScript程序设计》中的视频内容，也不是那么难懂，应该能听懂80%以上了吧。&lt;/p&gt;
&lt;p&gt;说了这么多，下面来写学习笔记：&lt;/p&gt;
&lt;p&gt;以下内容为《前端开发工程师》微专业的第二门课《JavaScript程序设计》基础篇部分学习笔记。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;《JavaScript程序设计》之基础篇（一）&quot;&gt;&lt;a href=&quot;#《JavaScript程序设计》之基础篇（一）&quot; class=&quot;headerlink&quot; title=&quot;《JavaScript程序设计》之基础篇（一）&quot;&gt;&lt;/a&gt;《JavaScript程序设计》之基础篇（一）&lt;/h2&gt;&lt;h3 id=&quot;一、JS介绍&quot;&gt;&lt;a href=&quot;#一、JS介绍&quot; class=&quot;headerlink&quot; title=&quot;一、JS介绍&quot;&gt;&lt;/a&gt;&lt;strong&gt;一、JS介绍&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;JavaScript，就是我们通常所说的JS，是一种嵌入到HTML页面中的脚本语言，由浏览器一边解释一边执行。&lt;/p&gt;
&lt;p&gt;HTML、CSS和JavaScript的关系如下：&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;“HTML是网页的结构，CSS是网页的外观，而JavaScript是页面的行为。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/js-1.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/js-1.png&quot; alt=&quot;js 1&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JS特性：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行环境：Chrome,Firefox,IE……&lt;/li&gt;
&lt;li&gt;解释型。&lt;br&gt;&lt;strong&gt;如何写程序**&lt;/strong&gt;（以写文章相类比）**&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/js-2.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/js-2.png&quot; alt=&quot;js 2&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;浏览器中的**&lt;/strong&gt;JS**&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/js-3.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/js-3.png&quot; alt=&quot;js 3&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JavaScript是由ECMAScript，DOM和BOM三者组成的。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/js-4.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/js-4.png&quot; alt=&quot;js 4&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JavaScript 的核心 ECMAScript 描述了该语言的语法和基本对象；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ECMAScript**&lt;/strong&gt;:**实际上是一种脚本在语法和语义上的标准,它描述（语法、类型、语句、关键字、保留字、运算符、对象），定义脚本语言的所有属性、方法和对象。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DOM 描述了处理网页内容的方法和接口；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;DOM（文档对象模型,&lt;strong&gt;Document Object Model&lt;/strong&gt;）是 HTML 和 XML 的应用程序接口（API）。DOM 将把整个页面规划成由节点层级构成的文档。HTML 或 XML 页面的每个部分都是一个节点的衍生物。&lt;/p&gt;
&lt;p&gt;DOM 通过创建树来表示文档，从而使开发者对文档的内容和结构具有空前的控制力。用 DOM API 可以轻松地删除、添加和替换节点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BOM 描述了与浏览器进行交互的方法和接口。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;BOM（浏览器对象模型,&lt;strong&gt;Browser Object Model&lt;/strong&gt;），可以对浏览器窗口进行访问和操作。使用 BOM，开发者可以移动窗口、改变状态栏中的文本以及执行其他与页面内容不直接相关的动作。&lt;/p&gt;
&lt;p&gt;BOM 主要处理浏览器窗口和框架，不过通常浏览器特定的 JavaScript 扩展都被看做 BOM 的一部分。这些扩展包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;弹出新的浏览器窗口&lt;/li&gt;
&lt;li&gt;移动、关闭浏览器窗口以及调整窗口大小&lt;/li&gt;
&lt;li&gt;提供 Web 浏览器详细信息的定位对象&lt;/li&gt;
&lt;li&gt;提供用户屏幕分辨率详细信息的屏幕对象&lt;/li&gt;
&lt;li&gt;对 cookie 的支持&lt;/li&gt;
&lt;li&gt;IE 扩展了 BOM，加入了 ActiveXObject 类，可以通过 JavaScript 实例化 ActiveX 对象&lt;br&gt;由于没有相关的 BOM 标准，每种浏览器都有自己的 BOM 实现。有一些事实上的标准，如具有一个窗口对象和一个导航对象，不过每种浏览器可以为这些对象或其他对象定义自己的属性和方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ECMA/DOM/BOM三者浏览器兼容性：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ECMA 几乎没有兼容性问题&lt;/li&gt;
&lt;li&gt;DOM 有一些操作不兼容&lt;/li&gt;
&lt;li&gt;BOM 没有兼容问题（完全不兼容）&lt;br&gt;&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;历史：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/js-5.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/js-5.png&quot; alt=&quot;js 5&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;二、JS调试&quot;&gt;&lt;a href=&quot;#二、JS调试&quot; class=&quot;headerlink&quot; title=&quot;二、JS调试&quot;&gt;&lt;/a&gt;二、&lt;strong&gt;JS调试&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;javascript调试最常用的是全局方法console.log()，可以用它输出想要跟踪查看的变量，或者单纯地输出一些字符串说明调试语句所在的代码段有没有被执行到。&lt;/p&gt;
&lt;p&gt;浏览器的开发者工具，在控制台中可以查看到当前页面的输出信息（通过console.log()），以及javascript错误。错误信息还会说明错误位置（文件名，行，列），错误类别，错误说明。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/js-6.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2016/01/js-6.png&quot; alt=&quot;js 6&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如何打开浏览器调试面板？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;F12/Ctrl+Shift+!/右键“审查元素”&lt;/p&gt;
&lt;p&gt;变量输出：alert(变量)；或者：console.log(变量)；&lt;/p&gt;
&lt;p&gt;Ctrl+Shift+O:查找函数；&lt;/p&gt;
&lt;p&gt;Ctrl+O:查找文件&lt;/p&gt;
&lt;p&gt;ESC:调出Console面板；&lt;/p&gt;
&lt;p&gt;FireFox调试工具：firebug&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;（……未完待续……）&lt;/span&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;《JavaScript程序设计》这门课在2015年12.21日就已经开课了，但当时我还在学习《网页制作》这门课的CSS部分，加上写测试，耽搁了1个星期。&lt;/p&gt;
&lt;p&gt;话说12.28日开始学习JavaScript课程部分，才学了不到1天，我便中断了，因为听不懂，视频课程中的
    
    </summary>
    
      <category term="网易微专业·前端开发工程师" scheme="http://yoursite.com/categories/%E7%BD%91%E6%98%93%E5%BE%AE%E4%B8%93%E4%B8%9A%C2%B7%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
    
      <category term="前端开发工程师学习笔记" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>网易微专业之《前端开发工程师》学习笔记（12）-CSS</title>
    <link href="http://yoursite.com/2015/12/27/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-8812-ef-bc-89-css/"/>
    <id>http://yoursite.com/2015/12/27/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-8812-ef-bc-89-css/</id>
    <published>2015-12-27T07:58:35.000Z</published>
    <updated>2016-04-07T06:47:16.000Z</updated>
    
    <content type="html">&lt;p&gt;以下内容为《前端开发工程师》微专业的第一门课《网页制作》的第五章学习笔记。&lt;/p&gt;
&lt;h2 id=&quot;《网页制作》之CSS—CSS过渡、动画&quot;&gt;&lt;a href=&quot;#《网页制作》之CSS—CSS过渡、动画&quot; class=&quot;headerlink&quot; title=&quot;《网页制作》之CSS—CSS过渡、动画&quot;&gt;&lt;/a&gt;《网页制作》之CSS—CSS过渡、动画&lt;/h2&gt;&lt;h3 id=&quot;T-ransition过渡&quot;&gt;&lt;a href=&quot;#T-ransition过渡&quot; class=&quot;headerlink&quot; title=&quot;T**ransition过渡**&quot;&gt;&lt;/a&gt;&lt;strong&gt;T**&lt;/strong&gt;ransition过渡**&lt;/h3&gt;&lt;p&gt;在CSS3中，我们可以使用&lt;span style=&quot;color: #ff0000;&quot;&gt;transition属性来将元素的某一个属性从“一个属性值”在指定的时间内平滑地过渡到“另外一个属性值”来实现动画效果。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;CSS transform属性所实现的元素变形，呈现的仅仅是一个“结果”，而CSS transition呈现的是一种过渡“过程”，通俗点说就是一种动画转换过程，如渐显、渐隐、动画快慢等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：**&lt;/strong&gt;transition:属性 持续时间 过渡方法 延迟时间;**&lt;/p&gt;
&lt;p&gt;在CSS中创建简单的过渡效果可以从以下几个步骤来实现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在默认样式中声明元素的初始状态样式；2. 声明过渡元素最终状态样式，比如悬浮状态；3. 在默认样式中通过添加过渡函数，添加一些不同的样式。&lt;br&gt;CSS3的过度transition属性是一个复合属性，主要包含4个子属性：&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;transition-property：对元素的哪一个属性进行操作；&quot;&gt;&lt;a href=&quot;#transition-property：对元素的哪一个属性进行操作；&quot; class=&quot;headerlink&quot; title=&quot;transition-property：对元素的哪一个属性进行操作；&quot;&gt;&lt;/a&gt;&lt;strong&gt;transition-property&lt;/strong&gt;：对元素的哪一个属性进行操作；&lt;/h4&gt;&lt;p&gt;使用transition-property属性来单独设定过渡动画所要操作的那个属性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;transition-property：none |&lt;a href=&quot;#single-transition-property&quot;&gt;&amp;lt;single-transition-property&amp;gt;&lt;/a&gt;[ ,&lt;a href=&quot;#single-transition-property&quot;&gt;&amp;lt;single-transition-property&amp;gt;&lt;/a&gt; ]*&lt;/p&gt;
&lt;p&gt;&amp;lt;single-transition-property&amp;gt; = all | &lt;a href=&quot;#properties&quot;&gt;&amp;lt;IDENT&amp;gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;默认值：all。 默认为所有可以进行过渡的css属性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;transition-property属性的取值是一个“CSS属性名”。&lt;/p&gt;
&lt;p&gt;对于CSS3过渡动画，大多数情况下都是配合&lt;span style=&quot;color: #ff0000;&quot;&gt;&lt;strong&gt;:**&lt;/strong&gt;hover伪类&lt;strong&gt;** &lt;/strong&gt;来&lt;/span&gt;使用。其对应具有过渡的CSS属性主要有：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/过渡动画属性.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/过渡动画属性.png&quot; alt=&quot;过渡动画属性&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;transition-duration：过渡的持续时间；&quot;&gt;&lt;a href=&quot;#transition-duration：过渡的持续时间；&quot; class=&quot;headerlink&quot; title=&quot;transition-duration：过渡的持续时间；&quot;&gt;&lt;/a&gt;&lt;strong&gt;transition-duration：&lt;/strong&gt;过渡的持续时间；&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;transition-duration：时间;&lt;/p&gt;
&lt;p&gt;说明：transition-duration属性取值是一个时间，单位为s（秒），可以为小数如0.5s。如果提供多个属性值，以逗号进行分隔。&lt;/p&gt;
&lt;h4 id=&quot;transition-timing-function：过渡使用的方法（函数）；&quot;&gt;&lt;a href=&quot;#transition-timing-function：过渡使用的方法（函数）；&quot; class=&quot;headerlink&quot; title=&quot;transition-timing-function：过渡使用的方法（函数）；&quot;&gt;&lt;/a&gt;&lt;strong&gt;transition-timing-function：&lt;/strong&gt;过渡使用的方法（函数）；&lt;/h4&gt;&lt;p&gt;使用transition-timing-function属性来定义过渡方式。所谓的“过渡方式”主要用来指定动画在过渡时间内的速率。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;transition-timing-function：&lt;a href=&quot;#single-transition-timing-function&quot;&gt;&amp;lt;single-transition-timing-function&amp;gt;&lt;/a&gt;[,&lt;a href=&quot;#single-transition-timing-function&quot;&gt;&amp;lt;single-transition-timing-function&amp;gt;&lt;/a&gt;]*&lt;/p&gt;
&lt;p&gt;&amp;lt;single-transition-timing-function&amp;gt; = ease | linear | ease-in | ease-out | ease-in-out | step-start | step-end | steps(&lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/transition/../../values/numeric/integer.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt;[, [ start | end ] ]?) | cubic-bezier(&lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/transition/../../values/numeric/number.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt;, &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/transition/../../values/numeric/number.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt;, &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/transition/../../values/numeric/number.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt;, &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/transition/../../values/numeric/number.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;默认值：ease&lt;/p&gt;
&lt;p&gt;transition-timing-function属性取值共有5种，具体如下：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/transition-timing-function.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/transition-timing-function.png&quot; alt=&quot;transition-timing-function&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;取值：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;linear： 线性过渡。等同于贝塞尔曲线(0.0, 0.0, 1.0, 1.0)&lt;/li&gt;
&lt;li&gt;ease： 平滑过渡。等同于贝塞尔曲线(0.25, 0.1, 0.25, 1.0)&lt;/li&gt;
&lt;li&gt;ease-in： 由慢到快。等同于贝塞尔曲线(0.42, 0, 1.0, 1.0)&lt;/li&gt;
&lt;li&gt;ease-out： 由快到慢。等同于贝塞尔曲线(0, 0, 0.58, 1.0)&lt;/li&gt;
&lt;li&gt;ease-in-out：由慢到快再到慢。等同于贝塞尔曲线(0.42, 0, 0.58, 1.0)&lt;/li&gt;
&lt;li&gt;step-start： 等同于 steps(1, start)&lt;/li&gt;
&lt;li&gt;step-end： 等同于 steps(1, end)&lt;/li&gt;
&lt;li&gt;steps(&amp;lt;integer&amp;gt;[, [ start | end ] ]?)：接受两个参数的步进函数。第一个参数必须为正整数，指定函数的步数。第二个参数取值可以是start或end，指定每一步的值发生变化的时间点。第二个参数是可选的，默认值为end。&lt;/li&gt;
&lt;li&gt;cubic-bezier(&amp;lt;number&amp;gt;, &amp;lt;number&amp;gt;, &amp;lt;number&amp;gt;, &amp;lt;number&amp;gt;)： 特定的贝塞尔曲线类型，4个数值需在[0, 1]区间内&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;transition-delay：可选属性，指定过渡开始出现的延迟时间；&quot;&gt;&lt;a href=&quot;#transition-delay：可选属性，指定过渡开始出现的延迟时间；&quot; class=&quot;headerlink&quot; title=&quot;transition-delay：可选属性，指定过渡开始出现的延迟时间；&quot;&gt;&lt;/a&gt;&lt;strong&gt;transition-delay&lt;/strong&gt;：可选属性，指定过渡开始出现的延迟时间；&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;transition-delay:时间;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;transition-delay属性取值是一个时间，单位为s（秒），可以为小数如0.5s。&lt;/p&gt;
&lt;p&gt;transition-delay属性默认值为0，也就是说当我们没有设置transition-delay属性时，过渡动画就没有延迟时间。如果提供多个属性值，以逗号进行分隔。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;案例：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;style type=”text/css”&amp;gt;&lt;/p&gt;
&lt;p&gt;div{&lt;/p&gt;
&lt;p&gt;display:inline-block;&lt;/p&gt;
&lt;p&gt;width:100px;&lt;/p&gt;
&lt;p&gt;height:100px;&lt;/p&gt;
&lt;p&gt;border-radius:0;&lt;/p&gt;
&lt;p&gt;background-color:#14C7F3;&lt;/p&gt;
&lt;p&gt;transition-property:border-radius,background-color;&lt;/p&gt;
&lt;p&gt;transition-duration:1s ;&lt;/p&gt;
&lt;p&gt;transition-timing-function:linear;&lt;/p&gt;
&lt;p&gt;transition-delay:2s;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;div:hover&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;border-radius:50px;&lt;/p&gt;
&lt;p&gt;background-color:red;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;&amp;lt;/style&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/head&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;body&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;transition&quot;&gt;&lt;a href=&quot;#transition&quot; class=&quot;headerlink&quot; title=&quot;transition&quot;&gt;&lt;/a&gt;&lt;strong&gt;transition&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;如果想要使用&lt;a href=&quot;http://www.lvyestudy.com/css3/css3_10.1.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;transition属性&lt;/a&gt;同时对多个属性进行实现平滑过渡效果，只需要在&lt;a href=&quot;http://www.lvyestudy.com/css3/css3_10.2.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;transition-property属性&lt;/a&gt;添加多个属性名即可，其中属性名之间用英文逗号隔开。然后各自可以有各自不同的延续时间和其时间的速率变换方式。但需要值得注意的一点：第一个时间的值为 transition-duration，第二个为transition-delay。&lt;/p&gt;
&lt;p&gt;例如：a{ transition: background 0.8s ease-in 0.3,color 0.6s ease-out 0.3;}&lt;/p&gt;
&lt;h2 id=&quot;Animation动画&quot;&gt;&lt;a href=&quot;#Animation动画&quot; class=&quot;headerlink&quot; title=&quot;Animation动画&quot;&gt;&lt;/a&gt;&lt;strong&gt;Animation动画&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;在CSS3中，动画效果使用animation属性来实现。animation属性和transition属性功能是相同的，都是通过改变元素的“属性值”来实现动画效果。但是这两者又有很大的区别：transition属性只能通过指定属性的开始值与结束值，然后在这两个属性值之间进行平滑过渡来实现动画效果，因此只能实现简单的动画效果。animation属性则通过定义多个关键帧以及定义每个关键帧中元素的属性值来实现复杂的动画效果。&lt;/p&gt;
&lt;p&gt;transition属性只能实现简单的动画（一个），而animation属性却可以实现复杂的动画（一系列）。&lt;/p&gt;
&lt;h3 id=&quot;定义动画-keyframes-keyframes-关键帧&quot;&gt;&lt;a href=&quot;#定义动画-keyframes-keyframes-关键帧&quot; class=&quot;headerlink&quot; title=&quot;定义动画**@keyframes**   (keyframes:关键帧)&quot;&gt;&lt;/a&gt;&lt;strong&gt;定义动画**&lt;/strong&gt;@keyframes&lt;strong&gt;**   (keyframes:关键帧)&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;使用animation属性定义CSS3动画需要2步：&lt;/p&gt;
&lt;p&gt;（1）定义动画；&lt;/p&gt;
&lt;p&gt;（2）调用动画；&lt;/p&gt;
&lt;p&gt;在CSS3中，在使用动画之前，我们必须使用@keyframes规则定义动画。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;@keyframes &amp;lt;identifier&amp;gt; ‘{‘ &amp;lt;keyframes-blocks&amp;gt; ‘}’;&lt;/p&gt;
&lt;p&gt;&amp;lt;keyframes-blocks&amp;gt;：[ [ from | to | &amp;lt;percentage&amp;gt; ]{ sRules } ] [ [ , from | to | &amp;lt;percentage&amp;gt; ]{ sRules } ]*&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;取值：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;identifier&amp;gt;： identifier定义一个动画名称&lt;/li&gt;
&lt;li&gt;&amp;lt;keyframes-blocks&amp;gt;： 定义动画在每个阶段的样式，即帧动画。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;定义动画时，简单的动画可以直接使用关键字from和to，即从一种状态过渡到另一种状态：&lt;br&gt;示例代码：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;@keyframes testanimations {&lt;/p&gt;
&lt;p&gt;from { opacity: 1; }&lt;/p&gt;
&lt;p&gt;to { opacity: 0; }&lt;/p&gt;
&lt;p&gt;}&lt;br&gt;其中testanimations是该动画的名字，该动画表示某个东西将逐渐消失。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果复杂的动画，可以混合&amp;lt;percentage&amp;gt;去设置某个时间段内的任意时间点的样式：&lt;br&gt;示例代码：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;@keyframes testanimations {&lt;/p&gt;
&lt;p&gt;from { transform: translate(0, 0); }&lt;/p&gt;
&lt;p&gt;20% { transform: translate(20px, 20px); }&lt;/p&gt;
&lt;p&gt;40% { transform: translate(40px, 0); }&lt;/p&gt;
&lt;p&gt;60% { transform: translate(60px, 20); }&lt;/p&gt;
&lt;p&gt;80% { transform: translate(80px, 0); }&lt;/p&gt;
&lt;p&gt;to { transform: translate(100px, 20px); }&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当然，也可以不使用关键字from和to，而都使用&amp;lt;percentage&amp;gt;：&lt;br&gt;示例代码：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;@keyframes testanimations{&lt;/p&gt;
&lt;p&gt;0% { transform: translate(0, 0); }&lt;/p&gt;
&lt;p&gt;20% { transform: translate(20px, 20px); }&lt;/p&gt;
&lt;p&gt;40% { transform: translate(40px, 0); }&lt;/p&gt;
&lt;p&gt;60% { transform: translate(60px, 20px); }&lt;/p&gt;
&lt;p&gt;80% { transform: translate(80px, 0); }&lt;/p&gt;
&lt;p&gt;100% { transform: translate(100px, 20px); }&lt;/p&gt;
&lt;p&gt;}&lt;br&gt;注意，这里的0%不能简写成0。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用@keyframes规则时，如果仅仅只有0%和100%这两个百分比的话，这时0%和100%还可以使用关键词from和to来代表，其中0%对应的是from，100%对应的是to。&lt;/p&gt;
&lt;h3 id=&quot;调用动画-animation-name属性&quot;&gt;&lt;a href=&quot;#调用动画-animation-name属性&quot; class=&quot;headerlink&quot; title=&quot;调用动画**animation-name属性**&quot;&gt;&lt;/a&gt;&lt;strong&gt;调用动画**&lt;/strong&gt;animation-name属性**&lt;/h3&gt;&lt;p&gt;在CSS3中，使用@keyframes规则定义的动画并不会自动执行，我们还需要使用animation-name属性来调用动画，之后动画才会生效。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;animation-name：动画名;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;注意，animation-name 调用的动画名需要和@keyframes规则定义的动画名称完全一致（区分大小写），如果不一致将不具有任何动画效果。为了浏览器兼容性，针对Chrome和Safari浏览器需要加上-webkit-前缀，而针对Firefox浏览器需要加上-moz-。&lt;/p&gt;
&lt;h3 id=&quot;持续时间-animation-duration属性&quot;&gt;&lt;a href=&quot;#持续时间-animation-duration属性&quot; class=&quot;headerlink&quot; title=&quot;持续时间**animation-duration属性**&quot;&gt;&lt;/a&gt;&lt;strong&gt;持续时间**&lt;/strong&gt;animation-duration属性**&lt;/h3&gt;&lt;p&gt;在CSS3中，我们可以使用animation-duration属性来设置动画的持续时间，也就是完成从0%到100%所使用的总时间。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法&lt;/strong&gt;：animation-duration: &amp;lt;time&amp;gt;[,&amp;lt;time&amp;gt;]*&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;animation-duration属性取值是一个时间，单位为s（秒），可以为小数如0.5s。&lt;/p&gt;
&lt;h3 id=&quot;播放方式-animation-timing-function属性&quot;&gt;&lt;a href=&quot;#播放方式-animation-timing-function属性&quot; class=&quot;headerlink&quot; title=&quot;播放方式**animation-timing-function属性**&quot;&gt;&lt;/a&gt;&lt;strong&gt;播放方式**&lt;/strong&gt;animation-timing-function属性**&lt;/h3&gt;&lt;p&gt;在CSS3中，我们可以使用animation-timing-function属性来设置动画的播放方式，所谓的“播放方式”主要用来指定动画在播放时间内的速率。其中，&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;animation-timing-function：&amp;lt;single-animation-timing-function&amp;gt;[,&amp;lt;single-animation-timing-function&amp;gt;]*&lt;/p&gt;
&lt;p&gt;&amp;lt;single-animation-timing-function&amp;gt; = ease | linear | ease-in | ease-out | ease-in-out | step-start | step-end | steps(&amp;lt;integer&amp;gt;[, [ start | end ] ]?) | cubic-bezier(&amp;lt;number&amp;gt;, &amp;lt;number&amp;gt;, &amp;lt;number&amp;gt;, &amp;lt;number&amp;gt;)&lt;/p&gt;
&lt;p&gt;默认值：ease&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;animation-timing-function 属性取值跟transition-timing-function属性取值一样，共有5种，具体如下：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/transition-timing-function.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/transition-timing-function.png&quot; alt=&quot;transition-timing-function&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;延迟时间-animation-delay属性&quot;&gt;&lt;a href=&quot;#延迟时间-animation-delay属性&quot; class=&quot;headerlink&quot; title=&quot;延迟时间**animation-delay属性**&quot;&gt;&lt;/a&gt;&lt;strong&gt;延迟时间**&lt;/strong&gt;animation-delay属性**&lt;/h3&gt;&lt;p&gt;在CSS3中，我们可以使用animation-delay属性来定义动画播放的延迟时间。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;animation-delay:时间;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;animation-delay属性取值是一个时间，单位为s（秒），可以为小数如0.5s。&lt;/p&gt;
&lt;p&gt;animation-delay属性默认值为0，也就是说当我们没有设置animation-delay属性时，CSS3动画就没有延迟时间。&lt;/p&gt;
&lt;h3 id=&quot;播放次数-animation-iteration-count属性&quot;&gt;&lt;a href=&quot;#播放次数-animation-iteration-count属性&quot; class=&quot;headerlink&quot; title=&quot;播放次数**animation-iteration-count属性**&quot;&gt;&lt;/a&gt;&lt;strong&gt;播放次数**&lt;/strong&gt;animation-iteration-count属性**&lt;/h3&gt;&lt;p&gt;在CSS3中，我们可以使用animation-iteration-count属性来定义动画的播放次数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;animation-iteration-count: infinite | &amp;lt;number&amp;gt; [, infinite | &amp;lt;number&amp;gt;]*&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;animation-iteration-count属性取值有2种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;正整数；&lt;/li&gt;
&lt;li&gt;infinite；&lt;br&gt;animation-iteration-count属性默认值为1。也就是默认情况下，动画从开始到结束只播放一次。“animation-iteration-count:n”表示动画播放n次，n为正整数；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当animation-iteration-count属性取值为infinite时，动画会无限次地循环播放。&lt;/p&gt;
&lt;h3 id=&quot;播放方向-animation-direction属性&quot;&gt;&lt;a href=&quot;#播放方向-animation-direction属性&quot; class=&quot;headerlink&quot; title=&quot;播放方向**animation-direction属性**&quot;&gt;&lt;/a&gt;&lt;strong&gt;播放方向**&lt;/strong&gt;animation-direction属性**&lt;/h3&gt;&lt;p&gt;在CSS3中，我们可以使用animation-direction属性定义动画的播放方向。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;animation-direction：&amp;lt;single-animation-direction&amp;gt;[,&amp;lt;single-animation-direction&amp;gt;]*&lt;/p&gt;
&lt;p&gt;&amp;lt;single-animation-direction&amp;gt; = normal | reverse | alternate | alternate-reverse&lt;/p&gt;
&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td colspan=&quot;2&quot; width=&quot;661&quot;&gt;animation-direction属性取值&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;属性值&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;481&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;normal&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;481&quot;&gt;每次循环都向正方向播放（默认值）&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;reverse&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;481&quot;&gt;每次循环都向反方向播放&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;alternate&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;481&quot;&gt;播放次数是奇数时，动画向原方向播放；播放次数是偶数时，动画向反方向播放&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;alternate-reverse&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;481&quot;&gt;动画先反运行再正方向运行，并持续交替运行&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;h3 id=&quot;播放状态-animation-play-state属性&quot;&gt;&lt;a href=&quot;#播放状态-animation-play-state属性&quot; class=&quot;headerlink&quot; title=&quot;播放状态**animation-play-state属性**&quot;&gt;&lt;/a&gt;&lt;strong&gt;播放状态**&lt;/strong&gt;animation-play-state属性**&lt;/h3&gt;&lt;p&gt;在CSS3中，我们可以使用animation-play-state属性来定义动画的播放状态。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;animation-play-state：取值;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;animation-play-state属性取值只有2个：running和paused。&lt;/p&gt;
&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;属性值&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;392&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;running&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;392&quot;&gt;播放动画（默认值）&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;paused&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;392&quot;&gt;暂停动画&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;h3 id=&quot;时间外属性-animation-fill-mode属性&quot;&gt;&lt;a href=&quot;#时间外属性-animation-fill-mode属性&quot; class=&quot;headerlink&quot; title=&quot;时间外属性**animation-fill-mode属性**&quot;&gt;&lt;/a&gt;&lt;strong&gt;时间外属性**&lt;/strong&gt;animation-fill-mode属性**&lt;/h3&gt;&lt;p&gt;在CSS3中，我们可以使用animation-fill-mode属性定义在动画开始之前和动画结束之后发生的事情。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;animation-fill-mode:取值;&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td colspan=&quot;2&quot; width=&quot;570&quot;&gt;animation-fill-mode属性取值&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;属性值&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;390&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;none&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;390&quot;&gt;动画完成最后一帧时会反转到初始帧处（默认值）&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;forwards&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;390&quot;&gt;动画结束之后继续应用最后的关键帧位置&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;backwards&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;390&quot;&gt;会在向元素应用动画样式时迅速应用动画的初始帧&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;both&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;390&quot;&gt;元素动画同时具有forwards和backwards效果&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;在默认情况之下，动画不会影响它的关键帧之外的属性，使用animation-fill-mode属性可以修改动画的默认行为。简单的说就是告诉动画在第一关键帧上等待动画开始，或者在动画结束时停在最后一个关键帧上而不回到动画的第一帧上。或者同时具有这两个效果。&lt;/p&gt;
&lt;p&gt;例如：让动画停在最一帧处。代码如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;animation-fill-mode:forwards;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;animation&quot;&gt;&lt;a href=&quot;#animation&quot; class=&quot;headerlink&quot; title=&quot;animation&quot;&gt;&lt;/a&gt;&lt;strong&gt;animation&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;语法：**&lt;/strong&gt;animation&lt;em&gt;*：&amp;lt;single-animation&amp;gt;[,&amp;lt;single-animation&amp;gt;]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;single-animation&amp;gt;&lt;/strong&gt; = &amp;lt;single-animation-name&amp;gt; || &amp;lt;time&amp;gt; || &amp;lt;single-animation-timing-function&amp;gt; || &amp;lt;time&amp;gt; || &amp;lt;single-animation-iteration-count&amp;gt; || &amp;lt;single-animation-direction&amp;gt; || &amp;lt;single-animation-fill-mode&amp;gt; || &amp;lt;single-animation-play-state&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果提供多组属性值，以逗号进行分隔。&lt;/li&gt;
&lt;li&gt;如果只提供一个&amp;lt;time&amp;gt;参数，则为 &amp;lt;’ animation-duration ‘&amp;gt; 的值定义；&lt;/li&gt;
&lt;li&gt;如果提供二个&amp;lt;time&amp;gt;参数，则第一个为 &amp;lt;’ animation-duration ‘&amp;gt; 的值定义，第二个为 &amp;lt;’ animation-delay ‘&amp;gt; 的值定义&lt;br&gt;案例：&lt;blockquote&gt;
&lt;p&gt;animation:animations 2s ease-out forwards;&lt;/p&gt;
&lt;p&gt;@keyframes animations{&lt;/p&gt;
&lt;p&gt;0%{transform:translate(0);opacity:0;}&lt;/p&gt;
&lt;p&gt;50%{transform:translate(30px);opacity:1;}&lt;/p&gt;
&lt;p&gt;70%{transform:translate(35px);opacity:1;}&lt;/p&gt;
&lt;p&gt;100%{transform:translate(60px);opacity:0;}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容为《前端开发工程师》微专业的第一门课《网页制作》的第五章学习笔记。&lt;/p&gt;
&lt;h2 id=&quot;《网页制作》之CSS—CSS过渡、动画&quot;&gt;&lt;a href=&quot;#《网页制作》之CSS—CSS过渡、动画&quot; class=&quot;headerlink&quot; title=&quot;《网页制作》之CS
    
    </summary>
    
      <category term="网易微专业·前端开发工程师" scheme="http://yoursite.com/categories/%E7%BD%91%E6%98%93%E5%BE%AE%E4%B8%93%E4%B8%9A%C2%B7%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
    
      <category term="前端开发工程师学习笔记" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>网易微专业之《前端开发工程师》学习笔记（11）-CSS</title>
    <link href="http://yoursite.com/2015/12/26/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-8811-ef-bc-89-css/"/>
    <id>http://yoursite.com/2015/12/26/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-8811-ef-bc-89-css/</id>
    <published>2015-12-26T07:55:40.000Z</published>
    <updated>2016-04-07T06:47:16.000Z</updated>
    
    <content type="html">&lt;p&gt;以下内容为《前端开发工程师》微专业的第一门课《网页制作》的第五章学习笔记。&lt;/p&gt;
&lt;h2 id=&quot;《网页制作》之CSS—CSS变形（2d-3d）&quot;&gt;&lt;a href=&quot;#《网页制作》之CSS—CSS变形（2d-3d）&quot; class=&quot;headerlink&quot; title=&quot;《网页制作》之CSS—CSS变形（2d/3d）&quot;&gt;&lt;/a&gt;《网页制作》之CSS—CSS变形（2d/3d）&lt;/h2&gt;&lt;h3 id=&quot;变形transform-2d变形&quot;&gt;&lt;a href=&quot;#变形transform-2d变形&quot; class=&quot;headerlink&quot; title=&quot;变形transform-2d变形&quot;&gt;&lt;/a&gt;&lt;strong&gt;变形transform-2d变形&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在CSS3中，我们可以使用transform属性来实现文字或图像的的各种变形效果，如&lt;strong&gt;位移、缩放、旋转、倾斜&lt;/strong&gt;等。&lt;/p&gt;
&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td colspan=&quot;2&quot; width=&quot;529&quot;&gt;transform属性变形方法&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;方法或属性&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;349&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;translate()&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;349&quot;&gt;位移&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;scale()&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;349&quot;&gt;缩放&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;rotate()&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;349&quot;&gt;旋转&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;skew()&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;349&quot;&gt;倾斜&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;transform-origin&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;349&quot;&gt;中心原点&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;h3 id=&quot;旋转-rotate-方法&quot;&gt;&lt;a href=&quot;#旋转-rotate-方法&quot; class=&quot;headerlink&quot; title=&quot;旋转**rotate()方法**&quot;&gt;&lt;/a&gt;&lt;strong&gt;旋转**&lt;/strong&gt;rotate()方法**&lt;/h3&gt;&lt;p&gt;在CSS3中，我们可以使用rotate()方法来将元素相对中心原点进行旋转。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;transform：rotate(度数);&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;度数指的是元素相对中心原点进行旋转的度数，单位为deg。其中，deg是degree（度数）的缩写。&lt;/p&gt;
&lt;p&gt;它主要在二维空间内进行操作，设置一个角度值，用来指定旋转的幅度。如果这个值为&lt;strong&gt;正值&lt;/strong&gt;，元素相对原点中心&lt;strong&gt;顺时针&lt;/strong&gt;旋转；如果这个值为&lt;strong&gt;负值&lt;/strong&gt;，元素相对原点中心&lt;strong&gt;逆时针&lt;/strong&gt;旋转。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/变形rotate.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/变形rotate.png&quot; alt=&quot;变形rotate&quot;&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;位移-translate-方法&quot;&gt;&lt;a href=&quot;#位移-translate-方法&quot; class=&quot;headerlink&quot; title=&quot;位移**translate()方法**&quot;&gt;&lt;/a&gt;&lt;strong&gt;位移**&lt;/strong&gt;translate()方法**&lt;/h3&gt;&lt;p&gt;在CSS3中，我们可以使用translate()方法将元素沿着水平方向（X轴）和垂直方向（Y轴）移动。&lt;/p&gt;
&lt;p&gt;对于位移translate()方法，我们分为3种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;translateX(x)：&lt;/strong&gt;元素仅在水平方向移动（X轴移动）；&lt;br&gt;&lt;strong&gt;语法：&lt;/strong&gt;transform:translateX(x);&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;在CSS3中，&lt;strong&gt;所有变形方法都是属于transform属性，因此所有关于变形的方法前面都要加上“tranform:&lt;/strong&gt;”，以表示“变形”处理。x表示元素在水平方向（X轴）的移动距离，单位为px、em或百分比等。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/translatex.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/translatex.png&quot; alt=&quot;translate(x)&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;translateY(y)：&lt;/strong&gt;元素仅在垂直方向移动（Y轴移动）；&lt;br&gt;&lt;strong&gt;语法：&lt;/strong&gt;tranform:translateY(y)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;y表示元素在水平方向（y轴）的移动距离，单位为px、em或百分比等。&lt;/p&gt;
&lt;p&gt;当y为正时，表示元素在垂直方向向下移动；当y为负时，表示元素在垂直方向向上移动。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/translatey.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/translatey.png&quot; alt=&quot;translate(y)&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; &lt;strong&gt;在W3C规定中，出于人的习惯是从上到下阅读，所选取的坐标系为下图中的第2种坐标系，因此x轴正方向向右，而y轴正方向向下。而你所想到的坐标系应该是下图中的第1种坐标系，这种坐标系是“数学形式”的坐标系，只适合在数学应用上。大家一定要搞清楚这一点！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/transition坐标.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/transition坐标.png&quot; alt=&quot;transition坐标&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（3）transklate(x,y)：&lt;/strong&gt;元素在水平方向和垂直方向同时移动（X轴和Y轴同时移动）；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;tranform:translate(x,y)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;x表示元素在水平方向（x轴）的移动距离，y表示元素在水平方向（y轴）的移动距离。注意，Y是一个可选参数，如果没有设置Y值，则表示元素仅仅沿着X轴正方形移动。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/transitionxy.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/transitionxy.png&quot; alt=&quot;transition(x,y)&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;缩放-scale-方法&quot;&gt;&lt;a href=&quot;#缩放-scale-方法&quot; class=&quot;headerlink&quot; title=&quot;缩放**scale()方法**&quot;&gt;&lt;/a&gt;&lt;strong&gt;缩放**&lt;/strong&gt;scale()方法**&lt;/h3&gt;&lt;p&gt;缩放，指的是“缩小”和“放大”。在CSS3中，我们可以使用scale()方法来将元素根据中心原点进行缩放。&lt;/p&gt;
&lt;p&gt;缩放scale()方法也有3种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scaleX(x)：元素仅水平方向缩放（X轴缩放）；&lt;br&gt;&lt;strong&gt;语法：&lt;/strong&gt;transform:scaleX(x)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;x表示元素沿着水平方向（X轴）缩放的倍数，如果大于1就代表放大；如果小于1就代表缩小。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/scalex.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/scalex.png&quot; alt=&quot;scalex()&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scaleY(y)：元素仅垂直方向缩放（Y轴缩放）；&lt;br&gt;&lt;strong&gt;语法：&lt;/strong&gt;transform:scaleY(y)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;y表示元素沿着垂直方向（Y轴）缩放的倍数，如果大于1就代表放大；如果小于1就代表缩小。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/scarey.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/scarey.png&quot; alt=&quot;scarey()&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;（3）scale(x,y)：元素水平方向和垂直方向同时缩放（X轴和Y轴同时缩放）；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;transform:scale(x,y)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;x表示元素沿着水平方向（X轴）缩放的倍数，y表示元素沿着垂直方向（Y轴）缩放的倍数。&lt;/p&gt;
&lt;p&gt;注意，&lt;span style=&quot;color: #ff0000;&quot;&gt;Y是一个可选参数，如果没有设置Y值，则表示X、Y两个方向的缩放倍数是一样的（同时放大相同倍数）&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/scarexy.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/scarexy.png&quot; alt=&quot;scare(x,y)&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;倾斜-skew-方法&quot;&gt;&lt;a href=&quot;#倾斜-skew-方法&quot; class=&quot;headerlink&quot; title=&quot;倾斜**skew()方法**&quot;&gt;&lt;/a&gt;&lt;strong&gt;倾斜**&lt;/strong&gt;skew()方法**&lt;/h3&gt;&lt;p&gt;它可以将一个对象以其中心位置围绕着&lt;strong&gt;X轴&lt;/strong&gt;和&lt;strong&gt;Y轴&lt;/strong&gt;按照一定的角度倾斜。这与rotate()函数的旋转不同，rotate()函数只是旋转，而不会改变元素的形状。skew()函数不会旋转，而只会改变元素的形状。&lt;/p&gt;
&lt;p&gt;在CSS3中，我们可以使用skew()方法将元素倾斜显示。&lt;/p&gt;
&lt;p&gt;skew()方法跟translate()方法、scale()方法一样，也有3种情况：&lt;/p&gt;
&lt;p&gt;（1）skewX(x)：使元素在水平方向倾斜（X轴倾斜）；transform:skewX(x);&lt;/p&gt;
&lt;p&gt;（2）skewY(y)：使元素在垂直方向倾斜（Y轴倾斜）；transform:skewY(y);&lt;/p&gt;
&lt;p&gt;（3）skew(x,y)：使元素在水平方向和垂直方向同时倾斜（X轴和Y轴同时倾斜）；transform:skew(x,y);&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;第一个参数对应X轴，第二个参数对应Y轴。如果第二个参数未提供，则值为0，也就是Y轴方向上无斜切。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;理解：&lt;/strong&gt;skew的默认原点transform-origin是这个物件的中心点&lt;/p&gt;
&lt;p&gt;skewX(30deg) 如下图：（沿着X轴倾斜，沿着Y轴呈逆时针旋转30度。）&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/skewX.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/skewX.png&quot; alt=&quot;skewX()&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;skewY(10deg) 如下图：（沿着y轴倾斜，沿着X轴呈顺时针旋转10度。）&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/skewY.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/skewY.png&quot; alt=&quot;skewY()&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;skew(30deg, 10deg) 如下图：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/skewxy.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/skewxy.png&quot; alt=&quot;skew(x,y)&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;transform-origin属性&quot;&gt;&lt;a href=&quot;#transform-origin属性&quot; class=&quot;headerlink&quot; title=&quot;transform-origin属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;transform-origin属性&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;任何一个元素都有一个中心原点，默认情况下，元素的中心原点位于X轴和Y轴的50%处,如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/transform-origin.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/transform-origin.png&quot; alt=&quot;transform-origin&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;&lt;strong&gt;默认情况下，CSS3变形进行的位移、缩放、旋转、倾斜都是以元素的中心原点**&lt;/strong&gt;(50%,50%)&lt;strong&gt;**进行变形。&lt;/strong&gt;&lt;/span&gt;但很多时候，我们可以通过transform-origin属性来改变元素变形时的中心原点位置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;transform-origin&lt;/strong&gt;：[ &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/transform/../../values/numeric/percentage.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;percentage&amp;gt;&lt;/a&gt; | &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/transform/../../values/length/index.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;length&amp;gt;&lt;/a&gt; | left | center① | right ] [ &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/transform/../../values/numeric/percentage.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;percentage&amp;gt;&lt;/a&gt; | &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/transform/../../values/length/index.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;length&amp;gt;&lt;/a&gt; | top | center② | bottom ]?&lt;/p&gt;
&lt;p&gt;默认值：50% 50%，效果等同于center center&lt;/p&gt;
&lt;p&gt;不管transform-origin取值为长度值还是关键字，都需要设置水平方向和垂直方向的值。&lt;/p&gt;
&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td colspan=&quot;3&quot; width=&quot;577&quot;&gt;transform-origin属性取值&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;关键字&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;百分比&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;top left&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;0 0&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;左上&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;top center&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;50% 0&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;靠上居中&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;top right&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;100% 0&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;右上&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;left center&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;0 50%&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;靠左居中&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;center center&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;50% 50%&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;正中&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;right center&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;100% 50%&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;靠右居中&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;bottom left&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;0 100%&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;左下&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;bottom center&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;50% 100%&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;靠下居中&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;bottom right&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;224&quot;&gt;100% 100%&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;右下&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;&amp;nbsp;&lt;br&gt;&lt;br&gt;### &lt;strong&gt;参考知识：&lt;/strong&gt;&lt;br&gt;&lt;br&gt;1.  &lt;a href=&quot;http://www.zhangxinxu.com/study/201206/css3-transform-matrix-skew.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.zhangxinxu.com/study/201206/css3-transform-matrix-skew.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;### &lt;strong&gt;2. **&lt;/strong&gt;变形–矩阵 matrix()&lt;strong&gt;

&lt;/strong&gt;matrix()&lt;strong&gt;** &lt;/strong&gt;是一个含六个值的(a,b,c,d,e,f)变换矩阵，用来指定一个2D变换，相当于直接应用一个[a b c d e f]变换矩阵。就是基于水平方向（X轴）和垂直方向（Y轴）重新定位元素,此属性值使用涉及到数学中的矩阵，我在这里只是简单的说一下CSS3中的transform有这么一个属性值，如果需要深入了解，需要对数学矩阵有一定的知识。&lt;br&gt;&lt;br&gt;Matrix深入理解：&lt;br&gt;&lt;br&gt;&lt;a href=&quot;http://www.zhangxinxu.com/wordpress/2012/06/css3-transform-matrix-%E7%9F%A9%E9%98%B5/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.zhangxinxu.com/wordpress/2012/06/css3-transform-matrix-%E7%9F%A9%E9%98%B5/&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;示例演示：&lt;/strong&gt;通过matrix()函数来模拟transform中translate()位移的效果。&lt;br&gt;&lt;strong&gt;HTML代码：&lt;/strong&gt;&lt;br&gt;&amp;gt; &amp;lt;div class=”wrapper”&amp;gt;  &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;br&gt;&lt;strong&gt;CSS代码：&lt;/strong&gt;&lt;br&gt;&amp;gt; .wrapper {  width: 300px;  height: 200px;  border: 2px dotted red;  margin: 40px auto;}&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; .wrapper div {  width:300px;  height: 200px;  background: orange;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; -webkit-transform: matrix(1,0,0,1,50,50);&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; -moz-transform:matrix(1,0,0,1,50,50);&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; transform: matrix(1,0,0,1,50,50);}&lt;br&gt;&lt;strong&gt;演示结果：&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/transform-matrix.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/transform-matrix.png&quot; alt=&quot;transform-matrix()&quot;&gt;&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;## &lt;strong&gt;transform-3d变形&lt;/strong&gt;&lt;br&gt;&lt;br&gt;### &lt;strong&gt;P**&lt;/strong&gt;erspective属性-透视&lt;strong&gt;&lt;br&gt;&lt;br&gt;语法：Perspective:none | &amp;lt;length&amp;gt;

&lt;/strong&gt;perspective 属性定义 3D 元素距视图的距离&lt;strong&gt;，以像素计。&lt;br&gt;&lt;br&gt;该属性允许改变 3D 元素查看 3D 元素的视图。当为元素定义 perspective 属性时，其子元素会获得透视效果，而不是元素本身。

&lt;/strong&gt;理解：&lt;strong&gt;&lt;br&gt;当perspective:none/0;时，相当于没有设perspective(length)。比如要建立一个小立方体，长宽高都是200px。如果perspective &amp;lt; 200px ，那就相当于站在盒子里面看的结果，如果perspective 非常大那就是站在非常远的地方看（立方体已经成了小正方形了）。&lt;br&gt;当元素没有设置perspective(length)时，所有后代元素被压缩在同一个二维平面上，不存在景深的效果。如果设置perspective(length)后，将会看到三维的效果。默认的透视视角中心在容器(是perspective所在的元素，不是他的后代元素)的中点，也就是perspective-origin: 50% 50%。当然你也可以自己设置，比如：左上角-webkit-perspective-origin: 0px 0px；。&lt;br&gt;&lt;br&gt;### &lt;/strong&gt;P&lt;strong&gt;**erspective-origin属性&lt;/strong&gt;&lt;br&gt;&lt;br&gt;perspective-origin 属性定义 3D 元素所基于的 X 轴和 Y 轴。该属性允许您改变 3D 元素的底部位置。&lt;br&gt;&lt;br&gt;定义时的perspective -Origin属性，它是一个元素的子元素，透视图，而不是元素本身。&lt;br&gt;&lt;br&gt;语法：perspective-origin: x-axis y-axis;&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;139&quot;&gt;值&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;419&quot;&gt;描述&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;139&quot;&gt;x-axis&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;419&quot;&gt;定义该视图在 x 轴上的位置。默认值：50%。可能的值：&lt;br&gt;&lt;br&gt;left&lt;br&gt;&lt;br&gt;center&lt;br&gt;&lt;br&gt;right&lt;br&gt;&lt;br&gt;length&lt;br&gt;&lt;br&gt;%&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;139&quot;&gt;y-axis&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;419&quot;&gt;定义该视图在 y 轴上的位置。默认值：50%。可能的值：&lt;br&gt;&lt;br&gt;top&lt;br&gt;&lt;br&gt;center&lt;br&gt;&lt;br&gt;bottom&lt;br&gt;&lt;br&gt;length&lt;br&gt;&lt;br&gt;%&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;h3 id=&quot;Translate3d-指定对象的3D位移。&quot;&gt;&lt;a href=&quot;#Translate3d-指定对象的3D位移。&quot; class=&quot;headerlink&quot; title=&quot;Translate3d-指定对象的3D位移。&quot;&gt;&lt;/a&gt;&lt;strong&gt;Translate3d-指定对象的3D位移。&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;translate3d(&amp;lt;translation-value&amp;gt;,&amp;lt;translation-value&amp;gt;,&amp;lt;length&amp;gt;)&lt;/p&gt;
&lt;p&gt;第1个参数对应X轴，第2个参数对应Y轴，第3个参数对应Z轴，参数不允许省略 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/translate3d.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/translate3d.png&quot; alt=&quot;translate3d&quot;&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;Scale3d-指定对象的3D缩放&quot;&gt;&lt;a href=&quot;#Scale3d-指定对象的3D缩放&quot; class=&quot;headerlink&quot; title=&quot;Scale3d()-指定对象的3D缩放&quot;&gt;&lt;/a&gt;&lt;strong&gt;Scale3d()-指定对象的3D缩放&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;scale3d(&amp;lt;number&amp;gt;,&amp;lt;number&amp;gt;,&amp;lt;number&amp;gt;)&lt;/p&gt;
&lt;p&gt;第1个参数对应X轴，第2个参数对应Y轴，第3个参数对应Z轴，参数不允许省略&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/scale3d.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/scale3d.png&quot; alt=&quot;scale3d&quot;&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;Rotate3d-指定对象的3D旋转角度。&quot;&gt;&lt;a href=&quot;#Rotate3d-指定对象的3D旋转角度。&quot; class=&quot;headerlink&quot; title=&quot;Rotate3d()-指定对象的3D旋转角度。&quot;&gt;&lt;/a&gt;&lt;strong&gt;Rotate3d()-指定对象的3D旋转角度。&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;语法：rotate3d（&amp;lt;number&amp;gt;,&amp;lt;number&amp;gt;,&amp;lt;number&amp;gt;,&amp;lt;angle&amp;gt;）&lt;/p&gt;
&lt;p&gt;其中前3个参数分别表示旋转的方向x,y,z，第4个参数表示旋转的角度，参数不允许省略&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/rotate3d.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/rotate3d.png&quot; alt=&quot;rotate3d&quot;&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;Transform-style&quot;&gt;&lt;a href=&quot;#Transform-style&quot; class=&quot;headerlink&quot; title=&quot;Transform-style&quot;&gt;&lt;/a&gt;&lt;strong&gt;Transform-style&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;transform–style属性指定嵌套元素是怎样在三维空间中呈现。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法&lt;/strong&gt;:transform-style: flat|preserve-3d;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flat值为默认值，表示所有子元素在2D平面呈现。&lt;/li&gt;
&lt;li&gt;preserve-3d表示所有子元素在3D空间中呈现。&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/transform-style.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/transform-style.png&quot; alt=&quot;transform-style&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也就是说，如果对一个元素设置了transform-style的值为flat，则该元素的所有子元素都将被平展到该元素的2D平面中进行呈现。沿着X轴或Y轴方向旋转该元素将导致位于正或负Z轴位置的子元素显示在该元素的平面上，而不是它的前面或者后面。如果对一个元素设置了transform-style的值为preserve-3d，它表示不执行平展操作，他的所有子元素位于3D空间中。&lt;/p&gt;
&lt;h3 id=&quot;Backface-visibility&quot;&gt;&lt;a href=&quot;#Backface-visibility&quot; class=&quot;headerlink&quot; title=&quot;Backface-visibility&quot;&gt;&lt;/a&gt;&lt;strong&gt;Backface-visibility&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;backface-visibility 属性定义当元素不面向屏幕时是否可见。&lt;/p&gt;
&lt;p&gt;如果在旋转元素不希望看到其背面时，该属性很有用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法**&lt;/strong&gt;:**backface-visibility: visible|hidden;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/backface-visibility.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/backface-visibility.png&quot; alt=&quot;backface-visibility&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;参考资源：&quot;&gt;&lt;a href=&quot;#参考资源：&quot; class=&quot;headerlink&quot; title=&quot;参考资源：&quot;&gt;&lt;/a&gt;&lt;strong&gt;参考资源：&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;CSS 3D transform变换：&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://www.zhangxinxu.com/wordpress/2010/11/css3-transitions-transforms%E5%92%8Canimation%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B%E4%B8%8E%E5%BA%94%E7%94%A8%E5%B1%95%E7%A4%BA/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.zhangxinxu.com/wordpress/2010/11/css3-transitions-transforms%E5%92%8Canimation%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B%E4%B8%8E%E5%BA%94%E7%94%A8%E5%B1%95%E7%A4%BA/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.787866.com/2083.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.787866.com/2083.html&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;CSS动画视图在线工具：&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;http://www.w3cways.com/css3-animation-tool&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.w3cways.com/css3-animation-tool&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容为《前端开发工程师》微专业的第一门课《网页制作》的第五章学习笔记。&lt;/p&gt;
&lt;h2 id=&quot;《网页制作》之CSS—CSS变形（2d-3d）&quot;&gt;&lt;a href=&quot;#《网页制作》之CSS—CSS变形（2d-3d）&quot; class=&quot;headerlink&quot; title=&quot;《
    
    </summary>
    
      <category term="网易微专业·前端开发工程师" scheme="http://yoursite.com/categories/%E7%BD%91%E6%98%93%E5%BE%AE%E4%B8%93%E4%B8%9A%C2%B7%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
    
      <category term="前端开发工程师学习笔记" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>网易微专业之《前端开发工程师》学习笔记（10）-CSS</title>
    <link href="http://yoursite.com/2015/12/25/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-8810-ef-bc-89-css/"/>
    <id>http://yoursite.com/2015/12/25/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-8810-ef-bc-89-css/</id>
    <published>2015-12-25T06:20:03.000Z</published>
    <updated>2016-04-07T06:47:16.000Z</updated>
    
    <content type="html">&lt;p&gt;以下内容为《前端开发工程师》微专业的第一门课《网页制作》的第五章学习笔记。&lt;/p&gt;
&lt;h2 id=&quot;《网页制作》之CSS—CSS布局&quot;&gt;&lt;a href=&quot;#《网页制作》之CSS—CSS布局&quot; class=&quot;headerlink&quot; title=&quot;《网页制作》之CSS—CSS布局&quot;&gt;&lt;/a&gt;《网页制作》之CSS—CSS布局&lt;/h2&gt;&lt;h2 id=&quot;布局&quot;&gt;&lt;a href=&quot;#布局&quot; class=&quot;headerlink&quot; title=&quot;布局&quot;&gt;&lt;/a&gt;&lt;strong&gt;布局&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;内容包括：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;布局简介、display(水平居中、居中导航)、position(轮播头图、固定顶栏、遮罩、三行自适应布局)、float(两列布局)、flex(三行两列自适应)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;布局：&lt;/strong&gt;将元素以正确的大小摆放在正确的位置上。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;布局属性：&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;Display-设置元素的显示方式&quot;&gt;&lt;a href=&quot;#Display-设置元素的显示方式&quot; class=&quot;headerlink&quot; title=&quot;Display:设置元素的显示方式&quot;&gt;&lt;/a&gt;&lt;strong&gt;Display:设置元素的显示方式&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;display：none | inline | block | list-item | inline-block | table | inline-table | table-caption | table-cell | table-row | table-row-group | table-column | table-column-group | table-footer-group | table-header-group | run-in | box | inline-box | flexbox | inline-flexbox | flex | inline-flex&lt;/p&gt;
&lt;p&gt;默认值：inline&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;取值：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;none： 隐藏对象。与&lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/layout/visibility.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;visibility&lt;/a&gt;属性的hidden值不同，其不为被隐藏的对象保留其物理空间&lt;/li&gt;
&lt;li&gt;inline： 指定对象为内联元素。&lt;/li&gt;
&lt;li&gt;block： 指定对象为块元素。&lt;/li&gt;
&lt;li&gt;list-item： 指定对象为列表项目。&lt;/li&gt;
&lt;li&gt;inline-block： 指定对象为内联块元素。（CSS2）&lt;/li&gt;
&lt;li&gt;table： 指定对象作为块元素级的表格。类同于html标签&amp;lt;table&amp;gt;（CSS2）&lt;/li&gt;
&lt;li&gt;inline-table： 指定对象作为内联元素级的表格。类同于html标签&amp;lt;table&amp;gt;（CSS2）&lt;/li&gt;
&lt;li&gt;table-caption： 指定对象作为表格标题。类同于html标签&amp;lt;caption&amp;gt;（CSS2）&lt;/li&gt;
&lt;li&gt;table-cell： 指定对象作为表格单元格。类同于html标签&amp;lt;td&amp;gt;（CSS2）&lt;/li&gt;
&lt;li&gt;table-row： 指定对象作为表格行。类同于html标签&amp;lt;tr&amp;gt;（CSS2）&lt;/li&gt;
&lt;li&gt;table-row-group： 指定对象作为表格行组。类同于html标签&amp;lt;tbody&amp;gt;（CSS2）&lt;/li&gt;
&lt;li&gt;table-column： 指定对象作为表格列。类同于html标签&amp;lt;col&amp;gt;（CSS2）&lt;/li&gt;
&lt;li&gt;table-column-group： 指定对象作为表格列组显示。类同于html标签&amp;lt;colgroup&amp;gt;（CSS2）&lt;/li&gt;
&lt;li&gt;table-header-group： 指定对象作为表格标题组。类同于html标签&amp;lt;thead&amp;gt;（CSS2）&lt;/li&gt;
&lt;li&gt;table-footer-group： 指定对象作为表格脚注组。类同于html标签&amp;lt;tfoot&amp;gt;（CSS2）&lt;/li&gt;
&lt;li&gt;run-in： 根据上下文决定对象是内联对象还是块级对象。（CSS3）&lt;/li&gt;
&lt;li&gt;box： 将对象作为弹性伸缩盒显示。（伸缩盒最老版本）（CSS3）&lt;/li&gt;
&lt;li&gt;inline-box： 将对象作为内联块级弹性伸缩盒显示。（伸缩盒最老版本）（CSS3）&lt;/li&gt;
&lt;li&gt;flexbox： 将对象作为弹性伸缩盒显示。（伸缩盒过渡版本）（CSS3）&lt;/li&gt;
&lt;li&gt;inline-flexbox： 将对象作为内联块级弹性伸缩盒显示。（伸缩盒过渡版本）（CSS3）&lt;/li&gt;
&lt;li&gt;flex： 将对象作为弹性伸缩盒显示。（伸缩盒最新版本）（CSS3）&lt;/li&gt;
&lt;li&gt;inline-flex： 将对象作为内联块级弹性伸缩盒显示。（伸缩盒最新版本）（CSS3）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;D-isplay-Block（块级元素）&quot;&gt;&lt;a href=&quot;#D-isplay-Block（块级元素）&quot; class=&quot;headerlink&quot; title=&quot;D**isplay: Block（块级元素）**&quot;&gt;&lt;/a&gt;&lt;strong&gt;D**&lt;/strong&gt;isplay: Block（块级元素）**&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/display-block块级元素.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/display-block块级元素.png&quot; alt=&quot;display-block块级元素&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;默认的display:block元素有：div,h1-h6,p,ul,form,……&lt;/p&gt;
&lt;h3 id=&quot;D-isplay-inline（行内元素）&quot;&gt;&lt;a href=&quot;#D-isplay-inline（行内元素）&quot; class=&quot;headerlink&quot; title=&quot;D**isplay: inline（行内元素）**&quot;&gt;&lt;/a&gt;&lt;strong&gt;D**&lt;/strong&gt;isplay: inline（行内元素）**&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/display-inline布局.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/display-inline布局.png&quot; alt=&quot;display-inline布局&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;默认display:inline元素有：span,a,label,cite,em,……&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Display:block与display:inline比较&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/display-inline-block布局.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/display-inline-block布局.png&quot; alt=&quot;display-inline-block布局&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;D-isplay-inline-block（行内元素）&quot;&gt;&lt;a href=&quot;#D-isplay-inline-block（行内元素）&quot; class=&quot;headerlink&quot; title=&quot;D**isplay: inline-block（行内元素）**&quot;&gt;&lt;/a&gt;&lt;strong&gt;D**&lt;/strong&gt;isplay: inline-block（行内元素）**&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/display-行内元素.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/display-行内元素.png&quot; alt=&quot;display-行内元素&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;默认display:inline-block元素有：img,input,textarea,select,button,……&lt;/p&gt;
&lt;h3 id=&quot;D-isplay-none&quot;&gt;&lt;a href=&quot;#D-isplay-none&quot; class=&quot;headerlink&quot; title=&quot;D**isplay: none**&quot;&gt;&lt;/a&gt;&lt;strong&gt;D**&lt;/strong&gt;isplay: none**&lt;/h3&gt;&lt;p&gt;设置元素不显示。&lt;/p&gt;
&lt;h3 id=&quot;display-none或visibility-hidden&quot;&gt;&lt;a href=&quot;#display-none或visibility-hidden&quot; class=&quot;headerlink&quot; title=&quot;display:none或visibility:hidden&quot;&gt;&lt;/a&gt;&lt;strong&gt;display:none或visibility:hidden&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;隐藏一个元素可以通过把display属性设置为”none”，或把visibility属性设置为”hidden”。display属性设置一个元素应如何显示，visibility属性指定一个元素应可见还是隐藏。这两种方法会产生不同的结果。&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;visibility:hidden可以隐藏某个元素，但隐藏的元素仍需占用与未隐藏之前一样的空间。也就是说，该元素虽然被隐藏了，但仍然会影响布局.&lt;/li&gt;
&lt;li&gt;display:none可以隐藏某个元素，且隐藏的元素不会占用任何空间。也就是说，该元素不但被隐藏了，而且该元素原本占用的空间也会从页面布局中消失。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;与D-isplay相关布局模式&quot;&gt;&lt;a href=&quot;#与D-isplay相关布局模式&quot; class=&quot;headerlink&quot; title=&quot;与D**isplay相关布局模式**&quot;&gt;&lt;/a&gt;&lt;strong&gt;与D**&lt;/strong&gt;isplay相关布局模式**&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;块级元素水平居中&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/块级元素水平居中.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/块级元素水平居中.png&quot; alt=&quot;块级元素水平居中&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;居中导航&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/居中导航.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/居中导航.png&quot; alt=&quot;居中导航&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;参考知识：&quot;&gt;&lt;a href=&quot;#参考知识：&quot; class=&quot;headerlink&quot; title=&quot;参考知识：&quot;&gt;&lt;/a&gt;&lt;strong&gt;参考知识：&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&quot;元素分类&quot;&gt;&lt;a href=&quot;#元素分类&quot; class=&quot;headerlink&quot; title=&quot;元素分类&quot;&gt;&lt;/a&gt;&lt;strong&gt;元素分类&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在CSS中，html中的标签元素大体被分为三种不同的类型：块状元素、内联元素(又叫行内元素)和内联块状元素。&lt;/p&gt;
&lt;p&gt;常用的块状元素有：&lt;/p&gt;
&lt;p&gt;&amp;lt;div&amp;gt;、&amp;lt;p&amp;gt;、&amp;lt;h1&amp;gt;…&amp;lt;h6&amp;gt;、&amp;lt;ol&amp;gt;、&amp;lt;ul&amp;gt;、&amp;lt;dl&amp;gt;、&amp;lt;table&amp;gt;、&amp;lt;address&amp;gt;、&amp;lt;blockquote&amp;gt; 、&amp;lt;form&amp;gt;&lt;/p&gt;
&lt;p&gt;常用的内联元素有：&lt;/p&gt;
&lt;p&gt;&amp;lt;a&amp;gt;、&amp;lt;span&amp;gt;、&amp;lt;br&amp;gt;、&amp;lt;i&amp;gt;、&amp;lt;em&amp;gt;、&amp;lt;strong&amp;gt;、&amp;lt;label&amp;gt;、&amp;lt;q&amp;gt;、&amp;lt;var&amp;gt;、&amp;lt;cite&amp;gt;、&amp;lt;code&amp;gt;&lt;/p&gt;
&lt;p&gt;常用的内联块状元素有：&lt;/p&gt;
&lt;p&gt;&amp;lt;img&amp;gt;、&amp;lt;input&amp;gt;&lt;/p&gt;
&lt;h3 id=&quot;元素分类–块级元素&quot;&gt;&lt;a href=&quot;#元素分类–块级元素&quot; class=&quot;headerlink&quot; title=&quot;元素分类–块级元素&quot;&gt;&lt;/a&gt;&lt;strong&gt;元素分类–块级元素&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;设置display:block就是将元素显示为块级元素。&lt;/p&gt;
&lt;p&gt;如下代码就是将内联元素a转换为块状元素，从而使a元素具有块状元素特点。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a{display:block;}&lt;br&gt;&lt;strong&gt;块级元素特点：&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;每个块级元素都从新的一行开始，并且其后的元素也另起一行。（真霸道，一个块级元素独占一行）&lt;/li&gt;
&lt;li&gt;元素的高度、宽度、行高以及顶和底边距都可设置。&lt;/li&gt;
&lt;li&gt;元素宽度在不设置的情况下，是它本身父容器的100%（和父元素的宽度一致），除非设定一个宽度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;元素分类–内联元素&quot;&gt;&lt;a href=&quot;#元素分类–内联元素&quot; class=&quot;headerlink&quot; title=&quot;元素分类–内联元素&quot;&gt;&lt;/a&gt;&lt;strong&gt;元素分类–内联元素&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在html中，&amp;lt;span&amp;gt;、&amp;lt;a&amp;gt;、&amp;lt;label&amp;gt;、 &amp;lt;strong&amp;gt; 和&amp;lt;em&amp;gt;就是典型的内联元素（行内元素）（inline）元素。当然块状元素也可以通过代码display:inline将元素设置为内联元素。如下代码就是将块状元素div转换为内联元素，从而使 div 元素具有内联元素特点。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;div{display:inline; }&lt;br&gt;&lt;strong&gt;内联元素特点：&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;和其他元素都在一行上；&lt;/li&gt;
&lt;li&gt;元素的高度、宽度及顶部和底部边距不可设置；&lt;/li&gt;
&lt;li&gt;元素的宽度就是它包含的文字或图片的宽度，不可改变。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;解决-内联元素（行内元素）-间隙bug问题&quot;&gt;&lt;a href=&quot;#解决-内联元素（行内元素）-间隙bug问题&quot; class=&quot;headerlink&quot; title=&quot;解决**内联元素（行内元素）**间隙bug问题&quot;&gt;&lt;/a&gt;&lt;strong&gt;解决**&lt;/strong&gt;内联元素（&lt;strong&gt;&lt;strong&gt;行内元素&lt;/strong&gt;&lt;/strong&gt;）&lt;strong&gt;**间隙bug问题&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;行内元素之间会产生间隙bug问题的场景：&lt;/p&gt;
&lt;p&gt;当行内元素之间有“回车”、“tab”、“空格”时就会出现间隙。&lt;/p&gt;
&lt;p&gt;如下代码：&lt;/p&gt;
&lt;p&gt;&amp;lt;div&amp;gt;&lt;br&gt;&amp;lt;a&amp;gt;1&amp;lt;/a&amp;gt;&lt;br&gt;&amp;lt;a&amp;gt;2&amp;lt;/a&amp;gt;&lt;br&gt;&amp;lt;span&amp;gt;33333&amp;lt;/span&amp;gt;&lt;br&gt;&amp;lt;span&amp;gt;44444&amp;lt;/span&amp;gt;&lt;br&gt;&amp;lt;em&amp;gt;555555&amp;lt;/em&amp;gt;&lt;br&gt;&amp;lt;/div&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决方法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、&lt;span style=&quot;color: #ff0000;&quot;&gt;写在一行，之间不要有空格之类的符号。&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;div&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;a&amp;gt;1&amp;lt;/a&amp;gt;&amp;lt;a&amp;gt;2&amp;lt;/a&amp;gt;&amp;lt;span&amp;gt;33333&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;44444&amp;lt;/span&amp;gt;&amp;lt;em&amp;gt;555555&amp;lt;/em&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/div&amp;gt;&lt;br&gt;2、&lt;span style=&quot;color: #ff0000;&quot;&gt;使用font-size:0，设置内联元素的父元素字体大小为0，然后设置内联元素字体大小。&lt;/span&gt;&lt;br&gt;div{font-size:0;}&lt;/p&gt;
&lt;p&gt;a,span,em{font-size:16px;}/&lt;em&gt;div为a、span、em元素的父元素&lt;/em&gt;/&lt;br&gt;3、&lt;span style=&quot;color: #ff0000;&quot;&gt;标签分开写&lt;/span&gt;，例如：&lt;br&gt;&amp;lt;div&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;a&amp;gt;1&amp;lt;/a&lt;/p&gt;
&lt;p&gt;&amp;gt; &amp;lt;a&amp;gt;2&amp;lt;/a&lt;/p&gt;
&lt;p&gt;&amp;gt; &amp;lt;span&amp;gt;33333&amp;lt;/span&lt;/p&gt;
&lt;p&gt;&amp;gt; &amp;lt;span&amp;gt;44444&amp;lt;/span&lt;/p&gt;
&lt;p&gt;&amp;gt; &amp;lt;em&amp;gt;555555&amp;lt;/em&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/div&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;元素分类–内联块状元素&quot;&gt;&lt;a href=&quot;#元素分类–内联块状元素&quot; class=&quot;headerlink&quot; title=&quot;元素分类–内联块状元素&quot;&gt;&lt;/a&gt;&lt;strong&gt;元素分类–内联块状元素&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;内联块状元素（&lt;/strong&gt;inline-block&lt;strong&gt;）&lt;/strong&gt;就是同时具备内联元素、块状元素的特点，&lt;strong&gt;代码**&lt;/strong&gt;display:inline-block&lt;strong&gt;**就是将元素设置为内联块状元素。&lt;/strong&gt;(css2.1新增)，&amp;lt;img&amp;gt;、&amp;lt;input&amp;gt;标签就是这种内联块状标签。&lt;/p&gt;
&lt;p&gt;inline-block 元素特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;和其他元素都在一行上；&lt;/li&gt;
&lt;li&gt;元素的高度、宽度、行高以及顶和底边距都可设置。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;如何实现浏览器兼容版的inline-block显示&quot;&gt;&lt;a href=&quot;#如何实现浏览器兼容版的inline-block显示&quot; class=&quot;headerlink&quot; title=&quot;如何实现浏览器兼容版的inline-block显示&quot;&gt;&lt;/a&gt;&lt;strong&gt;如何实现浏览器兼容版的inline-block显示&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;IE6,7支持inline元素转换成inline-block，但不支持block元素转换成inline-block，所以非inline元素在IE6,7下要转换成inline-block，需先转换成inline，然后触发hasLayout，以此来获得和inline-block类似的效果；你可以这样：&lt;/p&gt;
&lt;p&gt;全兼容的inline-block：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;div {&lt;/p&gt;
&lt;p&gt;display: inline-block;&lt;/p&gt;
&lt;p&gt;*display: inline;&lt;/p&gt;
&lt;p&gt;*zoom: 1;&lt;/p&gt;
&lt;p&gt;}&lt;br&gt;对应的脚本特性为display。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;定位（position）&quot;&gt;&lt;a href=&quot;#定位（position）&quot; class=&quot;headerlink&quot; title=&quot;定位（position）:&quot;&gt;&lt;/a&gt;&lt;strong&gt;定位（position）:&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;CSS 定位 (Positioning) 属性允许你对元素进行定位。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定位的基本思想**&lt;/strong&gt;:**它允许你定义元素框相对于其正常位置应该出现的位置，或者相对于父元素、另一个元素甚至浏览器窗口本身的位置。&lt;/p&gt;
&lt;h3 id=&quot;CSS-定位机制&quot;&gt;&lt;a href=&quot;#CSS-定位机制&quot; class=&quot;headerlink&quot; title=&quot;CSS 定位机制&quot;&gt;&lt;/a&gt;&lt;strong&gt;CSS 定位机制&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;CSS 有三种基本的定位机制：普通流、浮动和绝对定位。&lt;/p&gt;
&lt;p&gt;除非专门指定，否则所有框都在普通流中定位。也就是说，普通流中的元素的位置由元素在 (X)HTML 中的位置决定。&lt;/p&gt;
&lt;p&gt;块级框从上到下一个接一个地排列，框之间的垂直距离是由框的垂直外边距计算出来。&lt;/p&gt;
&lt;p&gt;行内框在一行中水平布置。可以使用水平内边距、边框和外边距调整它们的间距。但是，垂直内边距、边框和外边距不影响行内框的高度。由一行形成的水平框称为&lt;strong&gt;行框（Line Box）&lt;/strong&gt;，行框的高度总是足以容纳它包含的所有行内框。不过，设置行高可以增加这个框的高度。&lt;/p&gt;
&lt;h3 id=&quot;CSS-定位属性&quot;&gt;&lt;a href=&quot;#CSS-定位属性&quot; class=&quot;headerlink&quot; title=&quot;CSS 定位属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;CSS 定位属性&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;P**&lt;/strong&gt;osition-设置定位方式**&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;T**&lt;/strong&gt;op,right,bottom,left,z-index-设置元素边缘距离参照物边缘的距离**&lt;br&gt;CSS 定位属性允许你对元素进行定位。&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;491&quot;&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_class_position.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;position&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;491&quot;&gt;把元素放置到一个静态的、相对的、绝对的、或固定的位置中。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pos_top.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;top&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;491&quot;&gt;定义了一个定位元素的上外边距边界与其包含块上边界之间的偏移。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pos_right.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;right&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;491&quot;&gt;定义了定位元素右外边距边界与其包含块右边界之间的偏移。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pos_bottom.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bottom&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;491&quot;&gt;定义了定位元素下外边距边界与其包含块下边界之间的偏移。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pos_left.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;left&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;491&quot;&gt;定义了定位元素左外边距边界与其包含块左边界之间的偏移。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pos_overflow.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;overflow&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;491&quot;&gt;设置当元素的内容溢出其区域时发生的事情。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pos_clip.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;clip&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;491&quot;&gt;设置元素的形状。元素被剪入这个形状之中，然后显示出来。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pos_vertical-align.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vertical-align&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;491&quot;&gt;设置元素的垂直对齐方式。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;128&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pos_z-index.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;z-index&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;491&quot;&gt;设置元素的堆叠顺序。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;CSS-position-属性&quot;&gt;&lt;a href=&quot;#CSS-position-属性&quot; class=&quot;headerlink&quot; title=&quot;CSS position 属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;CSS position 属性&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;通过使用 position 属性，我们可以选择 4 种不同类型的定位，这会影响元素框生成的方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;static&lt;/strong&gt;&lt;br&gt;元素框正常生成。块级元素生成一个矩形框，作为文档流的一部分，行内元素则会创建一个或多个行框，置于其父元素中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;relative&lt;/strong&gt;&lt;br&gt;元素框偏移某个距离。元素仍保持其未定位前的形状，它原本所占的空间仍保留。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;absolute&lt;/strong&gt;&lt;br&gt;元素框从文档流完全删除，并相对于其包含块定位。包含块可能是文档中的另一个元素或者是初始包含块。元素原先在正常文档流中所占的空间会关闭，就好像元素原来不存在一样。元素定位后生成一个块级框，而不论原来它在正常流中生成何种类型的框。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;fixed&lt;/strong&gt;&lt;br&gt;元素框的表现类似于将 position 设置为 absolute，不过其包含块是视窗本身。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Position-relative&quot;&gt;&lt;a href=&quot;#Position-relative&quot; class=&quot;headerlink&quot; title=&quot;Position:relative&quot;&gt;&lt;/a&gt;&lt;strong&gt;Position:relative&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/position-relative相对定位.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/position-relative相对定位.png&quot; alt=&quot;position-relative相对定位&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;设置为相对定位的元素框会偏移某个距离。元素仍然保持其未定位前的形状，它原本所占的空间仍保留。&lt;/p&gt;
&lt;p&gt;如果对一个元素进行相对定位，它将出现在它所在的位置上。然后，可以通过设置垂直或水平位置，让这个元素“相对于”它的起点进行移动。&lt;/p&gt;
&lt;p&gt;注意，在使用相对定位时，无论是否进行移动，&lt;span style=&quot;color: #ff0000;&quot;&gt;元素仍然占据原来的空间&lt;/span&gt;。因此，移动元素会导致它覆盖其它框.&lt;/p&gt;
&lt;p&gt;相对定位完成的过程是首先按static(float)方式生成一个元素(并且元素像层一样浮动了起来)，然后相对于以前的位置移动，移动的方向和幅度由left、right、top、bottom属性确定，偏移前的位置保留不动。&lt;/p&gt;
&lt;p&gt;如下代码实现相对于以前位置向下移动50px，向右移动100px;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#div1{&lt;/p&gt;
&lt;p&gt;width:200px;&lt;/p&gt;
&lt;p&gt;height:200px;&lt;/p&gt;
&lt;p&gt;border:2px red solid;&lt;/p&gt;
&lt;p&gt;position:relative;&lt;/p&gt;
&lt;p&gt;left:100px;&lt;/p&gt;
&lt;p&gt;top:50px;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;&amp;lt;div id=”div1”&amp;gt;&amp;lt;/div&amp;gt;&lt;br&gt;效果图：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Position-absolute&quot;&gt;&lt;a href=&quot;#Position-absolute&quot; class=&quot;headerlink&quot; title=&quot; Position:absolute&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/相对定位案例.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/相对定位案例.png&quot; alt=&quot;相对定位案例&quot;&gt;&lt;/a&gt; &lt;strong&gt;Position:absolute&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/position-absolute绝对定位.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/position-absolute绝对定位.png&quot; alt=&quot;position-absolute绝对定位&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;设置为绝对定位的元素框从文档流完全删除，并相对于其包含块定位，包含块可能是文档中的另一个元素或者是初始包含块。元素原先在正常文档流中所占的空间会关闭，就好像该元素原来不存在一样。元素定位后生成一个块级框，而不论原来它在正常流中生成何种类型的框。&lt;/p&gt;
&lt;p&gt;绝对定位使元素的位置与文档流无关，因此不占据空间。这一点与相对定位不同，相对定位实际上被看作普通流定位模型的一部分，因为元素的位置相对于它在普通流中的位置。&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;绝对定位的元素的位置相对于&lt;strong&gt;最近的已定位祖先元素&lt;/strong&gt;，如果元素没有已定位的祖先元素，那么它的位置相对于&lt;strong&gt;最初的包含块&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果想为元素设置层模型中的绝对定位，需要设置&lt;strong&gt;position:absolute&lt;/strong&gt;(表示绝对定位)，这条语句的作用将元素从文档流中拖出来，然后使用left、right、top、bottom属性相对于其&lt;strong&gt;最接近的一个具有定位属性的父包含块&lt;/strong&gt;进行绝对定位。如果不存在这样的包含块，则相对于body元素，即相对于&lt;strong&gt;浏览器窗口&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;对于定位的主要问题是要记住每种定位的意义。&lt;span style=&quot;color: #ff0000;&quot;&gt;&lt;strong&gt;相对定位是“相对于”元素在文档中的初始位置，而绝对定位是“相对于”最近的已定位祖先元素，如果不存在已定位的祖先元素，那么“相对于”最初的包含块。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如下面代码可以实现div元素相对于浏览器窗口向右移动100px，向下移动50px。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;div{&lt;/p&gt;
&lt;p&gt;width:200px;&lt;/p&gt;
&lt;p&gt;height:200px;&lt;/p&gt;
&lt;p&gt;border:2px red solid;&lt;/p&gt;
&lt;p&gt;position:absolute;&lt;/p&gt;
&lt;p&gt;left:100px;&lt;/p&gt;
&lt;p&gt;top:50px;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;&amp;lt;div id=”div1”&amp;gt;&amp;lt;/div&amp;gt;&lt;br&gt;效果如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/绝对定位案例.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/绝对定位案例.png&quot; alt=&quot;绝对定位案例&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Position-absolute-应用：轮播头图&quot;&gt;&lt;a href=&quot;#Position-absolute-应用：轮播头图&quot; class=&quot;headerlink&quot; title=&quot;Position:absolute-应用：轮播头图&quot;&gt;&lt;/a&gt;&lt;strong&gt;Position:absolute-应用：轮播头图&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/绝对定位-轮播头图.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/绝对定位-轮播头图.png&quot; alt=&quot;绝对定位-轮播头图&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Position-fixed&quot;&gt;&lt;a href=&quot;#Position-fixed&quot; class=&quot;headerlink&quot; title=&quot;Position:fixed&quot;&gt;&lt;/a&gt;&lt;strong&gt;Position:fixed&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/position-fixed固定定位.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/position-fixed固定定位.png&quot; alt=&quot;position-fixed固定定位&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;fixed：表示固定定位，与absolute定位类型类似，但它的相对移动的坐标是视图（&lt;strong&gt;屏幕内的网页窗口&lt;/strong&gt;）本身。由于视图本身是固定的，它不会随浏览器窗口的滚动条滚动而变化，除非你在屏幕中移动浏览器窗口的屏幕位置，或改变浏览器窗口的显示大小，因此固定定位的元素会始终位于浏览器窗口内视图的某个位置，不会受文档流动影响，这与background-attachment:fixed;属性功能相同。&lt;/p&gt;
&lt;p&gt;以下代码可以实现相对于&lt;strong&gt;浏览器视图&lt;/strong&gt;向右移动100px，向下移动50px。并且拖动滚动条时位置固定不变。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#div1{&lt;/p&gt;
&lt;p&gt;width:200px;&lt;/p&gt;
&lt;p&gt;height:200px;&lt;/p&gt;
&lt;p&gt;border:2px red solid;&lt;/p&gt;
&lt;p&gt;position:fixed;&lt;/p&gt;
&lt;p&gt;left:100px;&lt;/p&gt;
&lt;p&gt;top:50px;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;&amp;lt;p&amp;gt;文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本。&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;….&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Position-fixe-应用：&quot;&gt;&lt;a href=&quot;#Position-fixe-应用：&quot; class=&quot;headerlink&quot; title=&quot;Position:fixe-应用：&quot;&gt;&lt;/a&gt;&lt;strong&gt;Position:fixe-应用：&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1. 固定顶栏布局&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/固定顶栏.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/固定顶栏.png&quot; alt=&quot;固定顶栏&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.遮罩布局&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/遮罩布局.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/遮罩布局.png&quot; alt=&quot;遮罩布局&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.**&lt;/strong&gt;三行自适应布局**&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/三行自适应布局.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/三行自适应布局.png&quot; alt=&quot;三行自适应布局&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Z-index-设置元素在z轴上的排序&quot;&gt;&lt;a href=&quot;#Z-index-设置元素在z轴上的排序&quot; class=&quot;headerlink&quot; title=&quot;Z**-index -设置元素在z轴上的排序**&quot;&gt;&lt;/a&gt;&lt;strong&gt;Z**&lt;/strong&gt;-index -设置元素在z轴上的排序**&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;z-index 属性设置元素的堆叠顺序。&lt;/strong&gt;拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;元素可拥有负的 z-index 属性值。&lt;/li&gt;
&lt;li&gt;Z-index 仅能在定位元素上奏效（例如 position:absolute;）&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;129&quot;&gt;&lt;strong&gt;值&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;490&quot;&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;129&quot;&gt;auto&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;490&quot;&gt;默认。堆叠顺序与父元素相等。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;129&quot;&gt;&lt;em&gt;number&lt;/em&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;490&quot;&gt;设置元素的堆叠顺序。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;129&quot;&gt;inherit&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;490&quot;&gt;规定应该从父元素继承 z-index 属性的值。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Z-index栈&quot;&gt;&lt;a href=&quot;#Z-index栈&quot; class=&quot;headerlink&quot; title=&quot;Z-index栈&quot;&gt;&lt;/a&gt;&lt;strong&gt;Z-index栈&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/z-index栈.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/z-index栈.png&quot; alt=&quot;z-index栈&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Float浮动&quot;&gt;&lt;a href=&quot;#Float浮动&quot; class=&quot;headerlink&quot; title=&quot;Float浮动:&quot;&gt;&lt;/a&gt;&lt;strong&gt;Float浮动:&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;浮动的框可以向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。&lt;/p&gt;
&lt;p&gt;由于浮动框不在文档的普通流中，所以文档的普通流中的块框表现得就像浮动框不存在一样。&lt;/p&gt;
&lt;p&gt;float 属性定义元素在哪个方向浮动.&lt;/p&gt;
&lt;p&gt;以往这个属性总应用于图像，使文本围绕在图像周围，不过在 CSS 中，任何元素都可以浮动。浮动元素会生成一个块级框，而不论它本身是何种元素。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;float：none | left | right&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/float浮动.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/float浮动.png&quot; alt=&quot;float浮动&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Float浮动基本特征：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt;float的元素在同一文档流&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/float浮动属性1.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/float浮动属性1.png&quot; alt=&quot;float浮动属性1&quot;&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt;float元素半脱离文档流&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/float浮动属性2.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/float浮动属性2.png&quot; alt=&quot;float浮动属性2&quot;&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;&lt;strong&gt;对元素，脱离文档流；对内容，在文档流。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;Clear-清除浮动：&quot;&gt;&lt;a href=&quot;#Clear-清除浮动：&quot; class=&quot;headerlink&quot; title=&quot;Clear-清除浮动：&quot;&gt;&lt;/a&gt;&lt;strong&gt;Clear-清除浮动：&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;元素浮动之后，周围的元素会重新排列，为了避免这种情况，使用clear属性。&lt;/p&gt;
&lt;p&gt;clear 属性规定元素的哪一侧不允许其他浮动元素。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;clear：none | left | right | both&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用于(浮动元素)后续元素；&lt;/li&gt;
&lt;li&gt;&lt;p&gt;应用于块级元素；&lt;br&gt;&lt;strong&gt;使用方式：&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;增加空白元素&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Clearfix&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;代码：&lt;/strong&gt;&lt;blockquote&gt;
&lt;p&gt;.clearfix:after{&lt;/p&gt;
&lt;p&gt;Content:”.”;display:block;clear:both;height:0;&lt;/p&gt;
&lt;p&gt;Overflow:hidden;visibility:hidden;}&lt;/p&gt;
&lt;p&gt;.clearfix{zoom:1;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Float应用-两列布局：&quot;&gt;&lt;a href=&quot;#Float应用-两列布局：&quot; class=&quot;headerlink&quot; title=&quot;Float应用-两列布局：&quot;&gt;&lt;/a&gt;&lt;strong&gt;Float应用-两列布局：&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/float-两列布局.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/float-两列布局.png&quot; alt=&quot;float-两列布局&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Flex伸缩布局&quot;&gt;&lt;a href=&quot;#Flex伸缩布局&quot; class=&quot;headerlink&quot; title=&quot;Flex伸缩布局:&quot;&gt;&lt;/a&gt;&lt;strong&gt;Flex伸缩布局:&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&quot;Flex-Terms-基本概念：&quot;&gt;&lt;a href=&quot;#Flex-Terms-基本概念：&quot; class=&quot;headerlink&quot; title=&quot;Flex Terms-基本概念：&quot;&gt;&lt;/a&gt;&lt;strong&gt;Flex Terms-基本概念：&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Flex容器（flex container）**&lt;/strong&gt;：**&lt;/p&gt;
&lt;p&gt;采用Flex布局的元素，称为Flex容器（flex container），简称”容器”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Flex项目（flex item）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Flex容器的所有子元素自动成为容器成员，称为Flex项目（flex item），简称”项目”。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex伸缩布局概念.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex伸缩布局概念.png&quot; alt=&quot;flex伸缩布局概念&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;容器默认存在两根轴：水平的主轴&lt;strong&gt;（main axis）&lt;/strong&gt;和垂直的交叉轴&lt;strong&gt;（cross axis）&lt;/strong&gt;。主轴的开始位置（与边框的交叉点）叫做&lt;strong&gt;main start&lt;/strong&gt;，结束位置叫做&lt;strong&gt;main end&lt;/strong&gt;；交叉轴的开始位置叫做&lt;strong&gt;cross start&lt;/strong&gt;，结束位置叫做cross end。&lt;/p&gt;
&lt;p&gt;项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。&lt;/p&gt;
&lt;h3 id=&quot;创建-flex-container容器：&quot;&gt;&lt;a href=&quot;#创建-flex-container容器：&quot; class=&quot;headerlink&quot; title=&quot;创建**flex container容器：**&quot;&gt;&lt;/a&gt;&lt;strong&gt;创建**&lt;/strong&gt;flex container容器：**&lt;/h3&gt;&lt;p&gt;Display:flex&lt;/p&gt;
&lt;h3 id=&quot;Flex-items（flex项目）&quot;&gt;&lt;a href=&quot;#Flex-items（flex项目）&quot; class=&quot;headerlink&quot; title=&quot;Flex items（flex项目）&quot;&gt;&lt;/a&gt;&lt;strong&gt;Flex items（flex项目）&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在文档流中的子元素是弹性子元素&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-item.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-item.png&quot; alt=&quot;flex item&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;弹性布局特性：&quot;&gt;&lt;a href=&quot;#弹性布局特性：&quot; class=&quot;headerlink&quot; title=&quot;弹性布局特性：&quot;&gt;&lt;/a&gt;&lt;strong&gt;弹性布局特性：&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&quot;与方向有关：&quot;&gt;&lt;a href=&quot;#与方向有关：&quot; class=&quot;headerlink&quot; title=&quot;与方向有关：&quot;&gt;&lt;/a&gt;&lt;strong&gt;与方向有关：&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;flex-direction&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flex-wrap&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flex-flow&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;order&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;与弹性有关：&quot;&gt;&lt;a href=&quot;#与弹性有关：&quot; class=&quot;headerlink&quot; title=&quot;与弹性有关：&quot;&gt;&lt;/a&gt;&lt;strong&gt;与弹性有关：&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Flex-basis&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flex-grow&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flex-shrink&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;flex&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;与对齐有关：&quot;&gt;&lt;a href=&quot;#与对齐有关：&quot; class=&quot;headerlink&quot; title=&quot;与对齐有关：&quot;&gt;&lt;/a&gt;&lt;strong&gt;与对齐有关：&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Justify-content&lt;/li&gt;
&lt;li&gt;Align-items&lt;/li&gt;
&lt;li&gt;Align-self&lt;/li&gt;
&lt;li&gt;Align-content&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Flex-direction&quot;&gt;&lt;a href=&quot;#Flex-direction&quot; class=&quot;headerlink&quot; title=&quot;Flex-direction:&quot;&gt;&lt;/a&gt;&lt;strong&gt;Flex-direction:&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;决定主轴的方向（即项目的排列方向）&lt;/p&gt;
&lt;p&gt;Flex-direction:row|row-reverse|column|column-reverse&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-direction.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-direction.png&quot; alt=&quot;flex-direction&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;它可能有4个值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;row（默认值）：主轴为水平方向，起点在左端。&lt;/li&gt;
&lt;li&gt;row-reverse：主轴为水平方向，起点在右端。&lt;/li&gt;
&lt;li&gt;column：主轴为垂直方向，起点在上沿。&lt;/li&gt;
&lt;li&gt;column-reverse：主轴为垂直方向，起点在下沿。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Flex-wrap&quot;&gt;&lt;a href=&quot;#Flex-wrap&quot; class=&quot;headerlink&quot; title=&quot;Flex-wrap:&quot;&gt;&lt;/a&gt;&lt;strong&gt;Flex-wrap:&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。&lt;/p&gt;
&lt;p&gt;Flex-wrap:nowrap|wrap|wrap-reverse&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-wrap.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-wrap.png&quot; alt=&quot;flex-wrap&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;它可能取三个值。&lt;/p&gt;
&lt;p&gt;（1）nowrap（默认）：不换行。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-wrap-1.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-wrap-1.png&quot; alt=&quot;flex-wrap 1&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;（2）wrap：换行，第一行在上方。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-wrap-2.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-wrap-2.png&quot; alt=&quot;flex-wrap 2&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;（3）wrap-reverse：换行，第一行在下方。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-wrap-3.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-wrap-3.png&quot; alt=&quot;flex-wrap 3&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Flex-flow&quot;&gt;&lt;a href=&quot;#Flex-flow&quot; class=&quot;headerlink&quot; title=&quot;Flex-flow:&quot;&gt;&lt;/a&gt;&lt;strong&gt;Flex-flow:&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。&lt;/p&gt;
&lt;p&gt;Flex-flow:：&amp;lt;’ &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/flex/flex-direction.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;flex-direction&lt;/a&gt; ‘&amp;gt; || &amp;lt;’ &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/flex/flex-wrap.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;flex-wrap&lt;/a&gt; ‘&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-flow.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-flow.png&quot; alt=&quot;flex-flow&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Order&quot;&gt;&lt;a href=&quot;#Order&quot; class=&quot;headerlink&quot; title=&quot;Order:&quot;&gt;&lt;/a&gt;&lt;strong&gt;Order:&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。&lt;/p&gt;
&lt;p&gt;Order:&amp;lt;interger&amp;gt;&lt;/p&gt;
&lt;p&gt;Initial:0 (初始值为0)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex伸缩-order.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex伸缩-order.png&quot; alt=&quot;flex伸缩-order&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Flex-basis&quot;&gt;&lt;a href=&quot;#Flex-basis&quot; class=&quot;headerlink&quot; title=&quot;Flex-basis&quot;&gt;&lt;/a&gt;&lt;strong&gt;Flex-basis&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex-basis: &amp;lt;length&amp;gt; | auto; /&lt;em&gt; default auto &lt;/em&gt;/&lt;/li&gt;
&lt;li&gt;设置flex item的初始宽/高&lt;br&gt;它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Flex-grow&quot;&gt;&lt;a href=&quot;#Flex-grow&quot; class=&quot;headerlink&quot; title=&quot;Flex-grow:&quot;&gt;&lt;/a&gt;&lt;strong&gt;Flex-grow:&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。设置元素所能分配到的空余空间的比例。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Flex-grow:&amp;lt;number&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Initial:0&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-grow.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-grow.png&quot; alt=&quot;flex-grow&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;默认情况下，flex-grow:0,flex-item项目不占据额外空间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;如果只设置一个flex-item项目的flex-grow为1，则它将占据剩余空间。&lt;/li&gt;
&lt;li&gt;如果一个项目的flex-grow属性为2，一个项目为1，则前者占据的剩余空间比后者多一倍。&lt;/li&gt;
&lt;li&gt;计算方法：flex-basis + flow-grow/sum(flow-grow) &lt;em&gt; remain&lt;br&gt;&lt;em&gt;*示例：b,c将按照1:3的比率分配剩余空间 &lt;/em&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTML Code：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;ul class=”flex”&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;li&amp;gt;a&amp;lt;/li&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;li&amp;gt;b&amp;lt;/li&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;li&amp;gt;c&amp;lt;/li&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/ul&amp;gt;&lt;br&gt;CSS Code:&lt;br&gt;.flex{display:flex;width:600px;margin:0;padding:0;list-style:none;}&lt;/p&gt;
&lt;p&gt;.flex li:nth-child(1){width:200px;}&lt;/p&gt;
&lt;p&gt;.flex li:nth-child(2){flex-grow:1;width:50px;}&lt;/p&gt;
&lt;p&gt;.flex li:nth-child(3){flex-grow:3;width:50px;}&lt;br&gt;flex-grow的默认值为0，如果没有显示定义该属性，是不会拥有分配剩余空间权利的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本例中b,c两项都显式的定义了flex-grow，flex容器的剩余空间分成了4份，其中b占1份，c占3分，即1:3&lt;/p&gt;
&lt;p&gt;flex容器的剩余空间长度为：600-200-50-50=300px，所以最终a,b,c的长度分别为：&lt;/p&gt;
&lt;p&gt;a: 200+(300/4*0)=200px&lt;/p&gt;
&lt;p&gt;b: 50+(300/4*1)=125px&lt;/p&gt;
&lt;p&gt;a: 50+(300/4*3)=275px&lt;/p&gt;
&lt;h3 id=&quot;Flex-shrink&quot;&gt;&lt;a href=&quot;#Flex-shrink&quot; class=&quot;headerlink&quot; title=&quot;Flex-shrink:&quot;&gt;&lt;/a&gt;&lt;strong&gt;Flex-shrink:&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Flex-shrink:&amp;lt;number&amp;gt;&lt;/li&gt;
&lt;li&gt;Initial:1&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-shrink.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex-shrink.png&quot; alt=&quot;flex-shrink&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。&lt;/p&gt;
&lt;p&gt;负值对该属性无效。&lt;/p&gt;
&lt;p&gt;计算方法：flex-basis + flow-shrink/sum(flow-shrink) * remain&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：a,b,c将按照1:1:3的比率来收缩空间**&lt;/strong&gt; **&lt;/p&gt;
&lt;p&gt;HTML Code：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;ul class=”flex”&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;li&amp;gt;a&amp;lt;/li&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;li&amp;gt;b&amp;lt;/li&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;li&amp;gt;c&amp;lt;/li&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/ul&amp;gt;&lt;br&gt;CSS Code:&lt;br&gt;.flex{display:flex;width:400px;margin:0;padding:0;list-style:none;}&lt;/p&gt;
&lt;p&gt;.flex li{width:200px;}&lt;/p&gt;
&lt;p&gt;.flex li:nth-child(3){flex-shrink:3;}&lt;br&gt;flex-shrink的默认值为1，如果没有显示定义该属性，将会自动按照默认值1在所有因子相加之后计算比率来进行空间收缩。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本例中c显式的定义了flex-shrink，a,b没有显式定义，但将根据默认值1来计算，可以看到总共将剩余空间分成了5份，其中a占1份，b占1份，c占3分，即1:1:3&lt;/p&gt;
&lt;p&gt;我们可以看到父容器定义为400px，子项被定义为200px，相加之后即为600px，超出父容器200px。那么这么超出的200px需要被a,b,c消化&lt;/p&gt;
&lt;p&gt;通过收缩因子，所以加权综合可得200&lt;em&gt;1+200&lt;/em&gt;1+200&lt;em&gt;3=1000px；&lt;br&gt;于是我们可以计算a,b,c将被移除的溢出量是多少：&lt;br&gt;a被移除溢出量：(200&lt;/em&gt;1/1000)&lt;em&gt;200，即约等于40px&lt;br&gt;b被移除溢出量：(200&lt;/em&gt;1/1000)&lt;em&gt;200，即约等于40px&lt;br&gt;c被移除溢出量：(200&lt;/em&gt;3/1000)*200，即约等于120px&lt;br&gt;最后a,b,c的实际宽度分别为：200-40=160px, 200-40=160px, 200-120=80px&lt;/p&gt;
&lt;h3 id=&quot;Flex&quot;&gt;&lt;a href=&quot;#Flex&quot; class=&quot;headerlink&quot; title=&quot;Flex&quot;&gt;&lt;/a&gt;&lt;strong&gt;Flex&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Flex: [ &amp;lt;’flex-grow’&amp;gt; &amp;lt;’flex-shrink’&amp;gt;? || &amp;lt;’flex-basis’&amp;gt; ]|none&lt;/li&gt;
&lt;li&gt;Initial:0 1 auto&lt;br&gt;该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;取值：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;none： none关键字的计算值为: 0 0 auto&lt;/li&gt;
&lt;li&gt;&amp;lt;’ flex-grow’&amp;gt;： 用来指定扩展比率，即剩余空间是正值时此「flex子项」相对于「flex容器」里其他「flex子项」能分配到空间比例。&lt;br&gt;在「flex」属性中该值如果被省略则默认为「1」&lt;/li&gt;
&lt;li&gt;&amp;lt;’ flex-shrink’&amp;gt;： 用来指定收缩比率，即剩余空间是负值时此「flex子项」相对于「flex容器」里其他「flex子项」能收缩的空间比例。&lt;br&gt;在收缩的时候收缩比率会以伸缩基准值加权&lt;br&gt;在「flex」属性中该值如果被省略则默认为「1」&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;lt;’ flex-basis’&amp;gt;： 用来指定伸缩基准值，即在根据伸缩比率计算出剩余空间的分布之前，「flex子项」长度的起始数值。&lt;br&gt;在「flex」属性中该值如果被省略则默认为「0%」&lt;br&gt;在「flex」属性中该值如果被指定为「auto」，则伸缩基准值的计算值是自身的 &amp;lt;’ width ‘&amp;gt; 设置，如果自身的宽度没有定义，则长度取决于内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果缩写「flex: 1」, 则其计算值为「1 1 0%」&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;如果缩写「flex: auto」, 则其计算值为「1 1 auto」&lt;/li&gt;
&lt;li&gt;如果「flex: none」, 则其计算值为「0 0 auto」&lt;/li&gt;
&lt;li&gt;如果「flex: 0 auto」或者「flex: initial」, 则其计算值为「0 1 auto」，即「flex」初始值&lt;br&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;&lt;strong&gt;示例：如下情况每个元素的计算宽是多少 &lt;/strong&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTML Code：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;ul class=”flex”&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;li&amp;gt;a&amp;lt;/li&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;li&amp;gt;b&amp;lt;/li&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;li&amp;gt;c&amp;lt;/li&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/ul&amp;gt;&lt;br&gt;CSS Code:&lt;br&gt;.flex{display:flex;width:800px;margin:0;padding:0;list-style:none;}&lt;/p&gt;
&lt;p&gt;.flex :nth-child(1){flex:1 1 300px;}&lt;/p&gt;
&lt;p&gt;.flex :nth-child(2){flex:2 2 200px;}&lt;/p&gt;
&lt;p&gt;.flex :nth-child(3){flex:3 3 400px;}&lt;br&gt;本例定义了父容器宽（即主轴宽）为800px，由于子元素设置了伸缩基准值flex-basis，相加300+200+400=900，那么子元素将会溢出900-800=100px；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于同时设置了收缩因子，所以加权综合可得300&lt;em&gt;1+200&lt;/em&gt;2+400*3=1900px；&lt;/p&gt;
&lt;p&gt;于是我们可以计算a,b,c将被移除的溢出量是多少：&lt;/p&gt;
&lt;p&gt;a被移除溢出量：(300&lt;em&gt;1/1900)&lt;/em&gt;100，即约等于16px&lt;/p&gt;
&lt;p&gt;b被移除溢出量：(200&lt;em&gt;2/1900)&lt;/em&gt;100，即约等于21px&lt;/p&gt;
&lt;p&gt;c被移除溢出量：(400&lt;em&gt;3/1900)&lt;/em&gt;100，即约等于63px&lt;/p&gt;
&lt;p&gt;最后a,b,c的实际宽度分别为：300-16=284px, 200-21=179px, 400-63=337px&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;仍然是上面这个例子，不过将容器的宽度改成了1500px&lt;/p&gt;
&lt;p&gt;HTML Code：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;ul class=”flex”&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;li&amp;gt;a&amp;lt;/li&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;li&amp;gt;b&amp;lt;/li&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;li&amp;gt;c&amp;lt;/li&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/ul&amp;gt;&lt;br&gt;CSS Code:&lt;br&gt;.flex{display:flex;width:1500px;margin:0;padding:0;list-style:none;}&lt;/p&gt;
&lt;p&gt;.flex :nth-child(1){flex:1 1 300px;}&lt;/p&gt;
&lt;p&gt;.flex :nth-child(2){flex:2 2 200px;}&lt;/p&gt;
&lt;p&gt;.flex :nth-child(3){flex:3 3 400px;}&lt;br&gt;本例定义了父容器宽（即主轴宽）为1500px，由于子元素设置了伸缩基准值flex-basis，相加300+200+400=900，那么容器将有1500-900=600px的剩余宽度；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;于是我们可以计算a,b,c将被扩展量是多少：&lt;/p&gt;
&lt;p&gt;a的扩展量：(1/(1+2+3))*600，即约等于100px&lt;/p&gt;
&lt;p&gt;b的扩展量：(2/(1+2+3))*600，即约等于200px&lt;/p&gt;
&lt;p&gt;c的扩展量：(3/(1+2+3))*600，即约等于300px&lt;/p&gt;
&lt;p&gt;最后a,b,c的实际宽度分别为：300+100=400px, 200+200=400px, 400+300=700px&lt;/p&gt;
&lt;p&gt;从本例能看出：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当「flex-basis」在「flex」属性中不为0时（包括值为auto，此时伸缩基准值等于自身内容宽度），「flex子项」将分配容器的剩余空间（剩余空间即等于容器宽度减去各项的伸缩基准值）&lt;/li&gt;
&lt;li&gt;当「flex-basis」在「flex」属性中等于0时，「flex子项」将分配容器的所有空间（因为各项的伸缩基准值相加等于0，剩余空间等于容器宽度减去各项的伸缩基准值，即减0，最后剩余空间值等于容器宽度），所以可以借助此特性，给各子项定义「flex: n」来进行按比例均分容器总宽度&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Justify-content&quot;&gt;&lt;a href=&quot;#Justify-content&quot; class=&quot;headerlink&quot; title=&quot;Justify-content&quot;&gt;&lt;/a&gt;&lt;strong&gt;Justify-content&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;justify-content: flex-start | flex-end | center | space-between | space-around&lt;/li&gt;
&lt;li&gt;定义了&lt;strong&gt;项目在主轴**&lt;/strong&gt;(main-axis)&lt;strong&gt;**上的对齐方式。&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/justify-content.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/justify-content.png&quot; alt=&quot;justify-content&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex-start（默认值）：左对齐&lt;/li&gt;
&lt;li&gt;flex-end：右对齐&lt;/li&gt;
&lt;li&gt;center： 居中&lt;/li&gt;
&lt;li&gt;space-between：两端对齐，项目之间的间隔都相等。&lt;/li&gt;
&lt;li&gt;space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Align-items&quot;&gt;&lt;a href=&quot;#Align-items&quot; class=&quot;headerlink&quot; title=&quot;Align-items&quot;&gt;&lt;/a&gt;&lt;strong&gt;Align-items&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;align-items: flex-start | flex-end | center | baseline | stretch&lt;/li&gt;
&lt;li&gt;定义&lt;strong&gt;项目在交叉轴**&lt;/strong&gt;(辅轴，cross-axis)&lt;strong&gt;**上如何对齐。&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/align-items.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/align-items.png&quot; alt=&quot;align-items&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex-start：交叉轴的起点对齐。&lt;/li&gt;
&lt;li&gt;flex-end：交叉轴的终点对齐。&lt;/li&gt;
&lt;li&gt;center：交叉轴的中点对齐。&lt;/li&gt;
&lt;li&gt;baseline: 项目的第一行文字的基线对齐。&lt;/li&gt;
&lt;li&gt;stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Align-self&quot;&gt;&lt;a href=&quot;#Align-self&quot; class=&quot;headerlink&quot; title=&quot;Align-self&quot;&gt;&lt;/a&gt;&lt;strong&gt;Align-self&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;align-self: auto | flex-start | flex-end | center | baseline | stretch&lt;/li&gt;
&lt;li&gt;设置单个flex item在cross-axis方向上对齐方式。&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/align-self.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/align-self.png&quot; alt=&quot;align-self&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Align-content&quot;&gt;&lt;a href=&quot;#Align-content&quot; class=&quot;headerlink&quot; title=&quot;Align-content&quot;&gt;&lt;/a&gt;&lt;strong&gt;Align-content&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;align-content: flex-start | flex-end | center | space-between | space-around | stretch&lt;/li&gt;
&lt;li&gt;设置cross-axis方向上行对齐方式&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/align-content.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/align-content.png&quot; alt=&quot;align-content&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该属性可能取6个值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex-start：与交叉轴的起点对齐。&lt;/li&gt;
&lt;li&gt;flex-end：与交叉轴的终点对齐。&lt;/li&gt;
&lt;li&gt;center：与交叉轴的中点对齐。&lt;/li&gt;
&lt;li&gt;space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。&lt;/li&gt;
&lt;li&gt;space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。&lt;/li&gt;
&lt;li&gt;stretch（默认值）：轴线占满整个交叉轴。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Flex布局应用-三行两列自适应布局&quot;&gt;&lt;a href=&quot;#Flex布局应用-三行两列自适应布局&quot; class=&quot;headerlink&quot; title=&quot;Flex布局应用-三行两列自适应布局&quot;&gt;&lt;/a&gt;&lt;strong&gt;Flex布局应用-三行两列自适应布局&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex布局应用.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/flex布局应用.png&quot; alt=&quot;flex布局应用&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于flex布局，可参看资源：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/seo/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/1408.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.xifengxx.com/seo/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/1408.html&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容为《前端开发工程师》微专业的第一门课《网页制作》的第五章学习笔记。&lt;/p&gt;
&lt;h2 id=&quot;《网页制作》之CSS—CSS布局&quot;&gt;&lt;a href=&quot;#《网页制作》之CSS—CSS布局&quot; class=&quot;headerlink&quot; title=&quot;《网页制作》之CSS—CSS布
    
    </summary>
    
      <category term="网易微专业·前端开发工程师" scheme="http://yoursite.com/categories/%E7%BD%91%E6%98%93%E5%BE%AE%E4%B8%93%E4%B8%9A%C2%B7%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
    
      <category term="前端开发工程师学习笔记" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>网易微专业之《前端开发工程师》学习笔记（9）-CSS</title>
    <link href="http://yoursite.com/2015/12/24/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-889-ef-bc-89-css/"/>
    <id>http://yoursite.com/2015/12/24/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-889-ef-bc-89-css/</id>
    <published>2015-12-24T05:04:05.000Z</published>
    <updated>2016-04-07T06:47:16.000Z</updated>
    
    <content type="html">&lt;p&gt;以下内容为《前端开发工程师》微专业的第一门课《网页制作》的第五章，学习视频课程后自己整理的学习笔记，会持续更新内容。&lt;/p&gt;
&lt;h2 id=&quot;《网页制作》之CSS—CSS背景&quot;&gt;&lt;a href=&quot;#《网页制作》之CSS—CSS背景&quot; class=&quot;headerlink&quot; title=&quot;《网页制作》之CSS—CSS背景&quot;&gt;&lt;/a&gt;《网页制作》之CSS—CSS背景&lt;/h2&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2 id=&quot;CSS背景&quot;&gt;&lt;a href=&quot;#CSS背景&quot; class=&quot;headerlink&quot; title=&quot;CSS背景&quot;&gt;&lt;/a&gt;&lt;strong&gt;CSS背景&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&quot;background-属性&quot;&gt;&lt;a href=&quot;#background-属性&quot; class=&quot;headerlink&quot; title=&quot;background 属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;background 属性&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;183&quot;&gt;值&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;360&quot;&gt;描述&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;46&quot;&gt;CSS&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;183&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_background-color.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;background-color&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;360&quot;&gt;规定要使用的背景颜色。&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;46&quot;&gt;1&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;183&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_background-position.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;background-position&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;360&quot;&gt;规定背景图像的位置。&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;46&quot;&gt;1&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;183&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_background-size.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;background-size&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;360&quot;&gt;规定背景图片的尺寸。&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;46&quot;&gt;3&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;183&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_background-repeat.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;background-repeat&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;360&quot;&gt;规定如何重复背景图像。&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;46&quot;&gt;1&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;183&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_background-origin.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;background-origin&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;360&quot;&gt;规定背景图片的定位区域。&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;46&quot;&gt;3&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;183&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_background-clip.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;background-clip&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;360&quot;&gt;规定背景的绘制区域。&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;46&quot;&gt;3&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;183&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_background-attachment.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;background-attachment&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;360&quot;&gt;规定背景图像是否固定或者随着页面的其余部分滚动。&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;46&quot;&gt;1&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;183&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_background-image.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;background-image&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;360&quot;&gt;规定要使用的背景图像。&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;46&quot;&gt;1&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;183&quot;&gt;inherit&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;360&quot;&gt;规定应该从父元素继承 background 属性的设置。&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;46&quot;&gt;1&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;h3 id=&quot;1、背景颜色-background-color&quot;&gt;&lt;a href=&quot;#1、背景颜色-background-color&quot; class=&quot;headerlink&quot; title=&quot;1、背景颜色-background-color&quot;&gt;&lt;/a&gt;1、背景颜色-background-color&lt;/h3&gt;&lt;p&gt;在CSS中，使用&lt;a href=&quot;http://www.lvyestudy.com/les_cj/cj_6.2.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;background-color属性&lt;/a&gt;来控制元素的背景颜色。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;默认值&lt;/strong&gt;：transparent ，即背景是透明的。&lt;/p&gt;
&lt;h3 id=&quot;2、背景图像-background-image&quot;&gt;&lt;a href=&quot;#2、背景图像-background-image&quot; class=&quot;headerlink&quot; title=&quot;2、背景图像-background-image&quot;&gt;&lt;/a&gt;2、背景图像-background-image&lt;/h3&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td colspan=&quot;2&quot; width=&quot;559&quot;&gt;CSS背景图像属性&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;149&quot;&gt;属性&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;410&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;149&quot;&gt;background-image&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;410&quot;&gt;定义背景图像的路径，这样图片才能显示&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;149&quot;&gt;background-repeat&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;410&quot;&gt;定义背景图像显示方式，例如纵向平铺、横向平铺&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;149&quot;&gt;background-position&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;410&quot;&gt;定义背景图像在元素哪个位置&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;149&quot;&gt;background-attachment&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;410&quot;&gt;定义背景图像是否随内容而滚动&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;&amp;gt; &lt;strong&gt;background-image**&lt;/strong&gt;:&lt;strong&gt;**url&lt;/strong&gt;(“../App_images/lesson/run_cj/one piece.jpg”);&lt;br&gt;&lt;br&gt;### &lt;strong&gt;3.background-repeat&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;background-repeat&lt;/strong&gt;：&lt;a href=&quot;#dfn-syntax&quot;&gt;&amp;lt;repeat-style&amp;gt;&lt;/a&gt; [ , &lt;a href=&quot;#dfn-syntax&quot;&gt;&amp;lt;repeat-style&amp;gt;&lt;/a&gt; ]&lt;em&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;&amp;lt;repeat-style&amp;gt;&lt;/strong&gt; = repeat-x | repeat-y | [repeat | no-repeat | space | round]{1,2}&lt;br&gt;&lt;br&gt;&lt;strong&gt;默认值&lt;/strong&gt;：repeat&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;属性值&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;387&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;no-repeat&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;387&quot;&gt;表示不平铺&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;repeat&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;387&quot;&gt;默认值，表示在水平方向（x轴）和垂直方向（y轴）同时平铺&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;repeat-x&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;387&quot;&gt;表示在水平方向（x轴）平铺&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;repeat-y&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;387&quot;&gt;表示在垂直方向（y轴）平铺&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;space&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;387&quot;&gt;背景图像以相同的间距平铺且填充满整个容器或某个方向。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;round&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;387&quot;&gt;背景图像自动缩放直到适应且填充满整个容器。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;&lt;strong&gt; &lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;设置或检索对象的背景图像如何铺排填充。必须先指定 &amp;lt;’ &lt;/strong&gt;background-image&lt;strong&gt; ‘&amp;gt; 属性。&lt;/strong&gt;

&lt;/em&gt;   允许提供2个参数，如果提供全部2个参数，第1个用于横向，第二个用于纵向。&lt;br&gt;&lt;em&gt;   如果只提供1个参数，则用于横向和纵向。特殊值repeat-x和repeat-y除外，因为repeat-x相当于repeat no-repeat，repeat-y相当于no-repeat repeat，即其实repeat-x和repeat-y等价于提供了2个参数值 .&lt;br&gt;&lt;br&gt;### &lt;strong&gt;4. background-position属性&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;background-position&lt;/strong&gt;：&lt;a href=&quot;#dfn-syntax&quot;&gt;&amp;lt;position&amp;gt;&lt;/a&gt; [ , &lt;a href=&quot;#dfn-syntax&quot;&gt;&amp;lt;position&amp;gt;&lt;/a&gt; ]&lt;/em&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;&amp;lt;position&amp;gt;&lt;/strong&gt; = [ left | center | right | top | bottom | &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/background/../../values/numeric/percentage.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;percentage&amp;gt;&lt;/a&gt; | &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/background/../../values/length/length.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;length&amp;gt;&lt;/a&gt; ] | [ left | center | right | &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/background/../../values/numeric/percentage.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;percentage&amp;gt;&lt;/a&gt; | &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/background/../../values/length/length.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;length&amp;gt;&lt;/a&gt; ] [ top | center | bottom | &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/background/../../values/numeric/percentage.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;percentage&amp;gt;&lt;/a&gt; | &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/background/../../values/length/length.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;length&amp;gt;&lt;/a&gt; ] | [ center | [ left | right ] [ &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/background/../../values/numeric/percentage.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;percentage&amp;gt;&lt;/a&gt; | &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/background/../../values/length/length.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;length&amp;gt;&lt;/a&gt; ]? ] &amp;amp;&amp;amp; [ center | [ top | bottom ] [ &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/background/../../values/numeric/percentage.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;percentage&amp;gt;&lt;/a&gt; | &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/background/../../values/length/length.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;length&amp;gt;&lt;/a&gt; ]? ]&lt;br&gt;&lt;br&gt;&lt;strong&gt;默认值&lt;/strong&gt;：0% 0%，效果等同于left top&lt;br&gt;&lt;br&gt;&lt;strong&gt;(1). background-position取值为“像素值”&lt;/strong&gt;&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;设置值&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;379&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;x（数值）&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;379&quot;&gt;设置网页的横向位置，单位为px&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;y（数值）&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;379&quot;&gt;设置网页的纵向位置，单位为px&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;&amp;gt; background-position:80px 40px;&lt;br&gt;&lt;strong&gt;(2). **&lt;/strong&gt;background-position取值为“关键字”**&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;属性值&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;329&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;top left&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;329&quot;&gt;左上&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;top center&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;329&quot;&gt;靠上居中&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;top right&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;329&quot;&gt;右上&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;left center&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;329&quot;&gt;靠左居中&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;center center&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;329&quot;&gt;正中&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;right center&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;329&quot;&gt;靠右居中&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;bottom left&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;329&quot;&gt;左下&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;bottom center&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;329&quot;&gt;靠下居中&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;bottom right&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;329&quot;&gt;右下&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;h3 id=&quot;5-background-attachment属性&quot;&gt;&lt;a href=&quot;#5-background-attachment属性&quot; class=&quot;headerlink&quot; title=&quot;5. background-attachment属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;5. background-attachment属性&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在CSS中，使用背景附件属性background-attachment可以设置背景图像是随对象滚动还是固定不动。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;background-attachment&lt;/strong&gt;：&lt;a href=&quot;#dfn-syntax&quot;&gt;&amp;lt;attachment&amp;gt;&lt;/a&gt; [ , &lt;a href=&quot;#dfn-syntax&quot;&gt;&amp;lt;attachment&amp;gt;&lt;/a&gt; ]*&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;attachment&amp;gt;&lt;/strong&gt; = fixed | scroll | local&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;默认值&lt;/strong&gt;：scroll&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fixed： 背景图像相对于窗体固定。&lt;/li&gt;
&lt;li&gt;scroll： 背景图像相对于元素固定，也就是说当元素内容滚动时背景图像不会跟着滚动，因为背景图像总是要跟着元素本身。但会随元素的祖先元素或窗体一起滚动。&lt;/li&gt;
&lt;li&gt;local： 背景图像相对于元素内容固定，也就是说当元素随元素滚动时背景图像也会跟着滚动，因为背景图像总是要跟着内容。（CSS3）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;6-background-size属性&quot;&gt;&lt;a href=&quot;#6-background-size属性&quot; class=&quot;headerlink&quot; title=&quot;6. background-size属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;6. background-size属性&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在CSS3中，我们可以使用background-size属性来设置背景图片的大小，这使得我们可以在不同的环境中重复使用背景图片。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;background-size: auto | &amp;lt;长度值&amp;gt; | &amp;lt;百分比&amp;gt; | cover | contain&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td colspan=&quot;2&quot; width=&quot;568&quot;&gt;background-size关键字取值&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;关键字&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;388&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;cover&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;388&quot;&gt;即“覆盖”，将背景图片以等比缩放来填充整个容器元素&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;contain&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;388&quot;&gt;即“容纳”，将背景图片等比缩放至某一边紧贴容器边缘为止&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;auto&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;388&quot;&gt;默认值，不改变背景图片的原始高度和宽度&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;&amp;lt;长度值&amp;gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;388&quot;&gt;成对出现如200px 50px，将背景图片宽高依次设置为前面两个值，当设置一个值时，将其作为图片宽度值来等比缩放&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;&amp;lt;百分比&amp;gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;388&quot;&gt;0％~100％之间的任何值，将背景图片宽高依次设置为所在元素宽高乘以前面百分比得出的数值，当设置一个值时同上&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;对于背景图片，不是可以使用width和height属性来设置吗？为什么还要增加一个background-size属性呢？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;记住，背景图片不同于img标签引用的图片，对于img标签引用的图片，我们可以使用width和height属性来设置，但是这两个属性不能用于设置背景图片的大小。因此，在CSS3中，引入了background-size属性来设置背景图片的大小。这里大家要清楚一点，背景图片的大小跟一般图片的大小设置有本质的区别。&lt;/p&gt;
&lt;h3 id=&quot;7-background-origin属性&quot;&gt;&lt;a href=&quot;#7-background-origin属性&quot; class=&quot;headerlink&quot; title=&quot;7. background-origin属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;7. background-origin属性&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在CSS3中，我们可以使用background-origin属性来设置元素背景图片平铺的最开始位置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;background-origin ： border-box | padding-box | content-box;&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td colspan=&quot;2&quot; width=&quot;503&quot;&gt;background-origin属性取值&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;属性值&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;323&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;border-box&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;323&quot;&gt;表示背景图片是从边框开始平铺&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;padding-box&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;323&quot;&gt;表示背景图片是从内边距开始平铺（默认值）&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;content-box&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;323&quot;&gt;表示背景图片是从内容区域开始平铺&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;总结：&lt;/strong&gt;background-origin属性往往都是配合background-position属性来使用，其中&lt;span style=&quot;color: #ff0000;&quot;&gt;&lt;strong&gt;background-origin属性规定background-position属性相对于什么位置来定位。&lt;/strong&gt;&lt;/span&gt;浏览器默认采用“background-position:top left;”。因此不管background-origin属性值如何变化，背景图片都是从“左上”开始平铺。&lt;/p&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/background-origin属性.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/background-origin属性.png&quot; alt=&quot;background-origin属性&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是，如果背景不是no-repeat，这个属性无效，它会从边框开始显示。&lt;/p&gt;
&lt;h3 id=&quot;8-background-clip属性&quot;&gt;&lt;a href=&quot;#8-background-clip属性&quot; class=&quot;headerlink&quot; title=&quot;8. background-clip属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;8. background-clip属性&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在CSS3中，使用background-clip属性来将背景图片根据实际需要进行剪切。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;background-clip ： border-box | padding-box | content-box | no-clip&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;属性值&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;348&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;border-box&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;348&quot;&gt;默认值，表示从边框border开始剪切&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;padding-box&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;348&quot;&gt;表示从内边距padding开始剪切&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;content-box&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;348&quot;&gt;表示从内容区域content开始剪切&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;No-clip&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;348&quot;&gt;不裁切，和&lt;strong&gt;参数border-box&lt;/strong&gt;显示同样的效果&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;backgroud-clip默认值为border-box。&lt;/p&gt;
&lt;p&gt;效果如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/background-clip属性.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/background-clip属性.png&quot; alt=&quot;background-clip属性&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;background-clip属性指定了背景在哪些区域可以显示&lt;/strong&gt;，但与背景开始绘制的位置（即background-origin属性）无关。背景绘制的位置可以出现在不显示背景的区域。这就相当于背景图片被不显示背景的区域裁剪了一部分一样。&lt;/p&gt;
&lt;h3 id=&quot;9-Background&quot;&gt;&lt;a href=&quot;#9-Background&quot; class=&quot;headerlink&quot; title=&quot;9. Background&quot;&gt;&lt;/a&gt;&lt;strong&gt;9. Background&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;多重背景(multiple backgrounds)，也就是CSS2里background的属性外加origin、clip和size组成的新background的多次叠加，缩写时为用逗号隔开的每组值；&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;用分解写法时，如果有多个背景图片，而其他属性只有一个（例如background-repeat只有一个），表明所有背景图片应用该属性值。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;语法缩写如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;background ： [background-color] | [background-image] | [background-position][/background-size] | [background-repeat] | [background-attachment] | [background-clip] | [background-origin],…&lt;br&gt;可以把上面的缩写拆解成以下形式：&lt;br&gt;background-image:url1,url2,…,urlN;&lt;/p&gt;
&lt;p&gt;background-repeat : repeat1,repeat2,…,repeatN;backround-position : position1,position2,…,positionN;background-size : size1,size2,…,sizeN;background-attachment : attachment1,attachment2,…,attachmentN;background-clip : clip1,clip2,…,clipN;background-origin : origin1,origin2,…,originN;background-color : color;&lt;br&gt;注意：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;用逗号隔开每组 background 的缩写值；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如果有 size 值，需要紧跟 position 并且用 “/“ 隔开；&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如果有多个背景图片，而其他属性只有一个（例如 background-repeat 只有一个），表明所有背景图片应用该属性值。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;background-color 只能设置一个。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;CSS3渐变&quot;&gt;&lt;a href=&quot;#CSS3渐变&quot; class=&quot;headerlink&quot; title=&quot;CSS3渐变&quot;&gt;&lt;/a&gt;&lt;strong&gt;CSS3渐变&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;CSS3渐变共有2种：（1）线性渐变（linear-gradient）；（2）径向渐变（radial-gradient）。&lt;/p&gt;
&lt;h3 id=&quot;1、线性渐变-linear-gradient&quot;&gt;&lt;a href=&quot;#1、线性渐变-linear-gradient&quot; class=&quot;headerlink&quot; title=&quot;1、线性渐变**-linear-gradient**&quot;&gt;&lt;/a&gt;&lt;strong&gt;1、线性渐变**&lt;/strong&gt;-linear-gradient**&lt;/h3&gt;&lt;p&gt;线性渐变，指的就是指在一条直线上进行渐变，在网页中大多数渐变效果都是线性渐变。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;background: linear-gradient(direction, color-stop1, color-stop2, …);&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;线性渐变的方向取值有2种，一种是使用角度（deg），另外一种是使用关键字：&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td colspan=&quot;3&quot; width=&quot;478&quot;&gt;线性渐变的方向取值&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;属性值&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;对应角度&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;to top&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;0deg&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;从下到上&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;to right&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;90deg&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;从左到右&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;to bottom&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;180deg&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;从上到下（默认值）&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;to left&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;270deg&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;从右到左&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;to top left&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;右上角到左上角（斜对角）&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;to top right&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;&amp;nbsp;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;左下角到右上角（斜对角）&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;第2个参数和第3个参数，表示开始颜色和结束颜色，取值可以为关键字、十六进制颜色值、&lt;a href=&quot;http://www.lvyestudy.com/css3/css3_6.2.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RGBA颜色&lt;/a&gt;等。你可以使用&lt;a href=&quot;http://www.lvyestudy.com/tools/color_picker.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在线调色板&lt;/a&gt;来获取颜色值。线性渐变可以有多个颜色值。&lt;/p&gt;
&lt;p&gt;也可以定义多种颜色的线性渐变效果，如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;background-image:linear-gradient(to left, red, orange,yellow,green,blue,indigo,violet);&lt;br&gt;效果图：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/css线性渐变-linear-gradient.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/css线性渐变-linear-gradient.png&quot; alt=&quot;css线性渐变-linear-gradient&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;2、径向渐变-radial-gradient&quot;&gt;&lt;a href=&quot;#2、径向渐变-radial-gradient&quot; class=&quot;headerlink&quot; title=&quot;2、径向渐变**-radial-gradient**&quot;&gt;&lt;/a&gt;&lt;strong&gt;2、径向渐变**&lt;/strong&gt;-radial-gradient**&lt;/h3&gt;&lt;p&gt;径向渐变，是一种从起点到终点颜色从内到外进行圆形渐变（从中间向外拉，像圆一样）。CSS3径向渐变是圆形或椭圆形渐变，颜色不再沿着一条直线渐变，而是从一个起点向所有方向渐变。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;background:radial-gradient(position ,shape size,start-color,…,stop-color)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;position：定义圆心位置,如果提供2个参数，第一个表示横坐标，第二个表示纵坐标；如果只提供一个，第二值默认为50%，即center.&lt;/li&gt;
&lt;li&gt;shape size：由2个参数组成，shape定义形状（圆形或椭圆），size定义大小；&lt;/li&gt;
&lt;li&gt;start-color：定义开始颜色值；&lt;/li&gt;
&lt;li&gt;stop-color：定义结束颜色值；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;position、shape size都是可选参数&lt;/strong&gt;，如果省略，则表示该项参数采用默认值(center,ellipse)。start-color和stop-color为必选参数，并且径向渐变可以有多个颜色值。&lt;br&gt;&lt;strong&gt;1、定义圆心位置position&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;position用于定义径向渐变的圆心位置，属性值跟background-position属性值相似，也有2种情况：（1）长度值，如px、em或百分比等；（2）关键字。&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td colspan=&quot;2&quot; width=&quot;522&quot;&gt;圆心位置取值（关键字）&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;属性值&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;383&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;center&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;383&quot;&gt;中部（默认值）&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;top&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;383&quot;&gt;顶部&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;right&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;383&quot;&gt;右部&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;bottom&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;383&quot;&gt;底部&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;left&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;383&quot;&gt;左部&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;top left&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;383&quot;&gt;左上&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;top center&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;383&quot;&gt;靠上居中&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;top right&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;383&quot;&gt;右上&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;left center&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;383&quot;&gt;靠左居中&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;center center&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;383&quot;&gt;正中&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;right center&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;383&quot;&gt;靠右居中&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;bottom left&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;383&quot;&gt;左下&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;bottom center&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;383&quot;&gt;靠下居中&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;bottom right&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;383&quot;&gt;右下&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;2、定义形状shape和定义大小size&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（1）定义形状shape&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;属性值&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;342&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;circle&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;342&quot;&gt;定义径向渐变为“圆形”&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;ellipse&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;342&quot;&gt;定义径向渐变为“椭圆形”（默认值）&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;（2）定义大小size&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;size主要用于定义径向渐变的结束形状大小。&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;属性值&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;345&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;closest-side&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;345&quot;&gt;指定径向渐变的半径长度为从圆心到离圆心最近的边&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;closest-corner&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;345&quot;&gt;指定径向渐变的半径长度为从圆心到离圆心最近的角&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;farthest-side&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;345&quot;&gt;指定径向渐变的半径长度为从圆心到离圆心最远的边&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;180&quot;&gt;farthest-corner&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;345&quot;&gt;指定径向渐变的半径长度为从圆心到离圆心最远的角&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、开始颜色start-color和结束颜色stop-color&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数start-color用于定义开始颜色，参数stop-color用于定义结束颜色。颜色可以为关键词、十六进制颜色值、&lt;a href=&quot;http://www.lvyestudy.com/css3/css3_6.2.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RGBA颜色值&lt;/a&gt;等。&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;径向渐变也接受一个颜色值列表，用于同时定义多种颜色的径向渐变。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;默认情况下，径向渐变颜色节点是均匀分布的，不过我们也可以为每一种颜色添加百分比，来使得各个颜色节点不均匀分布。&lt;/span&gt;如下例：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#div1{background:-webkit-radial-gradient(red,green,blue);margin-bottom:10px;}&lt;/p&gt;
&lt;p&gt;#div2{background:-webkit-radial-gradient(red 5%,green 30%,blue 60%);}&lt;br&gt;&lt;strong&gt;案例：&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;用默认的渐变方向绘制一个最简单的径向渐变&lt;/strong&gt;&lt;br&gt;示例代码：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/css径向渐变-radial-gradient.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/css径向渐变-radial-gradient.png&quot; alt=&quot;css径向渐变-radial-gradient&quot;&gt;&lt;/a&gt;&lt;br&gt;（图一）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;radial-gradient(circle, #f00, #ff0, #080);&lt;/li&gt;
&lt;li&gt;radial-gradient(circle at center, #f00, #ff0, #080);&lt;/li&gt;
&lt;li&gt;radial-gradient(circle at 50%, #f00, #ff0, #080);&lt;/li&gt;
&lt;li&gt;radial-gradient(circle farthest-corner, #f00, #ff0, #080);&lt;br&gt;以上几句代码都可以实现如（图一）的渐变效果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&amp;lt;shape&amp;gt;和 &amp;lt;size&amp;gt; 使用注意：&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;错误代码：radial-gradient(circle 50px 50px, #f00, #ff0, #080);&lt;br&gt;因为 circle 是正圆，一个值就能表示其直径长度，所以此时 &lt;a href=&quot;#size&quot;&gt;&amp;lt;size&amp;gt;&lt;/a&gt; 只能是一个值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;错误代码：radial-gradient(circle 50%, #f00, #ff0, #080);&lt;br&gt;circle 不接受 &lt;a href=&quot;#size&quot;&gt;&amp;lt;size&amp;gt;&lt;/a&gt; 的值是 &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/values/image/../numeric/percentage.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;percentage&amp;gt;&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3.不通过 &lt;a href=&quot;#shape&quot;&gt;&amp;lt;shape&amp;gt;&lt;/a&gt; 来表示圆和椭圆的方法：&lt;/p&gt;
&lt;p&gt;以下2行代码都可以表示一个圆：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;radial-gradient(100px, #f00, #ff0, #080); /&lt;em&gt; 1 &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;radial-gradient(100px 100px, #f00, #ff0, #080); /&lt;em&gt; 2 &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;radial-gradient(50px 100px, #f00, #ff0, #080); /&lt;em&gt; 3 &lt;/em&gt;/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;代码1：只给出100px，所以被当成是正圆的半径，于是就能确定一个直径为100px的圆；&lt;/li&gt;
&lt;li&gt;代码2：给出了2个值，按理应该是要画一个椭圆的，但2个值相等，所以这个椭圆其实此时是个正圆形态。需要注意的是，代码2如果加上 circle，那将是错误语法，因为这是2个值只有椭圆才接受；&lt;/li&gt;
&lt;li&gt;代码3：表示了一个水平半径为50px，垂直半径为100px的椭圆&lt;strong&gt; &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;3-、渐变重复：-repeating-gradient&quot;&gt;&lt;a href=&quot;#3-、渐变重复：-repeating-gradient&quot; class=&quot;headerlink&quot; title=&quot;3**、渐变重复： repeating--gradient*&quot;&gt;&lt;/a&gt;&lt;strong&gt;3**&lt;/strong&gt;、渐变&lt;strong&gt;&lt;strong&gt;重复：&lt;/strong&gt;&lt;/strong&gt; repeating-&lt;em&gt;-gradient*&lt;/em&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;3.1**&lt;/strong&gt;repeating-linear-gradient()**&lt;/p&gt;
&lt;p&gt;用重复的线性渐变创建图像。&lt;/p&gt;
&lt;p&gt;repeating-linear-gradient()的语法与&lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/values/image/linear-gradient(&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;linear-gradient()&lt;/a&gt;.htm)相同。&lt;/p&gt;
&lt;p&gt;示例代码：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS渐变重复.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS渐变重复.png&quot; alt=&quot;CSS渐变重复&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;repeating-linear-gradient(#f00, #ff0 10%, #f00 15%);&lt;/li&gt;
&lt;li&gt;repeating-linear-gradient(to bottom, #f00, #ff0 10%, #f00 15%);&lt;/li&gt;
&lt;li&gt;repeating-linear-gradient(180deg, #f00, #ff0 10%, #f00 15%);&lt;/li&gt;
&lt;li&gt;repeating-linear-gradient(to top, #f00, #ff0 10%, #f00 15%);&lt;br&gt;以上几句代码都可以实现如上图的渐变效果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实可以使用 linear-gradient() 做出 repeating-linear-gradient() 的效果&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;暴力实现上述（图一）的效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;repeating-linear-linear-gradient(#f00, #ff0 10%, #f00 15%, #ff0 25%, #f00 30%, #ff0 40%, #f00 45%, #ff0 55%, #f00 60%, #ff0 70%, #f00 75%, #ff0 85%, #f00 90%, #ff0);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;利用 background-size实现上述（图一）的效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;background: linear-gradient(#f00, #ff0 67%, #f00);&lt;/p&gt;
&lt;p&gt;background-size: 100% 15%;&lt;br&gt;使用 background-size 约束渐变图像的大小，然后通过 background-repeat 来纵向平铺&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.2repeating-radial-gradient()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用重复的径向渐变创建图像。&lt;/p&gt;
&lt;p&gt;repeating-radial-gradient()的语法与&lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/values/image/radial-gradient(&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;radial-gradient()&lt;/a&gt;.htm)相同。&lt;/p&gt;
&lt;p&gt;示例代码：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS渐变重复2.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS渐变重复2.png&quot; alt=&quot;CSS渐变重复2&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;repeating-radial-gradient(circle closest-side, #f00, #ff0 10%, #f00 15%);&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容为《前端开发工程师》微专业的第一门课《网页制作》的第五章，学习视频课程后自己整理的学习笔记，会持续更新内容。&lt;/p&gt;
&lt;h2 id=&quot;《网页制作》之CSS—CSS背景&quot;&gt;&lt;a href=&quot;#《网页制作》之CSS—CSS背景&quot; class=&quot;headerlink&quot; t
    
    </summary>
    
      <category term="网易微专业·前端开发工程师" scheme="http://yoursite.com/categories/%E7%BD%91%E6%98%93%E5%BE%AE%E4%B8%93%E4%B8%9A%C2%B7%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
    
      <category term="前端开发工程师学习笔记" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>网易微专业之《前端开发工程师》学习笔记（8）-CSS</title>
    <link href="http://yoursite.com/2015/12/24/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-888-ef-bc-89-css/"/>
    <id>http://yoursite.com/2015/12/24/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-888-ef-bc-89-css/</id>
    <published>2015-12-24T04:51:03.000Z</published>
    <updated>2016-04-07T06:47:16.000Z</updated>
    
    <content type="html">&lt;p&gt;以下内容为《前端开发工程师》微专业的第一门课《网页制作》的第五章，学习视频课程后自己整理的学习笔记，会持续更新内容。&lt;/p&gt;
&lt;h2 id=&quot;《网页制作》之CSS—CSS盒模型&quot;&gt;&lt;a href=&quot;#《网页制作》之CSS—CSS盒模型&quot; class=&quot;headerlink&quot; title=&quot;《网页制作》之CSS—CSS盒模型&quot;&gt;&lt;/a&gt;《网页制作》之CSS—CSS盒模型&lt;/h2&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2 id=&quot;盒模型&quot;&gt;&lt;a href=&quot;#盒模型&quot; class=&quot;headerlink&quot; title=&quot;盒模型&quot;&gt;&lt;/a&gt;&lt;strong&gt;盒模型&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;在“CSS盒子模型”理论中，所有页面中的元素都可以看成一个盒子，并且占据着一定的页面空间。一个页面由很多这样的盒子组成，这些盒子之间会互相影响，因此掌握盒子模型需要从两个方面来理解：一是理解单独一个盒子的内部结构，二是理解多个盒子之间的相互关系。&lt;/p&gt;
&lt;p&gt;每个元素都看成一个盒子，盒子模型是由content（内容）、&lt;a href=&quot;http://www.lvyestudy.com/les_cj/cj_.11.4aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;padding&lt;/a&gt;（内边距）、&lt;a href=&quot;http://www.lvyestudy.com/les_cj/cj_11.5.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;margin&lt;/a&gt;（外边距）和border（边框）这四个属性组成的。此外，在盒子模型中，还有宽度width和高度height两大辅助性属性。&lt;/p&gt;
&lt;p&gt;在 CSS 中，width 和 height 指的是内容区域的宽度和高度。增加内边距、边框和外边距不会影响内容区域的尺寸，但是会增加元素框的总尺寸。&lt;/p&gt;
&lt;p&gt;记住，&lt;strong&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;是所有的元素都可以看做一个盒子！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下图为一个&lt;strong&gt;CSS盒子模型的内部结构：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS盒模型.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS盒模型.png&quot; alt=&quot;CSS盒模型&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;图1 CSS盒子模型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从上图中我们可以得出盒子模型的属性如下：&lt;/p&gt;
&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td colspan=&quot;2&quot; width=&quot;556&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;盒子模型4个属性&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;137&quot;&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;419&quot;&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;137&quot;&gt;border&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;419&quot;&gt;（边框）元素边框&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;137&quot;&gt;margin&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;419&quot;&gt;（外边距）用于定义页面中元素与元素之间的距离&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;137&quot;&gt;padding&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;419&quot;&gt;（内边距）用于定义内容与边框之间的距离&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;137&quot;&gt;content&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;419&quot;&gt;（内容）可以是文字或图片&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;h3 id=&quot;盒模型–宽度-width-和高度-height&quot;&gt;&lt;a href=&quot;#盒模型–宽度-width-和高度-height&quot; class=&quot;headerlink&quot; title=&quot;盒模型–宽度**(width)和高度(height)**&quot;&gt;&lt;/a&gt;&lt;strong&gt;盒模型–宽度**&lt;/strong&gt;(width)&lt;strong&gt;&lt;strong&gt;和高度&lt;/strong&gt;&lt;/strong&gt;(height)**&lt;/h3&gt;&lt;p&gt;盒模型宽度和高度和我们平常所说的物体的宽度和高度理解是不一样的，css内定义的宽（width）和高（height），指的是填充以里的内容范围。&lt;/p&gt;
&lt;p&gt;因此一个元素实际宽度（盒子的宽度）=左边界+左边框+左填充+内容宽度+右填充+右边框+右边界。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS盒模型宽度-高度.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS盒模型宽度-高度.png&quot; alt=&quot;CSS盒模型宽度-高度&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;元素的高度也是同理。&lt;/p&gt;
&lt;p&gt;元素盒模型参考图：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS盒模型-参考图.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS盒模型-参考图.png&quot; alt=&quot;CSS盒模型-参考图&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;盒模型–填充-padding&quot;&gt;&lt;a href=&quot;#盒模型–填充-padding&quot; class=&quot;headerlink&quot; title=&quot;盒模型–填充**(padding)**&quot;&gt;&lt;/a&gt;&lt;strong&gt;盒模型–填充**&lt;/strong&gt;(padding)**&lt;/h3&gt;&lt;p&gt;元素内容与边框之间是可以设置距离的，称之为“填充”。padding 属性接受长度值或百分比值，但&lt;strong&gt;不允许使用负值&lt;/strong&gt;。填充也可分为上、右、下、左(顺时针)。如下代码：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;div{padding:20px 10px 15px 30px;}&lt;br&gt;顺序一定不要搞混。可以分开写上面代码：&lt;br&gt;div{&lt;/p&gt;
&lt;p&gt;padding-top:20px;&lt;/p&gt;
&lt;p&gt;padding-right:10px;&lt;/p&gt;
&lt;p&gt;padding-bottom:15px;&lt;/p&gt;
&lt;p&gt;padding-left:30px;&lt;/p&gt;
&lt;p&gt;}&lt;br&gt;如果上、右、下、左的填充都为10px;可以这么写&lt;br&gt;div{padding:10px;}&lt;br&gt;如果上下填充一样为10px，左右一样为20px，可以这么写：&lt;br&gt;div{padding:10px 20px;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;CSS-内边距属性&quot;&gt;&lt;a href=&quot;#CSS-内边距属性&quot; class=&quot;headerlink&quot; title=&quot;CSS 内边距属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;CSS 内边距属性&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;162&quot;&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;459&quot;&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;162&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_padding.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;padding&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;459&quot;&gt;简写属性。作用是在一个声明中设置元素的所内边距属性。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;162&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_padding-bottom.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;padding-bottom&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;459&quot;&gt;设置元素的下内边距。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;162&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_padding-left.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;padding-left&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;459&quot;&gt;设置元素的左内边距。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;162&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_padding-right.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;padding-right&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;459&quot;&gt;设置元素的右内边距。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;162&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_padding-top.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;padding-top&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;459&quot;&gt;设置元素的上内边距。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;&amp;nbsp;&lt;br&gt;&lt;br&gt;### &lt;strong&gt;盒模型–边框**&lt;/strong&gt;(border)&lt;strong&gt;&lt;br&gt;&lt;br&gt;盒子模型的边框就是围绕着内容及补白的线，这条线你可以设置它的粗细、样式和颜色(边框三个属性)。&lt;br&gt;&lt;br&gt;如下面代码为 div 来设置边框粗细为 2px、样式为实心的、颜色为红色的边框：&lt;br&gt;&amp;gt; div{&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; border:2px  solid  red;}&lt;br&gt;&lt;br&gt;&lt;em&gt;   border-style（边框样式）常见样式有:&lt;br&gt;dashed（虚线）| dotted（点线）| solid（实线）。

&lt;/em&gt;   border-color（边框颜色）中的颜色可设置为十六进制颜色，如:border-color:#888;&lt;br&gt;*   border-width（边框宽度）中的宽度也可以设置为：thin | medium | thick（但不是很常用），最常还是用象素（px）。&lt;br&gt;&lt;br&gt;### &lt;/strong&gt;CSS 边框属性&lt;strong&gt;&lt;br&gt;&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/strong&gt;属性&lt;strong&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;&lt;/td&gt;&lt;/strong&gt;描述&lt;strong&gt;&lt;br&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;简写属性，用于把针对四个边的属性设置在一个声明。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-style.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-style&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;用于设置元素所有边框的样式，或者单独地为各边设置边框样式。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-width.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-width&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;简写属性，用于为元素的所有边框设置宽度，或者单独地为各边边框设置宽度。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-color.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-color&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;简写属性，设置元素的所有边框中可见部分的颜色，或为 4 个边分别设置颜色。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-bottom.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-bottom&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;简写属性，用于把下边框的所有属性设置到一个声明中。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-bottom_color.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-bottom-color&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;设置元素的下边框的颜色。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-bottom_style.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-bottom-style&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;设置元素的下边框的样式。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-bottom_width.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-bottom-width&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;设置元素的下边框的宽度。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-left.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-left&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;简写属性，用于把左边框的所有属性设置到一个声明中。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-left_color.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-left-color&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;设置元素的左边框的颜色。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-left_style.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-left-style&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;设置元素的左边框的样式。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-left_width.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-left-width&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;设置元素的左边框的宽度。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-right.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-right&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;简写属性，用于把右边框的所有属性设置到一个声明中。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-right_color.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-right-color&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;设置元素的右边框的颜色。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-right_style.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-right-style&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;设置元素的右边框的样式。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-right_width.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-right-width&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;设置元素的右边框的宽度。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-top.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-top&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;简写属性，用于把上边框的所有属性设置到一个声明中。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-top_color.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-top-color&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;设置元素的上边框的颜色。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-top_style.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-top-style&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;设置元素的上边框的样式。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;164&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_border-top_width.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-top-width&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;450&quot;&gt;设置元素的上边框的宽度。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;br&gt;&lt;br&gt;### &lt;/strong&gt;盒模型–边界&lt;strong&gt;**(margin)&lt;/strong&gt;&lt;br&gt;&lt;br&gt;元素与其它元素之间的距离可以使用边界（margin）来设置。&lt;br&gt;&lt;br&gt;&lt;strong&gt;这个属性接受任何长度单位、百分数值甚至**&lt;/strong&gt;负值&lt;strong&gt;**。&lt;/strong&gt;&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;184&quot;&gt;属性&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;430&quot;&gt;描述&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;184&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_margin.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;margin&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;430&quot;&gt;简写属性。在一个声明中设置所有外边距属性。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;184&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_margin-bottom.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;margin-bottom&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;430&quot;&gt;设置元素的下外边距。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;184&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_margin-left.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;margin-left&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;430&quot;&gt;设置元素的左外边距。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;184&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_margin-right.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;margin-right&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;430&quot;&gt;设置元素的右外边距。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;184&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_margin-top.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;margin-top&lt;/a&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;430&quot;&gt;设置元素的上外边距。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;边界也是可分为上、右、下、左。如下代码：&lt;br&gt;&amp;gt; div{margin:20px 10px 15px 30px;}&lt;br&gt;padding和margin的区别，padding在边框里，margin在边框外。&lt;br&gt;&lt;br&gt;Margin在布局中的一个巧用是水平居中。&lt;br&gt;&lt;br&gt;设置margin:0 auto, 可以使元素实现水平居中效果。&lt;br&gt;&lt;br&gt;### &lt;strong&gt;CSS 外边距合并&lt;/strong&gt;&lt;br&gt;&lt;br&gt;外边距合并（叠加）是一个相当简单的概念。但是，在实践中对网页进行布局时，它会造成许多混淆。&lt;br&gt;&lt;br&gt;简单地说，外边距合并指的是，当两个垂直外边距相遇时，它们将形成一个外边距。&lt;strong&gt;合并后的外边距的高度等于两个发生合并的外边距的高度中的较大者。&lt;/strong&gt;&lt;br&gt;&lt;br&gt;当一个元素出现在另一个元素上面时，第一个元素的下外边距与第二个元素的上外边距会发生合并。请看下图：&lt;br&gt;&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS外边距合并.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS外边距合并.png&quot; alt=&quot;CSS外边距合并&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;当一个元素包含在另一个元素中时（假设没有内边距或边框把外边距分隔开），它们的上和/或下外边距也会发生合并。&lt;/span&gt;请看下图：&lt;br&gt;&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS外边距合并2.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS外边距合并2.png&quot; alt=&quot;CSS外边距合并2&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;尽管看上去有些奇怪，但是外边距甚至可以与自身发生合并。&lt;br&gt;&lt;br&gt;假设有一个空元素，它有外边距，但是没有边框或填充。在这种情况下，上外边距与下外边距就碰到了一起，它们会发生合并：&lt;br&gt;&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS外边距合并3.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS外边距合并3.png&quot; alt=&quot;CSS外边距合并3&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;如果这个外边距遇到另一个元素的外边距，它还会发生合并：&lt;br&gt;&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS外边距合并4.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS外边距合并4.png&quot; alt=&quot;CSS外边距合并4&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;这就是一系列的段落元素占用空间非常小的原因，因为它们的所有外边距都合并到一起，形成了一个小的外边距。&lt;br&gt;&lt;br&gt;&lt;strong&gt;注释：&lt;/strong&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;只有普通文档流中块框的垂直外边距才会发生外边距合并。&lt;strong&gt;行内框、浮动框或绝对定位之间的外边距不会合并。&lt;/strong&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;参考资料：&lt;/strong&gt;&lt;br&gt;&lt;br&gt;外边距margin合并（塌陷），请查看以下资料：&lt;br&gt;&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/CSS/margin_collapsing&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.mozilla.org/zh-CN/docs/Web/CSS/margin_collapsing&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&quot;http://www.w3help.org/zh-cn/kb/006/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.w3help.org/zh-cn/kb/006/&lt;/a&gt;&lt;br&gt;&lt;br&gt;### &lt;strong&gt;Border-radius—圆角边框&lt;/strong&gt;&lt;br&gt;&lt;br&gt;在CSS3中，针对边框，增加了丰富的修饰效果，使得网页更加美观舒服。下面列出了常用的CSS3边框属性：&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td colspan=&quot;2&quot; width=&quot;495&quot;&gt;CSS3边框属性&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;属性&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;315&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;border-radius&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;315&quot;&gt;圆角效果&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;border-colors&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;315&quot;&gt;多色边框&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;border-image&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;315&quot;&gt;边框背景&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;box-shadow&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;315&quot;&gt;边框阴影&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;h4 id=&quot;border-radius属性&quot;&gt;&lt;a href=&quot;#border-radius属性&quot; class=&quot;headerlink&quot; title=&quot;border-radius属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;border-radius属性&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;border-radius:长度值;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;长度值可以是px、百分比、em等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Border-radius属性设置长度值顺序：**&lt;/strong&gt;“左上角、右上角、右下角和左下角**”。&lt;/p&gt;
&lt;h4 id=&quot;border-radius画实心半圆和实心圆&quot;&gt;&lt;a href=&quot;#border-radius画实心半圆和实心圆&quot; class=&quot;headerlink&quot; title=&quot;border-radius画实心半圆和实心圆&quot;&gt;&lt;/a&gt;&lt;strong&gt;border-radius画实心半圆和实心圆&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;1、实心半圆&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;实心半圆分为：实心上半圆、实心下半圆、实心左半圆、实心右半圆。我们只要掌握制作一个方向的实心半圆的方法，其他方向的实心半圆就可以轻松实现，因为原理都一样。&lt;/p&gt;
&lt;p&gt;假如我们要制作&lt;strong&gt;实现上半圆&lt;/strong&gt;，实现方法：把高度(height)设为宽度（width）的一半，并且只设置左上角和右上角的圆角半径与元素的高度一致，而右下角和左下角的圆角半径设置为0。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;width:200px;&lt;/p&gt;
&lt;p&gt;height:100px;&lt;/p&gt;
&lt;p&gt;border:1px solid red;&lt;/p&gt;
&lt;p&gt;border-radius:100px 100px 0 0;&lt;br&gt;&lt;strong&gt;2、实心圆&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在CSS3中，使用border-radius属性实现实心圆方法：把宽度（width）与高度(height)值设置为一致（也就是正方形），并且四个圆角值都设置为它们值的一半。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;width:100px;&lt;/p&gt;
&lt;p&gt;height:100px;&lt;/p&gt;
&lt;p&gt;border:1px solid red;&lt;/p&gt;
&lt;p&gt;border-radius:50px;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;border-radius属性派生子属性&quot;&gt;&lt;a href=&quot;#border-radius属性派生子属性&quot; class=&quot;headerlink&quot; title=&quot;border-radius属性派生子属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;border-radius属性派生子属性&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;border-radius属性可以分开，分别为四个角设置相应的圆角值，分别是：&lt;/p&gt;
&lt;p&gt;（1）border-top-right-radius：右上角；&lt;/p&gt;
&lt;p&gt;（2）border-bottom-right-radius：右下角；&lt;/p&gt;
&lt;p&gt;（3）border-bottom-left-radius：左下角；&lt;/p&gt;
&lt;p&gt;（4）border-top-left-radius：左上角；&lt;/p&gt;
&lt;h3 id=&quot;边框阴影-box-shadow&quot;&gt;&lt;a href=&quot;#边框阴影-box-shadow&quot; class=&quot;headerlink&quot; title=&quot;边框阴影**box-shadow**&quot;&gt;&lt;/a&gt;&lt;strong&gt;边框阴影**&lt;/strong&gt;box-shadow**&lt;/h3&gt;&lt;p&gt;在CSS3中，我们可以使用box-shadow属性轻松地为元素添加阴影效果。&lt;/p&gt;
&lt;p&gt;语法：box-shadow：x-shadow  y-shadow  blur  spread  color  inset;&lt;/p&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;x-shadow：设置水平阴影的位置（X轴），可以使用负值；&lt;/li&gt;
&lt;li&gt;y-shadow：设置垂直阴影的位置（y轴），可以使用负值；&lt;/li&gt;
&lt;li&gt;blur：设置阴影模糊半径；&lt;/li&gt;
&lt;li&gt;spread：阴影扩展半径，设置阴影的尺寸；这个参数可选，缺省时值为0。&lt;/li&gt;
&lt;li&gt;color：设置阴影的颜色；&lt;/li&gt;
&lt;li&gt;inset：这个参数默认不设置。默认情况下为外阴影，inset表示内阴影。（这个值可以放在开头位置。）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;外阴影outset与内阴影inset&quot;&gt;&lt;a href=&quot;#外阴影outset与内阴影inset&quot; class=&quot;headerlink&quot; title=&quot;外阴影outset与内阴影inset&quot;&gt;&lt;/a&gt;&lt;strong&gt;外阴影outset与内阴影inset&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;box-shadow属性最后一个参数用于设置阴影是否是内阴影，还是外阴影。&lt;/p&gt;
&lt;p&gt;取值有2种：&lt;/p&gt;
&lt;p&gt;（1）outset：默认值，外阴影；&lt;/p&gt;
&lt;p&gt;（2）inset：内阴影；&lt;/p&gt;
&lt;p&gt;技巧：当水平阴影位置x-shadow和垂直阴影位置y-shadow都为0时，阴影都向外发散或者都向内发散。&lt;/p&gt;
&lt;h3 id=&quot;CSS-轮廓&quot;&gt;&lt;a href=&quot;#CSS-轮廓&quot; class=&quot;headerlink&quot; title=&quot;CSS 轮廓&quot;&gt;&lt;/a&gt;&lt;strong&gt;CSS 轮廓&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;轮廓（outline）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。&lt;/p&gt;
&lt;p&gt;CSS outline 属性规定元素轮廓的样式、颜色和宽度。&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;属性&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;420&quot;&gt;描述&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;45&quot;&gt;CSS&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_outline.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;outline&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;420&quot;&gt;在一个声明中设置所有的轮廓属性。&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;45&quot;&gt;2&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_outline-color.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;outline-color&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;420&quot;&gt;设置轮廓的颜色。&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;45&quot;&gt;2&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_outline-style.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;outline-style&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;420&quot;&gt;设置轮廓的样式。&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;45&quot;&gt;2&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_outline-width.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;outline-width&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;420&quot;&gt;设置轮廓的宽度。&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;45&quot;&gt;2&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;Overflow属性&quot;&gt;&lt;a href=&quot;#Overflow属性&quot; class=&quot;headerlink&quot; title=&quot;Overflow属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;Overflow属性&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;overflow 属性规定当内容溢出元素框时发生的事情.&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;91&quot;&gt;&lt;strong&gt;值&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;531&quot;&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;91&quot;&gt;visible&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;531&quot;&gt;默认值。内容不会被修剪，会呈现在元素框之外。&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;91&quot;&gt;hidden&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;531&quot;&gt;内容会被修剪，并且其余内容是不可见的。&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;91&quot;&gt;scroll&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;531&quot;&gt;内容会被修剪，但是浏览器会显示滚动条以便查看其余的内容。&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;91&quot;&gt;auto&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;531&quot;&gt;如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容。&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;91&quot;&gt;inherit&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;531&quot;&gt;规定应该从父元素继承 overflow 属性的值。&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;示例：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/overflow属性.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/overflow属性.png&quot; alt=&quot;overflow属性&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Box-sizing属性&quot;&gt;&lt;a href=&quot;#Box-sizing属性&quot; class=&quot;headerlink&quot; title=&quot;Box-sizing属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;Box-sizing属性&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;box-sizing&lt;/strong&gt;是CSS3的box属性之一。&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;p&gt;box-sizing: content-box|border-box|inherit;&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;146&quot;&gt;&lt;strong&gt;属性值&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;407&quot;&gt;&lt;strong&gt;属性值说明&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;146&quot;&gt;content-box&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;407&quot;&gt;默认值，其让元素维持W3C的标准盒模型，也就是说元素的宽度和高度（width/height）等于元素边框宽度（border）加上元素内距（padding）加上元素内容宽度或高度（content width/ height），也就是element width/height = border + padding + content width / height&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;146&quot;&gt;border-box&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;407&quot;&gt;重新定义CSS2.1中盒模型组成的模式，让元素维持IE传统的盒模型（IE6以下版本和IE6-7怪异模式），也就是说元素的宽度或高度等于元素内容的宽度或高度。从上面盒模型介绍可知，这里的内容宽度或高度包含了元素的border、padding、内容的宽度或高度（此处的内容宽度或高度＝盒子的宽度或高度—边框—内距）。&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;146&quot;&gt;inherit&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;407&quot;&gt;使元素继承父元素的盒模型模式&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;其中最为关键的是box-sizing中content-box和border-box两者的区别，他们之间的区别可以通过下图来展示，其对盒模型的不同解析：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/box-sizing属性.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/box-sizing属性.png&quot; alt=&quot;box-sizing属性&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考资料：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.box-sizing理解： &lt;a href=&quot;http://www.w3cplus.com/content/css3-box-sizing&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.w3cplus.com/content/css3-box-sizing&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CSS属性的浏览器兼容性：&lt;a href=&quot;http://caniuse.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://caniuse.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容为《前端开发工程师》微专业的第一门课《网页制作》的第五章，学习视频课程后自己整理的学习笔记，会持续更新内容。&lt;/p&gt;
&lt;h2 id=&quot;《网页制作》之CSS—CSS盒模型&quot;&gt;&lt;a href=&quot;#《网页制作》之CSS—CSS盒模型&quot; class=&quot;headerlink&quot;
    
    </summary>
    
      <category term="网易微专业·前端开发工程师" scheme="http://yoursite.com/categories/%E7%BD%91%E6%98%93%E5%BE%AE%E4%B8%93%E4%B8%9A%C2%B7%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
    
      <category term="前端开发工程师学习笔记" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>网易微专业之《前端开发工程师》学习笔记（7）-CSS</title>
    <link href="http://yoursite.com/2015/12/24/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-887-ef-bc-89-css/"/>
    <id>http://yoursite.com/2015/12/24/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-887-ef-bc-89-css/</id>
    <published>2015-12-24T04:38:48.000Z</published>
    <updated>2016-04-07T06:47:16.000Z</updated>
    
    <content type="html">&lt;p&gt;以下内容为《前端开发工程师》微专业的第一门课《网页制作》的第五章，学习视频课程后自己整理的学习笔记，会持续更新内容。&lt;/p&gt;
&lt;h2 id=&quot;《网页制作》—CSS—CSS文本、颜色&quot;&gt;&lt;a href=&quot;#《网页制作》—CSS—CSS文本、颜色&quot; class=&quot;headerlink&quot; title=&quot;《网页制作》—CSS—CSS文本、颜色&quot;&gt;&lt;/a&gt;《网页制作》—CSS—CSS文本、颜色&lt;/h2&gt;&lt;h3 id=&quot;CSS-字体属性&quot;&gt;&lt;a href=&quot;#CSS-字体属性&quot; class=&quot;headerlink&quot; title=&quot;CSS 字体属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;CSS 字体属性&lt;/strong&gt;&lt;/h3&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;140&quot;&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;489&quot;&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;140&quot;&gt;font&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;489&quot;&gt;简写属性。作用是把所有针对字体的属性设置在一个声明中。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;140&quot;&gt;font-family&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;489&quot;&gt;设置字体系列。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;140&quot;&gt;font-size&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;489&quot;&gt;设置字体的尺寸。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;140&quot;&gt;font-style&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;489&quot;&gt;设置字体风格。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;140&quot;&gt;font-variant&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;489&quot;&gt;以小型大写字体或者正常字体显示文本。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;140&quot;&gt;font-weight&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;489&quot;&gt;设置字体的粗细。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;h4 id=&quot;Font-family&quot;&gt;&lt;a href=&quot;#Font-family&quot; class=&quot;headerlink&quot; title=&quot;Font-family:&quot;&gt;&lt;/a&gt;&lt;strong&gt;Font-family:&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;CSS 定义了 5 种通用字体系列：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Serif 字体（衬线字体，如Times New Rome）&lt;/li&gt;
&lt;li&gt;Sans-serif 字体(无衬线字体，如Arial)&lt;/li&gt;
&lt;li&gt;Monospace 字体（等宽字体）&lt;/li&gt;
&lt;li&gt;Cursive 字体（草书字体,手写字体）&lt;/li&gt;
&lt;li&gt;Fantasy 字体（相当于印刷学中的装饰体）&lt;br&gt;默认情况下，浏览器的字体是宋体。中文字体常用的有宋体、微软雅黑，英文字体比较常用的是Times New Roman、Arial。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;font-size-语法：&quot;&gt;&lt;a href=&quot;#font-size-语法：&quot; class=&quot;headerlink&quot; title=&quot;font-size**语法：**&quot;&gt;&lt;/a&gt;&lt;strong&gt;font-size**&lt;/strong&gt;语法：**&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;font-size&lt;/strong&gt;：&lt;a href=&quot;#absolute-size&quot;&gt;&amp;lt;absolute-size&amp;gt;&lt;/a&gt; | &lt;a href=&quot;#relative-size&quot;&gt;&amp;lt;relative-size&amp;gt;&lt;/a&gt; | &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/font/../../values/length/length.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;length&amp;gt;&lt;/a&gt; | &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/font/../../values/numeric/percentage.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;percentage&amp;gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;absolute-size&amp;gt;&lt;/strong&gt; = xx-small | x-small | small | medium | large | x-large | xx-large&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;relative-size&amp;gt;&lt;/strong&gt; = smaller | larger&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;默认值&lt;/strong&gt;：medium&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;F**&lt;/strong&gt;ont-size&lt;strong&gt;**属性值&lt;/strong&gt;可以有很多种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用关键字（small/medium/large/x-small/xx-small/x-large/xx-large）；&lt;/li&gt;
&lt;li&gt;使用像素做单位的数值(如20px),&lt;/li&gt;
&lt;li&gt;使用em、%等来做单位。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;font-style-属性&quot;&gt;&lt;a href=&quot;#font-style-属性&quot; class=&quot;headerlink&quot; title=&quot;font-style 属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;font-style 属性&lt;/strong&gt;&lt;/h4&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;157&quot;&gt;&lt;strong&gt;font-style属性值&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;431&quot;&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;157&quot;&gt;normal&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;431&quot;&gt;默认值，正常体&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;157&quot;&gt;italic&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;431&quot;&gt;斜体，这是一个属性&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;157&quot;&gt;oblique&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;431&quot;&gt;将字体倾斜，将没有斜体变量（italic）的特殊字体，要应用oblique&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;h4 id=&quot;font-weight属性&quot;&gt;&lt;a href=&quot;#font-weight属性&quot; class=&quot;headerlink&quot; title=&quot;font-weight属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;font-weight属性&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;字体粗细值可以取关键字和100~900的数值。也可使用关键字。&lt;/p&gt;
&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;143&quot;&gt;&lt;strong&gt;font-weight属性值&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;393&quot;&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;143&quot;&gt;normal&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;393&quot;&gt;默认值，正常体&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;143&quot;&gt;lighter&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;393&quot;&gt;较细&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;143&quot;&gt;bold&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;393&quot;&gt;较粗&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;143&quot;&gt;bolder&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;393&quot;&gt;很粗（其实效果跟bold差不多）&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;字体粗细font-weight属性值可以取100、200、…、900这九个值。400相当于正常字体normal，700相当于bold。100~900分别表示字体的粗细，是对字体粗细的一种量化方式，值越大就表示越粗，值越小就表示越细。&lt;br&gt;&lt;br&gt;对于中文网页来说，一般仅用到bold、normal这两个属性值完全就可以了，粗细值不建议使用数值（100~900）。&lt;br&gt;&lt;br&gt;#### &lt;strong&gt;F**&lt;/strong&gt;ont-variant属性**&lt;br&gt;&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;font-variant属性值&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;385&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;normal&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;385&quot;&gt;默认值，正常效果&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;small-caps&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;385&quot;&gt;小型大写字母的字体&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;h4 id=&quot;Text-transform属性-—英文大小写转换&quot;&gt;&lt;a href=&quot;#Text-transform属性-—英文大小写转换&quot; class=&quot;headerlink&quot; title=&quot;Text-transform属性 —英文大小写转换&quot;&gt;&lt;/a&gt;&lt;strong&gt;Text-transform属性 —英文大小写转换&lt;/strong&gt;&lt;/h4&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;&lt;strong&gt;属性值&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;384&quot;&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;none&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;384&quot;&gt;默认值，无转换发生&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;uppercase&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;384&quot;&gt;转换成大写&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;lowercase&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;384&quot;&gt;转换成小写&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;180&quot;&gt;capitalize&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;384&quot;&gt;将每个英文单词的首字母转换成大写，其余无转换发生&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;h4 id=&quot;L-ine-height-–行间距（行高）&quot;&gt;&lt;a href=&quot;#L-ine-height-–行间距（行高）&quot; class=&quot;headerlink&quot; title=&quot;L**ine-height**–行间距（行高）&quot;&gt;&lt;/a&gt;&lt;strong&gt;L**&lt;/strong&gt;ine-height&lt;strong&gt;**–行间距（行高）&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;line-height 属性设置行间的距离（行高）,如下例为段落设置行间距（行高）为2em&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;p{line-height:2em;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Color颜色&quot;&gt;&lt;a href=&quot;#Color颜色&quot; class=&quot;headerlink&quot; title=&quot;Color颜色&quot;&gt;&lt;/a&gt;&lt;strong&gt;Color颜色&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;检索或设置对象的文本颜色。无默认值。&lt;/p&gt;
&lt;p&gt;可以使用&lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/color/../../values/color/color-name.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Color Name(颜色名称)&lt;/a&gt;, &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/color/../../values/color/hex.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HEX&lt;/a&gt;（十六进制颜色）, &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/color/../../values/color/rgb.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RGB&lt;/a&gt;, &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/color/../../values/color/rgba.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RGBA&lt;/a&gt;, &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/color/../../values/color/hsl.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HSL&lt;/a&gt;, &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/color/../../values/color/hsla.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HSLA&lt;/a&gt;, &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/color/../../values/color/transparent.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;transparent&lt;/a&gt;来指定color。&lt;/p&gt;
&lt;p&gt;注意，用颜色名称指定color可能不被一些浏览器接受。&lt;/p&gt;
&lt;p&gt;color属性值被间接用来提供一个中间值 &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/color/../../values/color/currentColor.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;currentColor&lt;/a&gt; 以供其他接受颜色值的属性使用。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;div {&lt;/p&gt;
&lt;p&gt;border: 10px solid;&lt;/p&gt;
&lt;p&gt;color: red;}&lt;br&gt;如上代码，没有定义边框的颜色，但定义了color的颜色为red，那么这时red将会作为一个间接值 &lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/properties/color/../../values/color/currentColor.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;currentColor&lt;/a&gt; 提供给边框颜色属性，所以最终边框色也为red。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;HEX:十六进制数值表示颜色。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个符号由红色、绿色和蓝色的值组成（RGB）。每种颜色的最小值是0（十六进制：#00）。最大值是255（十六进制：#FF）。如：color:#ff0000;&lt;/p&gt;
&lt;p&gt;在W3C制定的HTML 4.0标准中，只有16种颜色可以用颜色名称表示：&lt;/p&gt;
&lt;p&gt;Aqua(水色)、black、blue、fuchsia（品红）、gray、green、lime（绿黄色）、maroon（栗色）、navy、olive、purple、red、silver、teal（水鸭色）、white、yellow。&lt;/p&gt;
&lt;p&gt;其它的颜色都要用16进制RGB颜色值表示。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS颜色表示法.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS颜色表示法.png&quot; alt=&quot;CSS颜色表示法&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;文本对齐方式&quot;&gt;&lt;a href=&quot;#文本对齐方式&quot; class=&quot;headerlink&quot; title=&quot;文本对齐方式&quot;&gt;&lt;/a&gt;&lt;strong&gt;文本对齐方式&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&quot;Text-align&quot;&gt;&lt;a href=&quot;#Text-align&quot; class=&quot;headerlink&quot; title=&quot;Text-align:&quot;&gt;&lt;/a&gt;&lt;strong&gt;Text-align:&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;text-align 属性规定元素中的文本的水平对齐方式。&lt;/p&gt;
&lt;p&gt;该属性通过指定行框与哪个点对齐，从而设置块级元素内文本的水平对齐方式。通过允许用户代理调整行内容中字母和字之间的间隔，可以支持值 justify；不同用户代理可能会得到不同的结果。&lt;/p&gt;
&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;&lt;strong&gt;默认值：&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td colspan=&quot;2&quot; width=&quot;509&quot;&gt;如果 direction 属性是 ltr，则默认值是 left；如果 direction 是 rtl，则为 right。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;&lt;strong&gt;可能**&lt;/strong&gt;值&lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;505&quot;&gt;描述&lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;left&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;505&quot;&gt;把文本排列到左边。默认值：由浏览器决定。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;right&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;505&quot;&gt;把文本排列到右边。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;center&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;505&quot;&gt;把文本排列到中间。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;justify&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;505&quot;&gt;实现两端对齐文本效果。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;inherit&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;505&quot;&gt;规定应该从父元素继承 text-align 属性的值。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;&amp;nbsp;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;text-align属性只能针对&lt;strong&gt;&lt;strong&gt;文本文字&lt;/strong&gt;&lt;/strong&gt;和&lt;strong&gt;[&lt;/strong&gt;img标签&lt;strong&gt;](&lt;a href=&quot;http://www.lvyestudy.com/les_hj/hj_7.1.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.lvyestudy.com/les_hj/hj_7.1.aspx&lt;/a&gt;)&lt;/strong&gt;，对其他标签无效。&lt;strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;最后一个水平对齐属性是 justify。&lt;br&gt;&lt;br&gt;在两端对齐文本中，文本行的左右两端都放在父元素的内边界上。然后，调整单词和字母间的间隔，使各行的长度恰好相等。您也许已经注意到了，两端对齐文本在打印领域很常见。&lt;br&gt;&lt;br&gt;#### vertical-align &lt;strong&gt;&lt;br&gt;&lt;br&gt;Vertical-align属性设置元素的垂直对齐方式。&lt;br&gt;&lt;br&gt;该属性定义行内元素的基线相对于该元素所在行的基线的垂直对齐。允许指定&lt;/strong&gt;负长度值&lt;strong&gt;和百分比值。这会使元素降低而不是升高。在表单元格中，这个属性会设置单元格框中的单元格内容的对齐方式。&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;121&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/strong&gt;值&lt;strong&gt;&lt;br&gt;&lt;td width=&quot;501&quot;&gt;&lt;/td&gt;&lt;/strong&gt;描述**&lt;br&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;121&quot;&gt;baseline&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;501&quot;&gt;默认。元素放置在父元素的基线上。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;121&quot;&gt;sub&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;501&quot;&gt;垂直对齐文本的下标。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;121&quot;&gt;super&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;501&quot;&gt;垂直对齐文本的上标&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;121&quot;&gt;top&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;501&quot;&gt;把元素的顶端与行中最高元素的顶端对齐&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;121&quot;&gt;text-top&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;501&quot;&gt;把元素的顶端与父元素字体的顶端对齐&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;121&quot;&gt;middle&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;501&quot;&gt;把此元素放置在父元素的中部。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;121&quot;&gt;bottom&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;501&quot;&gt;把元素的顶端与行中最低的元素的顶端对齐。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;121&quot;&gt;text-bottom&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;501&quot;&gt;把元素的底端与父元素字体的底端对齐。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;121&quot;&gt;length&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;501&quot;&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;121&quot;&gt;%&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;501&quot;&gt;使用 “line-height” 属性的百分比值来排列此元素。允许使用负值。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;121&quot;&gt;inherit&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;501&quot;&gt;规定应该从父元素继承 vertical-align 属性的值。&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;br&gt;

&lt;h4 id=&quot;Text-indent&quot;&gt;&lt;a href=&quot;#Text-indent&quot; class=&quot;headerlink&quot; title=&quot;Text-indent&quot;&gt;&lt;/a&gt;&lt;strong&gt;Text-indent&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;Text-indent设置首行缩进。&lt;/p&gt;
&lt;p&gt;中文文字中的段前习惯空两个文字的空白，这个特殊的样式可以用下面代码来实现：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;p{text-indent:2em;}&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;注意：2em的意思就是文字的2倍大小。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;文本格式处理&quot;&gt;&lt;a href=&quot;#文本格式处理&quot; class=&quot;headerlink&quot; title=&quot;文本格式处理&quot;&gt;&lt;/a&gt;&lt;strong&gt;文本格式处理&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&quot;White-space&quot;&gt;&lt;a href=&quot;#White-space&quot; class=&quot;headerlink&quot; title=&quot;White-space&quot;&gt;&lt;/a&gt;&lt;strong&gt;White-space&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;white-space 属性设置如何处理元素内的空白（空白符）。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/white-space属性.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/white-space属性.png&quot; alt=&quot;white-space属性&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;100&quot;&gt;&lt;strong&gt;可能**&lt;/strong&gt;值**&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;532&quot;&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;100&quot;&gt;normal&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;532&quot;&gt;默认。空白会被浏览器忽略。丢掉多余的空白符，换行字符（回车）会转换为空格，一行中多个空格的序列也会转换为一个空格。&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;100&quot;&gt;pre&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;532&quot;&gt;空白会被浏览器保留。其行为方式类似 HTML 中的 &amp;lt;pre&amp;gt; 标签。&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;100&quot;&gt;nowrap&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;532&quot;&gt;文本不会换行，文本会在在同一行上继续，直到遇到 &amp;lt;br&amp;gt; 标签为止。&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;100&quot;&gt;pre-wrap&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;532&quot;&gt;保留空白符序列，但是正常地进行换行。&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;100&quot;&gt;pre-line&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;532&quot;&gt;合并空白符序列，但是保留换行符。&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;100&quot;&gt;inherit&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;532&quot;&gt;规定应该从父元素继承 white-space 属性的值。&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;white-space 属性的行为：&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;191&quot;&gt;&lt;strong&gt;值&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;144&quot;&gt;&lt;strong&gt;空白符&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;144&quot;&gt;&lt;strong&gt;换行符&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;174&quot;&gt;&lt;strong&gt;自动换行&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;191&quot;&gt;pre-line&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;144&quot;&gt;合并&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;144&quot;&gt;保留&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;174&quot;&gt;允许&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;191&quot;&gt;normal&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;144&quot;&gt;合并&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;144&quot;&gt;忽略&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;174&quot;&gt;允许&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;191&quot;&gt;nowrap&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;144&quot;&gt;合并&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;144&quot;&gt;忽略&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;174&quot;&gt;不允许&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;191&quot;&gt;pre&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;144&quot;&gt;保留&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;144&quot;&gt;保留&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;174&quot;&gt;不允许&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;191&quot;&gt;pre-wrap&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;144&quot;&gt;保留&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;144&quot;&gt;保留&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;174&quot;&gt;允许&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;h4 id=&quot;Word-wrap&quot;&gt;&lt;a href=&quot;#Word-wrap&quot; class=&quot;headerlink&quot; title=&quot;Word-wrap&quot;&gt;&lt;/a&gt;&lt;strong&gt;Word-wrap&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;在CSS3中，我们可以使用word-wrap属性来设置“长单词”或“URL地址”是否换行到下一行。&lt;/p&gt;
&lt;p&gt;语法：word-wrap:取值;&lt;/p&gt;
&lt;p&gt;说明：word-wrap属性只有2个取值：normal和break-word。&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td colspan=&quot;2&quot; width=&quot;520&quot;&gt;&lt;strong&gt;word-wrap属性取值&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;138&quot;&gt;选择器&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;381&quot;&gt;说明&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;138&quot;&gt;normal&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;381&quot;&gt;默认值，文本自动换行&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;138&quot;&gt;break-word&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;381&quot;&gt;“长单词”或“URL地址”强制换行&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;默认情况下，文本是自动换行的，但是如果单词或者URL地址太长的话，就会超出区域范围，需要使用word-wrap属性来调节。&lt;/p&gt;
&lt;p&gt;word-wrap属性是针对英文来说的，中文中没有什么所谓的“长单词”之说。一般情况下，在中文网站开发中，word-wrap属性只要采用默认值即可。当然，如果你开发的是英文网站，就很有可能用到word-wrap这个属性了。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h4 id=&quot;Word-break&quot;&gt;&lt;a href=&quot;#Word-break&quot; class=&quot;headerlink&quot; title=&quot;Word-break&quot;&gt;&lt;/a&gt;&lt;strong&gt;Word-break&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;设置或检索对象内文本的字内换行行为。&lt;/p&gt;
&lt;p&gt;对于解决防止页面中出现连续无意义的长字符打破布局，应该使用break-all属性值；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;word-break：normal | keep-all | break-all&lt;/p&gt;
&lt;p&gt;默认值：normal&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;取值：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;normal：依照亚洲语言和非亚洲语言的文本规则，允许在字内换行。&lt;/li&gt;
&lt;li&gt;keep-all：与所有非亚洲语言的normal相同。对于中文，韩文，日文，不允许字断开。适合包含少量亚洲文本的非亚洲文本。&lt;/li&gt;
&lt;li&gt;break-all：该行为与亚洲语言的normal相同。也允许非亚洲语言文本行的任意字内断开。该值适合包含一些非亚洲文本的亚洲文本，比如使连续的英文字母间断行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;文本修饰&quot;&gt;&lt;a href=&quot;#文本修饰&quot; class=&quot;headerlink&quot; title=&quot;文本修饰&quot;&gt;&lt;/a&gt;&lt;strong&gt;文本修饰&lt;/strong&gt;&lt;/h3&gt;&lt;h4 id=&quot;Text-decoration-文本修饰&quot;&gt;&lt;a href=&quot;#Text-decoration-文本修饰&quot; class=&quot;headerlink&quot; title=&quot;Text-decoration -文本修饰&quot;&gt;&lt;/a&gt;&lt;strong&gt;Text-decoration -文本修饰&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td colspan=&quot;2&quot; width=&quot;571&quot;&gt;&lt;strong&gt;text-decoration属性&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;148&quot;&gt;&lt;strong&gt;属性值&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;423&quot;&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;148&quot;&gt;none&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;423&quot;&gt;默认值，可以用这个属性值也可以去掉已经有下划线或删除线或顶划线的样式&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;148&quot;&gt;underline&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;423&quot;&gt;下划线&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;148&quot;&gt;line-through&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;423&quot;&gt;删除线&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;148&quot;&gt;overline&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;423&quot;&gt;顶划线&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;underline 会对元素加下划线，就像 HTML 中的 U 元素一样。overline 的作用恰好相反，会在文本的顶端画一个上划线。值 line-through 则在文本中间画一个贯穿线，等价于 HTML 中的 S 和 strike 元素。&lt;/p&gt;
&lt;p&gt;none 值会关闭原本应用到一个元素上的所有装饰。通常，无装饰的文本是默认外观，但也不总是这样。例如，链接默认地会有下划线。如果您希望去掉超链接的下划线，可以使用以下 CSS 来做到这一点：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a {text-decoration: none;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Text-shadow-文字阴影&quot;&gt;&lt;a href=&quot;#Text-shadow-文字阴影&quot; class=&quot;headerlink&quot; title=&quot;Text-shadow 文字阴影&quot;&gt;&lt;/a&gt;&lt;strong&gt;Text-shadow 文字阴影&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;8&quot;&gt;1&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;544&quot;&gt;text-shadow:x-offset  y-offset  blur  color;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;x-offset：（水平阴影）表示阴影的水平偏移距离，单位可以是px、em或者百分比等。如果值为正，则阴影向右偏移；如果值为负，则阴影向左偏移；&lt;/li&gt;
&lt;li&gt;y-offset：（垂直阴影）表示阴影的垂直偏移距离，单位可以是px、em或者百分比等。如果值为正，则阴影向下偏移；如果值为负，则阴影向上偏移；&lt;/li&gt;
&lt;li&gt;blur：（模糊距离）表示阴影的模糊程度，单位可以是px、em或者百分比等。blur值不能为负。如果值越大，则阴影越模糊；如果值越小，则阴影越清晰。当然，如果不需要阴影模糊效果，可以把blur值设置为0；&lt;/li&gt;
&lt;li&gt;color：（阴影的颜色）表示阴影的颜色。&lt;br&gt;在CSS3中，可以使用text-shadow属性来给文字指定多个阴影，并且针对每个阴影使用不同的颜色。也就是说，text-shadow属性可以为一个以英文逗号隔开的“值列表”，如：&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;8&quot;&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;544&quot;&gt;text-shadow:0 0 4px white,  0 -5px 4px #ff3,  2px -10px 6px #fd3;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;当text-shadow属性值为“值列表”时，阴影效果会按照给定的值顺序应用到该元素的文本上，因此有可能出现互相覆盖的现象。但是text-shadow属性永远不会覆盖文本本身，阴影效果也不会改变边框的尺寸。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;text-stroke属性&quot;&gt;&lt;a href=&quot;#text-stroke属性&quot; class=&quot;headerlink&quot; title=&quot;text-stroke属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;text-stroke属性&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;在CSS3中，我们可以使用text-stroke属性为&lt;strong&gt;文字添加描边效果&lt;/strong&gt;。这个描边效果，说白了就是给文字添加边框。由于CSS3的出现，“文字”也能添加边框了呢。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;text-stroke:宽度值 颜色值;&lt;/p&gt;
&lt;h4 id=&quot;text-overflow属性&quot;&gt;&lt;a href=&quot;#text-overflow属性&quot; class=&quot;headerlink&quot; title=&quot;text-overflow属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;text-overflow属性&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;在CSS3中，文本溢出text-overflow用于设置是否使用一个省略标记（…）标示对象内文本的溢出。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;text-overflow:取值;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;text-overflow属性取值只有2个：&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;173&quot;&gt;&lt;strong&gt;属性值&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;474&quot;&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;173&quot;&gt;ellipsis&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;474&quot;&gt;当对象内文本溢出时显示省略标记（…）&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;173&quot;&gt;clip&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;474&quot;&gt;当对象内文本溢出时不显示省略标记（…），而是将溢出的部分裁切掉&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;单独使用text-overflow属性是无法得到上面图1效果的。因为text-overflow属性只是说明文字溢出时用什么方式显示，要实现溢出时产生省略号效果，还须定义2个内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;（1）white-space:nowrap;（强制文本在一行内显示）；&lt;/li&gt;
&lt;li&gt;（2）overflow:hidden;（溢出内容为隐藏）；&lt;br&gt;下面是实现文字溢出时产生省略号效果的完整语法：&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;8&quot;&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;544&quot;&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;text-overflow:ellipsis; &lt;/span&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;overflow:hidden; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;white-space:nowrap;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;这3个属性是必须一起使用才会有效果。&lt;/p&gt;
&lt;h3 id=&quot;Cursor属性&quot;&gt;&lt;a href=&quot;#Cursor属性&quot; class=&quot;headerlink&quot; title=&quot;Cursor属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;Cursor属性&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在CSS中，使用cursor属性来定义鼠标的样式。&lt;/p&gt;
&lt;p&gt;语法：cursor:属性值;&lt;/p&gt;
&lt;p&gt;cursor属性取值如下，默认值为default。在实际开发中，我们一般只用到“default”和“pointer”这两个属性值，其他的一般都很少用得上，无需记忆。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/Cursor属性.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/Cursor属性.png&quot; alt=&quot;Cursor属性&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Inherit属性&quot;&gt;&lt;a href=&quot;#Inherit属性&quot; class=&quot;headerlink&quot; title=&quot;Inherit属性&quot;&gt;&lt;/a&gt;&lt;strong&gt;Inherit属性&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;该值使得属性能够继承祖先设置。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;inherit属于CSS-wide关键字，这表示&lt;strong&gt;所有的属性都可以接受该值**&lt;/strong&gt;。**&lt;/p&gt;
&lt;p&gt;如何让一个不具备继承特性的属性可以继承父元素的定义？&lt;/p&gt;
&lt;p&gt;示例代码：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;div {&lt;/p&gt;
&lt;p&gt;position: relative;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;div a {&lt;/p&gt;
&lt;p&gt;position: inherit;&lt;/p&gt;
&lt;p&gt;}&lt;br&gt;上述代码，超链接 a 将会继承父元素的&lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/values/textual/../../properties/positioning/position.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;position&lt;/a&gt;定义，也会定义为relative。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;常用的CSS属性继承性：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/inherit继承-CSS属性.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/inherit继承-CSS属性.png&quot; alt=&quot;inherit继承-CSS属性&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容为《前端开发工程师》微专业的第一门课《网页制作》的第五章，学习视频课程后自己整理的学习笔记，会持续更新内容。&lt;/p&gt;
&lt;h2 id=&quot;《网页制作》—CSS—CSS文本、颜色&quot;&gt;&lt;a href=&quot;#《网页制作》—CSS—CSS文本、颜色&quot; class=&quot;headerl
    
    </summary>
    
      <category term="网易微专业·前端开发工程师" scheme="http://yoursite.com/categories/%E7%BD%91%E6%98%93%E5%BE%AE%E4%B8%93%E4%B8%9A%C2%B7%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
    
      <category term="前端开发工程师学习笔记" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>网易微专业之《前端开发工程师》学习笔记（6）-CSS</title>
    <link href="http://yoursite.com/2015/12/24/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-886-ef-bc-89-css/"/>
    <id>http://yoursite.com/2015/12/24/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-886-ef-bc-89-css/</id>
    <published>2015-12-24T04:27:14.000Z</published>
    <updated>2016-04-07T06:47:16.000Z</updated>
    
    <content type="html">&lt;p&gt;以下内容为《前端开发工程师》微专业的第一门课《网页制作》的第五章，学习视频课程后自己整理的学习笔记，会持续更新内容。&lt;/p&gt;
&lt;h2 id=&quot;《网页制作》之CSS&quot;&gt;&lt;a href=&quot;#《网页制作》之CSS&quot; class=&quot;headerlink&quot; title=&quot;《网页制作》之CSS&quot;&gt;&lt;/a&gt;《网页制作》之CSS&lt;/h2&gt;&lt;h2 id=&quot;CSS选择器&quot;&gt;&lt;a href=&quot;#CSS选择器&quot; class=&quot;headerlink&quot; title=&quot;CSS选择器&quot;&gt;&lt;/a&gt;&lt;strong&gt;CSS选择器&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;选择器，说白了就是&lt;span style=&quot;color: #ff0000;&quot;&gt;用一种方式把你想要的那一个标签选中&lt;/span&gt;！把它选中了，你才能操作这个标签的CSS样式。CSS有很多把你所需要的标签选中的方式，这些不同的方式就是不同的选择器。&lt;/p&gt;
&lt;p&gt;选择器的不同，在于它选择方式不同，但是他们的目的都是相同的，那就是&lt;span style=&quot;color: #ff0000;&quot;&gt;把你需要的标签选中，然后让你定义该标签的CSS样式&lt;/span&gt;。当然，你也有可能会用某一种选择器代替另一种选择器，这仅仅是由于选择方式不一样罢了，目的还是一样的。&lt;/p&gt;
&lt;h3 id=&quot;标签选择器&quot;&gt;&lt;a href=&quot;#标签选择器&quot; class=&quot;headerlink&quot; title=&quot;标签选择器&quot;&gt;&lt;/a&gt;标签选择器&lt;/h3&gt;&lt;p&gt;标签选择器其实就是html代码中的标签。例如下面代码：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;p{font-size:12px;line-height:1.6em;}&lt;br&gt;上面的css样式代码的作用：为p标签设置12px字号，行间距设置1.6em的样式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;类选择器&quot;&gt;&lt;a href=&quot;#类选择器&quot; class=&quot;headerlink&quot; title=&quot;类选择器&quot;&gt;&lt;/a&gt;类选择器&lt;/h3&gt;&lt;p&gt;类选择器在css样式编码中是最常用到的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;.类选器名称{css样式代码;}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、英文圆点开头&lt;/p&gt;
&lt;p&gt;2、其中类选器名称可以任意起名（但不要起中文噢）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第一步：使用合适的标签把要修饰的内容标记起来，如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;span&amp;gt;胆小如鼠&amp;lt;/span&amp;gt;&lt;br&gt;第二步：使用class=”类选择器名称”为标签设置一个类，如下：&lt;br&gt;&amp;lt;span class=”stress”&amp;gt;胆小如鼠&amp;lt;/span&amp;gt;&lt;br&gt;第三步：设置类选器css样式，如下：&lt;br&gt;.stress{color:red;}/&lt;em&gt;类前面要加入一个英文圆点&lt;/em&gt;/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;ID选择器&quot;&gt;&lt;a href=&quot;#ID选择器&quot; class=&quot;headerlink&quot; title=&quot;ID选择器&quot;&gt;&lt;/a&gt;ID选择器&lt;/h3&gt;&lt;p&gt;在很多方面，ID选择器都类似于类选择符，但也有一些重要的区别：&lt;/p&gt;
&lt;p&gt;1、为标签设置id=”ID名称”，而不是class=”类名称”。&lt;/p&gt;
&lt;p&gt;2、ID选择符的前面是井号（#）号，而不是英文圆点（.）。&lt;/p&gt;
&lt;h4 id=&quot;类和ID选择器的区别&quot;&gt;&lt;a href=&quot;#类和ID选择器的区别&quot; class=&quot;headerlink&quot; title=&quot;类和ID选择器的区别&quot;&gt;&lt;/a&gt;类和ID选择器的区别&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;相同点：可以应用于任何元素&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;不同点：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、&lt;strong&gt;ID选择器只能在文档中使用一次。&lt;/strong&gt;与类选择器不同，在一个HTML文档中，ID选择器只能使用一次，而且仅一次。而类选择器可以使用多次。&lt;/p&gt;
&lt;p&gt;2、&lt;strong&gt;可以使用类选择器词列表方法为一个元素同时设置多个样式&lt;/strong&gt;。我们可以为一个元素同时设多个样式，但只可以用类选择器的方法实现，ID选择器是不可以的（不能使用 ID 词列表）。如以下代码：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;p&amp;gt;到了&amp;lt;span &lt;strong&gt;class=”stress bigsize”&lt;/strong&gt;&amp;gt;三年级&amp;lt;/span&amp;gt;下学期时，我们班上了一节公开课…&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;通用选择器（通配符选择器）&quot;&gt;&lt;a href=&quot;#通用选择器（通配符选择器）&quot; class=&quot;headerlink&quot; title=&quot;通用选择器（通配符选择器）&quot;&gt;&lt;/a&gt;通用选择器（通配符选择器）&lt;/h3&gt;&lt;p&gt;通用选择器是功能最强大的选择器，它使用一个（&lt;strong&gt;*&lt;/strong&gt;）号指定，它的作用是匹配html中所有标签元素，如下使用下面代码使用html中任意标签元素字体颜色全部设置为红色：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;{color:red;}&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;属性选择器&quot;&gt;&lt;a href=&quot;#属性选择器&quot; class=&quot;headerlink&quot; title=&quot;属性选择器&quot;&gt;&lt;/a&gt;属性选择器&lt;/h3&gt;&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;151&quot;&gt;&lt;strong&gt;选择器&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;412&quot;&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;151&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/selector_attribute.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[attribute]&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;412&quot;&gt;用于选取带有指定属性的元素。&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;151&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/selector_attribute_value.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[attribute=value]&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;412&quot;&gt;用于选取带有指定属性和值的元素。&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;151&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/selector_attribute_value_contain.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[attribute~=value]&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;412&quot;&gt;用于选取属性值中包含指定词汇的元素。&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;151&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/selector_attribute_value_start.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[attribute|=value]&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;412&quot;&gt;用于选取带有以指定值开头的属性值的元素，该值必须是整个单词。&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;151&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/selector_attr_begin.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[attribute^=value]&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;412&quot;&gt;匹配属性值以指定值开头的每个元素。&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;151&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/selector_attr_end.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[attribute$=value]&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;412&quot;&gt;匹配属性值以指定值结尾的每个元素。&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;151&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/selector_attr_contain.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[attribute*=value]&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;412&quot;&gt;匹配属性值中包含指定值的每个元素。&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;实例展示：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;html代码&lt;/strong&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;a href=”xxx.pdf”&amp;gt;我链接的是PDF文件&amp;lt;/a&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;a href=”#” class=”icon”&amp;gt;我类名是icon&amp;lt;/a&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;a href=”#” title=”我的title是more”&amp;gt;我的title是more&amp;lt;/a&amp;gt;&lt;br&gt;&lt;strong&gt;css代码&lt;/strong&gt;&lt;br&gt;a[class^=icon]{  background: green;  color:#fff;}&lt;/p&gt;
&lt;p&gt;a[href$=pdf]{  background: orange;  color: #fff;}&lt;/p&gt;
&lt;p&gt;a[title*=more]{  background: blue;  color: #fff;}&lt;br&gt;结果显示：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS属性选择器.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS属性选择器.png&quot; alt=&quot;CSS属性选择器&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;伪类选择器&quot;&gt;&lt;a href=&quot;#伪类选择器&quot; class=&quot;headerlink&quot; title=&quot;伪类选择器&quot;&gt;&lt;/a&gt;伪类选择器&lt;/h3&gt;&lt;p&gt;CSS 伪类用于向某些选择器添加特殊的效果。又叫伪类选择符，它允许给html不存在的标签（标签的某种状态）设置样式，比如说我们给html中一个标签元素的鼠标滑过的状态来设置字体颜色：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a:hover{color:red;}&lt;br&gt;上面一行代码就是为 a 标签鼠标滑过的状态设置字体颜色变红。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;关于伪选择**&lt;/strong&gt;器&lt;strong&gt;**：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;关于伪类选择器，到目前为止，可以兼容所有浏鉴器的“伪类选择器”就是 a 标签上使用 :hover 了（其实伪类选择符还有很多，尤其是 css3 中，但是因为不能兼容所有浏览器，本教程只是讲了这一种最常用的）。其实 :hover 可以放在任意的标签上，比如说 p:hover，但是它们的兼容性也是很不好的，所以现在比较常用的还是 a:hover 的组合。&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;315&quot;&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;65&quot;&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pseudo_active.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;:active&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;315&quot;&gt;向被激活的元素添加样式。&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;65&quot;&gt;1&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pseudo_focus.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;:focus&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;315&quot;&gt;向拥有键盘输入焦点的元素添加样式。&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;65&quot;&gt;2&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pseudo_hover.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;:hover&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;315&quot;&gt;当鼠标悬浮在元素上方时，向元素添加样式。&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;65&quot;&gt;1&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pseudo_link.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;:link&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;315&quot;&gt;向未被访问的链接添加样式。&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;65&quot;&gt;1&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pseudo_visited.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;:visited&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;315&quot;&gt;向已被访问的链接添加样式。&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;65&quot;&gt;1&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pseudo_first-child.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;:first-child&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;315&quot;&gt;向元素的第一个子元素添加样式。&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;65&quot;&gt;2&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pseudo_lang.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;:lang&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;315&quot;&gt;向带有指定 lang 属性的元素添加样式。&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;65&quot;&gt;2&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;结构伪类选择器&quot;&gt;&lt;a href=&quot;#结构伪类选择器&quot; class=&quot;headerlink&quot; title=&quot;结构伪类选择器&quot;&gt;&lt;/a&gt;结构伪类选择器&lt;/h3&gt;&lt;p&gt;是针对HTML层次“结构”的伪类选择器。例如我们想要某一个父元素下面的第n个子元素。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/结构性伪类选择器.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/结构性伪类选择器.png&quot; alt=&quot;结构性伪类选择器&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;（odd:奇数； even:偶数）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结：&lt;/strong&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;“:first-child”是选择父元素下的第1个子元素（不区分元素类型），而“:first-of-type”是选择父元素下某个元素类型的第1个子元素（区分元素类型）。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;div&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;h1&amp;gt;&amp;lt;/h1&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/div&amp;gt;&lt;br&gt;&lt;strong&gt;（1）:first-child&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;h1:first-child：选择的是h1元素，因为h1元素是div的第1个子元素。&lt;/p&gt;
&lt;p&gt;p:first-child：选择不到任何元素，因为p并不是div的第1个子元素，而是div的第2个子元素。&lt;/p&gt;
&lt;p&gt;span:first-child:选择不到任何元素，因为span并不是div的第1个子元素，而是div的第3个子元素；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）:first-of-type&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;h1: first-of-type:选择的是h1元素，因为h1元素是div中所有h1元素中的第1个h1元素，事实上也只有一个为h1的子元素；&lt;/p&gt;
&lt;p&gt;p: first-of-type:选择的是p元素，因为p元素是div中所有p元素中的第1个p元素，事实上也只有一个为p的子元素；&lt;/p&gt;
&lt;p&gt;span: first-of-type:选择的是id=”first”的span元素，因为在div元素中有2个span元素，我们选择的是两个之中的第1个。&lt;/p&gt;
&lt;h4 id=&quot;“-nth-child-n-”选择器&quot;&gt;&lt;a href=&quot;#“-nth-child-n-”选择器&quot; class=&quot;headerlink&quot; title=&quot;“:nth-child(n)”选择器&quot;&gt;&lt;/a&gt;“:nth-child(n)”选择器&lt;/h4&gt;&lt;p&gt;用来定位某个父元素的一个或多个特定的子元素。其中“n”是其参数，而且可以是整数值(1,2,3,4)，也可以是表达式(2n+1、-n+5)和关键词(odd、even)，但参数n的起始值始终是1，而不是0。也就是说，参数n的值为0时，选择器将选择不到任何匹配的元素。&lt;/p&gt;
&lt;p&gt;经验与技巧:当“:nth-child(n)”选择器中的n为一个表达式时，其中n是从0开始计算，当表达式的值为0或小于0的时候，不选择任何匹配的元素。如下表所示：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/nth-childn表达式.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/nth-childn表达式.png&quot; alt=&quot;nth-child(n)表达式&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;nth-last-child-n&quot;&gt;&lt;a href=&quot;#nth-last-child-n&quot; class=&quot;headerlink&quot; title=&quot;nth-last-child(n)&quot;&gt;&lt;/a&gt;nth-last-child(n)&lt;/h4&gt;&lt;p&gt;“:nth-last-child(n)”选择器和前面的“:nth-child(n)”选择器非常的相似，只是这里多了一个“last”，所起的作用和“:nth-child(n)”选择器有所区别，从某父元素的最后一个子元素开始计算，来选择特定的元素。&lt;/p&gt;
&lt;h3 id=&quot;target选择器&quot;&gt;&lt;a href=&quot;#target选择器&quot; class=&quot;headerlink&quot; title=&quot;:target选择器&quot;&gt;&lt;/a&gt;:target选择器&lt;/h3&gt;&lt;p&gt;用于选取页面中的某个target元素。&lt;/p&gt;
&lt;p&gt;:target选择器称为目标选择器，用来匹配文档(页面)的url的某个标志符的目标元素。常用于锚链接，类似于书签定位。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;style type=”text/css”&amp;gt;&lt;/p&gt;
&lt;p&gt;:target h3&lt;/p&gt;
&lt;p&gt;{ color:red;}&lt;/p&gt;
&lt;p&gt;&amp;lt;/style&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/head&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;body&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;div&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;a href=”#music”&amp;gt;推荐音乐&amp;lt;/a&amp;gt;&amp;lt;br /&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/div&amp;gt;&lt;/p&gt;
&lt;p&gt;……&lt;/p&gt;
&lt;p&gt;&amp;lt;div id=”music”&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;h3&amp;gt;推荐音乐&amp;lt;/h3&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;ul&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;li&amp;gt;林俊杰-被风吹过的下图&amp;lt;/li&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;li&amp;gt;曲婉婷-在我的歌声里&amp;lt;/li&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;li&amp;gt;许嵩-灰色头像&amp;lt;/li&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/ul&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/div&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;当设为：target h3 时，会定位到 链接 #music 所指向的目标元素id=music这个div下的h3标签, 使h3变为红色&lt;/li&gt;
&lt;li&gt;当设为：target 时，会定位到链接#music所指向的id=music 这个div下，使h3/ul/li标签内容全变为红色。&lt;/li&gt;
&lt;li&gt;当设为：target li 时，会定位到链接#music所指向的id=music 这个div下，使li标签内容全变为红色。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&quot;UI元素状态伪类选择器&quot;&gt;&lt;a href=&quot;#UI元素状态伪类选择器&quot; class=&quot;headerlink&quot; title=&quot;UI元素状态伪类选择器&quot;&gt;&lt;/a&gt;UI元素状态伪类选择器&lt;/h3&gt;&lt;p&gt;UI，是用户界面（User Interface）的意思。所谓的UI设计是指对软件的人机交互、操作逻辑、界面美观的综合设计。&lt;/p&gt;
&lt;p&gt;UI元素状态包括：&lt;strong&gt;可用、不可用、选中、未选中、获取焦点、失去焦点等。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这些选择器的共同特征是：指定的样式只有当元素处于某种状态下时才起作用，在默认状态下不起作用。UI元素状态伪类选择器大多数都是针对表单元素来使用的。&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td colspan=&quot;2&quot; width=&quot;573&quot;&gt;&lt;strong&gt;CSS3 UI元素状态伪类选择器&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;153&quot;&gt;&lt;strong&gt;选择器&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;420&quot;&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;153&quot;&gt;E:focus&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;420&quot;&gt;指定元素获得光标焦点时使用的样式&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;153&quot;&gt;E:checked&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;420&quot;&gt;选择E元素中所有被选中的元素&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;153&quot;&gt;E::selection&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;420&quot;&gt;改变E元素中被选择的网页文本的显示效果&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;153&quot;&gt;E:enabled&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;420&quot;&gt;选择E元素中所有“可用”元素&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;153&quot;&gt;E:disabled&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;420&quot;&gt;选择E元素中所有“不可用”元素&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;153&quot;&gt;E:read-write&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;420&quot;&gt;选择E元素中所有“可读写”元素&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;153&quot;&gt;E:read-only&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;420&quot;&gt;选择E元素中所有“只读”元素&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;153&quot;&gt;E::before&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;420&quot;&gt;在E元素之前插入内容&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;153&quot;&gt;E::after&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;420&quot;&gt;在E元素之后插入内容&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;:focus选择器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;:focus选择器被用来指定“表单元素”获得光标焦点时使用的样式，主要在单行文本框text、多行文本框textarea等表单元素获得焦点并输入文本时使用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;:checked选择器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在表单元素中，单选按钮radio和复选框checkbox都具有“选中”和“未选中”状态。在CSS3中，我们可以通过使用:checked选择器来定义选中时的CSS样式。&lt;/p&gt;
&lt;p&gt;暂时只有Opera浏览器支持:checked选择器。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;::selection选择器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在CSS3中，我们可以使用“::selection选择器”来改变被选择的网页文本的显示效果。&lt;/p&gt;
&lt;p&gt;注意，“::selection选择器”是双冒号。其实&lt;strong&gt;双冒号往往都是“伪元素”，而单冒号往往都是“伪类”。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;:enabled与:disabled选择器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在Web表单中，有些表单元素（如输入框、密码框、复选框等）有“可用”和“不可用”这2种状态。默认情况下，这些表单元素都处在可用状态。&lt;/p&gt;
&lt;p&gt;在CSS3中，我们可以使用:enabled选择器和:disabled选择器来分别设置表单元素的可用与不可用这两种状态的CSS样式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;:read-write与:read-only选择器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在Web表单中，有些表单元素（如输入框、文本域等）有“可读写”和“只读”这2种状态。默认情况下，这些表单元素都处在“可读写”状态。&lt;/p&gt;
&lt;p&gt;在CSS3中，我们可以使用:read-write选择器和:read-only选择器来分别设置表单元素:read-only 选择器支持 Chrome, Safari 和 Opera。Firefox 和 Internet Explorer 不支持 :read-only 选择器。Firefox 支持 :-moz-read-only 选择器作为替代方案。的“可读写”与“只读”这两种状态的CSS样式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;::before和::after选择器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在CSS3中，我们可以使用::before和::after这两个选择器在元素前面或后面添加内容。这两个选择器常和”content属性”配合使用，使用的场景最多的就是清除浮动和创建小图标。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;CSS-伪元素选择器&quot;&gt;&lt;a href=&quot;#CSS-伪元素选择器&quot; class=&quot;headerlink&quot; title=&quot;CSS 伪元素选择器&quot;&gt;&lt;/a&gt;CSS 伪元素选择器&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用于向某些选择器设置特殊效果。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;316&quot;&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;64&quot;&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pseudo_first-letter.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;::first-letter&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;316&quot;&gt;向文本的第一个字母添加特殊样式。&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;64&quot;&gt;1&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;:&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pseudo_first-line.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;:first-line&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;316&quot;&gt;向文本的首行添加特殊样式。&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;64&quot;&gt;1&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pseudo_before.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;::before&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;316&quot;&gt;在元素之前添加内容。&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;64&quot;&gt;2&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;&lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_pseudo_after.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;::after&lt;/a&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;316&quot;&gt;在元素之后添加内容。&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;64&quot;&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;182&quot;&gt;::selection&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;316&quot;&gt;改变元素中被选择的网页文本的显示效果&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;64&quot;&gt;&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;CSS组合选择器&quot;&gt;&lt;a href=&quot;#CSS组合选择器&quot; class=&quot;headerlink&quot; title=&quot;CSS组合选择器&quot;&gt;&lt;/a&gt;CSS组合选择器&lt;/h3&gt;&lt;h3 id=&quot;子选择器&quot;&gt;&lt;a href=&quot;#子选择器&quot; class=&quot;headerlink&quot; title=&quot;子选择器&quot;&gt;&lt;/a&gt;&lt;strong&gt;子选择器&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;即大于符号(&amp;gt;),用于选择指定标签元素的&lt;strong&gt;第一代子元素**&lt;/strong&gt;。**如右侧代码编辑器中的代码：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;.food&amp;gt;li{border:1px solid red;}&lt;br&gt;这行代码会使class名为food下的子元素li加入红色实线边框。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;包含-后代-选择器&quot;&gt;&lt;a href=&quot;#包含-后代-选择器&quot; class=&quot;headerlink&quot; title=&quot;包含(后代)选择器&quot;&gt;&lt;/a&gt;&lt;strong&gt;包含(后代)选择器&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;包含选择器&lt;/strong&gt;，即加入空格,用于选择指定标签元素下的&lt;strong&gt;后辈元素。&lt;/strong&gt;如右侧代码编辑器中的代码：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;.first  span{color:red;}&lt;br&gt;请注意这个选择器与子选择器的区别，&lt;span style=&quot;color: #ff0000;&quot;&gt;子选择器（child selector）仅是指它的直接后代，或者你可以理解为作用于子元素的第一代后代。而后代选择器是作用于所有子后代元素。后代选择器通过空格来进行选择，而子选择器是通过“&amp;gt;”进行选择&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;总结：&lt;strong&gt;&amp;gt;&lt;/strong&gt;作用于元素的第一代后代，&lt;strong&gt;空格&lt;/strong&gt;作用于元素的所有后代。&lt;/p&gt;
&lt;h3 id=&quot;相邻选择-器&quot;&gt;&lt;a href=&quot;#相邻选择-器&quot; class=&quot;headerlink&quot; title=&quot;相邻选择**器**&quot;&gt;&lt;/a&gt;&lt;strong&gt;相邻选择**&lt;/strong&gt;器**&lt;/h3&gt;&lt;p&gt;相邻选择器只会命中符合条件的相邻的兄弟元素，使用“+”号。&lt;/p&gt;
&lt;p&gt;如：p+p{color:#f00;}&lt;/p&gt;
&lt;p&gt;即设置与p元素相邻的p元素的颜色。&lt;/p&gt;
&lt;h3 id=&quot;兄弟选择-器&quot;&gt;&lt;a href=&quot;#兄弟选择-器&quot; class=&quot;headerlink&quot; title=&quot;兄弟选择**器**&quot;&gt;&lt;/a&gt;&lt;strong&gt;兄弟选择**&lt;/strong&gt;器**&lt;/h3&gt;&lt;p&gt;兄弟选择器会命中所有符合条件的兄弟元素，而不强制是紧邻的元素，使用“~”符号&lt;/p&gt;
&lt;p&gt;如：p~p{color:#f00;}&lt;/p&gt;
&lt;h3 id=&quot;群组选择器&quot;&gt;&lt;a href=&quot;#群组选择器&quot; class=&quot;headerlink&quot; title=&quot;群组选择器&quot;&gt;&lt;/a&gt;&lt;strong&gt;群组选择器&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;群组选择器，就是同时对几个选择器进行相同的操作。&lt;/p&gt;
&lt;p&gt;语法：h3,div,p,span{color:red;}&lt;/p&gt;
&lt;h2 id=&quot;CSS继承&quot;&gt;&lt;a href=&quot;#CSS继承&quot; class=&quot;headerlink&quot; title=&quot;CSS继承&quot;&gt;&lt;/a&gt;&lt;strong&gt;CSS继承&lt;/strong&gt;&lt;/h2&gt;&lt;h3 id=&quot;CSS-继承&quot;&gt;&lt;a href=&quot;#CSS-继承&quot; class=&quot;headerlink&quot; title=&quot;CSS**继承**&quot;&gt;&lt;/a&gt;&lt;strong&gt;CSS**&lt;/strong&gt;继承**&lt;/h3&gt;&lt;p&gt;CSS的某些样式是具有继承性的，那么什么是继承呢？继承是一种规则，它允许样式不仅应用于某个特定html标签元素，而且应用于其后代。比如下面代码：如某种颜色应用于p标签，这个颜色设置不仅应用p标签，还应用于p标签中的所有子元素文本，这里子元素为span标签。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;p{color:red;}&lt;/p&gt;
&lt;p&gt;&amp;lt;p&amp;gt;三年级时，我还是一个&amp;lt;span&amp;gt;胆小如鼠&amp;lt;/span&amp;gt;的小女孩。&amp;lt;/p&amp;gt;&lt;br&gt;注意: &lt;span style=&quot;color: #ff0000;&quot;&gt;有一些css样式是不具有继承性的。如border:1px solid red;&lt;/span&gt;&lt;br&gt;p{border:1px solid red;}&lt;/p&gt;
&lt;p&gt;&amp;lt;p&amp;gt;三年级时，我还是一个&amp;lt;span&amp;gt;胆小如鼠&amp;lt;/span&amp;gt;的小女孩。&amp;lt;/p&amp;gt;&lt;br&gt;在上面例子中它代码的作用只是给p标签设置了边框为1像素、红色、实心边框线，而对于子元素span是没用起到作用的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;CSS优先级（特殊性）&quot;&gt;&lt;a href=&quot;#CSS优先级（特殊性）&quot; class=&quot;headerlink&quot; title=&quot;CSS优先级（特殊性）&quot;&gt;&lt;/a&gt;&lt;strong&gt;CSS优先级（特殊性）&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;CSS的优先级也可以称为CSS的特殊性(specificity)或权值:&lt;span style=&quot;color: #ff0000;&quot;&gt;对于每个样式表规则,浏览器都会计算选择器的特殊性,从而使元素属性声明在有冲突的情况下能够正确显示.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有的时候我们为同一个元素设置了不同的CSS样式代码，那么元素会启用哪一个CSS样式呢?我们来看一下面的代码：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;p{color:red;}&lt;/p&gt;
&lt;p&gt;.first{color:green;}&lt;/p&gt;
&lt;p&gt;&amp;lt;p class=”first”&amp;gt;三年级时，我还是一个&amp;lt;span&amp;gt;胆小如鼠&amp;lt;/span&amp;gt;的小女孩。&amp;lt;/p&amp;gt;&lt;br&gt;p和.first都匹配到了p这个标签上，那么会显示哪种颜色呢？green是正确的颜色，那么为什么呢？是因为浏览器是根据权值来判断使用哪种css样式的，权值高的就使用哪种css样式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面是权值的规则：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;标签的权值为1，类选择符的权值为10，ID选择符的权值最高为100。&lt;/strong&gt;例如下面的代码：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;p{color:red;} /&lt;em&gt;权值为1&lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;p span{color:green;} /&lt;em&gt;权值为1+1=2&lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;.warning{color:white;} /&lt;em&gt;权值为10&lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;p span.warning{color:purple;} /&lt;em&gt;权值为1+1+10=12&lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;#footer .note p{color:yellow;} /&lt;em&gt;权值为100+10+1=111&lt;/em&gt;/&lt;br&gt;注意：还有一个权值比较特殊–继承也有权值但很低，有的文献提出它只有0.1，所以可以理解为继承的权值最低。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;如何改变CSS的优先级？&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;改变CSS的先后顺序；&lt;/li&gt;
&lt;li&gt;提升权重；&lt;/li&gt;
&lt;li&gt;使用!important.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;CSS层叠&quot;&gt;&lt;a href=&quot;#CSS层叠&quot; class=&quot;headerlink&quot; title=&quot;CSS层叠&quot;&gt;&lt;/a&gt;&lt;strong&gt;CSS层叠&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;层叠&lt;/strong&gt;就是在html文件中对于同一个元素可以有多个css样式存在，当有相同权重的样式存在时，会根据这些css样式的前后顺序来决定，处于最后面的css样式会被应用。&lt;/p&gt;
&lt;p&gt;如下面代码:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;p{color:red;}&lt;/p&gt;
&lt;p&gt;p{color:green;}&lt;/p&gt;
&lt;p&gt;&amp;lt;p class=”first”&amp;gt;三年级时，我还是一个&amp;lt;span&amp;gt;胆小如鼠&amp;lt;/span&amp;gt;的小女孩。&amp;lt;/p&amp;gt;&lt;br&gt;最后 p 中的文本会设置为green，这个层叠很好理解，理解为后面的样式会覆盖前面的样式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以前面的css样式优先级就不难理解了：&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;&lt;strong&gt;内联样式表（标签内部）&amp;gt; 嵌入样式表（当前文件中）&amp;gt; 外部样式表（外部文件中）&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;重要性-important&quot;&gt;&lt;a href=&quot;#重要性-important&quot; class=&quot;headerlink&quot; title=&quot;重要性(**!important**)&quot;&gt;&lt;/a&gt;&lt;strong&gt;重要性(**&lt;/strong&gt;!important&lt;strong&gt;**)&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;我们在做网页代码的时，有些特殊的情况需要为某些样式设置具有最高权值，怎么办？这时候我们可以使用&lt;strong&gt;!important&lt;/strong&gt;来解决。&lt;/p&gt;
&lt;p&gt;如下代码：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;p{color:red&lt;strong&gt;!important&lt;/strong&gt;;}&lt;/p&gt;
&lt;p&gt;p{color:green;}&lt;/p&gt;
&lt;p&gt;&amp;lt;p class=”first”&amp;gt;三年级时，我还是一个&amp;lt;span&amp;gt;胆小如鼠&amp;lt;/span&amp;gt;的小女孩。&amp;lt;/p&amp;gt;&lt;br&gt;这时 p 段落中的文本会显示的red红色。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意：&lt;span style=&quot;color: #ff0000;&quot;&gt;!important要写在分号的前面&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这里注意当网页制作者不设置css样式时，浏览器会按照自己的一套样式来显示网页。并且用户也可以在浏览器中设置自己习惯的样式，比如有的用户习惯把字号设置为大一些，使其查看网页的文本更加清楚。这时注意样式优先级为：&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;浏览器默认的样式 &amp;lt; 网页制作者样式 &amp;lt; 用户自己设置的样式&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;但记住!important优先级样式是个例外，权值高于用户自己设置的样式。&lt;/p&gt;
&lt;h2 id=&quot;参考资料：&quot;&gt;&lt;a href=&quot;#参考资料：&quot; class=&quot;headerlink&quot; title=&quot;参考资料：&quot;&gt;&lt;/a&gt;&lt;strong&gt;参考资料：&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.quirksmode.org/css/selectors/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.quirksmode.org/css/selectors/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容为《前端开发工程师》微专业的第一门课《网页制作》的第五章，学习视频课程后自己整理的学习笔记，会持续更新内容。&lt;/p&gt;
&lt;h2 id=&quot;《网页制作》之CSS&quot;&gt;&lt;a href=&quot;#《网页制作》之CSS&quot; class=&quot;headerlink&quot; title=&quot;《网页制作》
    
    </summary>
    
      <category term="网易微专业·前端开发工程师" scheme="http://yoursite.com/categories/%E7%BD%91%E6%98%93%E5%BE%AE%E4%B8%93%E4%B8%9A%C2%B7%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
    
      <category term="前端开发工程师学习笔记" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>网易微专业之《前端开发工程师》学习笔记（5）-CSS</title>
    <link href="http://yoursite.com/2015/12/24/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-885-ef-bc-89-css/"/>
    <id>http://yoursite.com/2015/12/24/e7-bd-91-e6-98-93-e5-be-ae-e4-b8-93-e4-b8-9a-e4-b9-8b-e3-80-8a-e5-89-8d-e7-ab-af-e5-bc-80-e5-8f-91-e5-b7-a5-e7-a8-8b-e5-b8-88-e3-80-8b-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-885-ef-bc-89-css/</id>
    <published>2015-12-24T04:09:47.000Z</published>
    <updated>2016-04-07T06:47:16.000Z</updated>
    
    <content type="html">&lt;p&gt;以下内容为《前端开发工程师》微专业的第一门课《网页制作》的第五章，学习视频课程后自己整理的学习笔记，会持续更新内容。&lt;/p&gt;
&lt;h2 id=&quot;《网页制作》之CSS&quot;&gt;&lt;a href=&quot;#《网页制作》之CSS&quot; class=&quot;headerlink&quot; title=&quot;《网页制作》之CSS&quot;&gt;&lt;/a&gt;《网页制作》之CSS&lt;/h2&gt;&lt;p&gt;CSS部分包括选择器、文本、盒模型、背景、布局、变形、动画等众多知识点，这一篇是CSS介绍部分。&lt;/p&gt;
&lt;h3 id=&quot;CSS简介&quot;&gt;&lt;a href=&quot;#CSS简介&quot; class=&quot;headerlink&quot; title=&quot;CSS简介&quot;&gt;&lt;/a&gt;&lt;strong&gt;CSS简介&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;概念：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CSS全称为“层叠样式表 (Cascading Style Sheets)”，它主要是用于定义HTML内容在浏览器内的显示样式，如文字大小、颜色、字体加粗等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSS 指层叠样式表 (&lt;strong&gt;C&lt;/strong&gt;ascading &lt;strong&gt;S&lt;/strong&gt;tyle &lt;strong&gt;S&lt;/strong&gt;heets)&lt;/li&gt;
&lt;li&gt;样式定义&lt;strong&gt;如何显示&lt;/strong&gt;HTML 元素&lt;/li&gt;
&lt;li&gt;样式通常存储在&lt;strong&gt;样式表&lt;/strong&gt;中&lt;/li&gt;
&lt;li&gt;把样式添加到 HTML 4.0 中，是为了&lt;strong&gt;解决内容与表现分离的问题&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;外部样式表&lt;/strong&gt;可以极大提高工作效率&lt;/li&gt;
&lt;li&gt;外部样式表通常存储在 &lt;strong&gt;CSS 文件&lt;/strong&gt;中&lt;/li&gt;
&lt;li&gt;多个样式定义可&lt;strong&gt;层叠&lt;/strong&gt;为一&lt;br&gt;&lt;strong&gt;历史&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS历史.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS历史.png&quot; alt=&quot;CSS历史&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;CSS引用：&quot;&gt;&lt;a href=&quot;#CSS引用：&quot; class=&quot;headerlink&quot; title=&quot;CSS引用：&quot;&gt;&lt;/a&gt;&lt;strong&gt;CSS引用：&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;在HTML中引入CSS共有3种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;外部样式表；&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内部样式表；&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内联样式表；&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;1. **&lt;/strong&gt;外部样式表**&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当样式需要应用于很多页面时，外部样式表将是理想的选择。在使用外部样式表的情况下，你可以通过改变一个文件来改变整个站点的外观。每个页面使用 &amp;lt;link&amp;gt; 标签链接到样式表。 &amp;lt;link&amp;gt; 标签在（文档的）头部：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;head&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;link rel=”stylesheet” type=”text/css” href=”mystyle.css”&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/head&amp;gt;&lt;br&gt;浏览器会从文件 mystyle.css 中读到样式声明，并根据它来格式文档。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;外部样式表可以在任何文本编辑器中进行编辑。文件不能包含任何的 html 标签。样式表应该以 .css 扩展名进行保存。下面是一个样式表文件的例子：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hr {color:sienna;}&lt;/p&gt;
&lt;p&gt;p {margin-left:20px;}&lt;/p&gt;
&lt;p&gt;body {background-image:url(“/images/back40.gif”);}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;内部样式表：&lt;/strong&gt;&lt;br&gt;当单个文档需要特殊的样式时，就应该使用内部样式表。你可以使用 &amp;lt;style&amp;gt; 标签在文档头部定义内部样式表，就像这样:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;head&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;style&amp;gt;&lt;/p&gt;
&lt;p&gt;hr {color:sienna;}&lt;/p&gt;
&lt;p&gt;p {margin-left:20px;}&lt;/p&gt;
&lt;p&gt;body {background-image:url(“images/back40.gif”);}&lt;/p&gt;
&lt;p&gt;&amp;lt;/style&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/head&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;内联样式表：&lt;/strong&gt;&lt;br&gt;要使用内联样式，你需要在相关的标签内使用样式（style）属性。Style 属性可以包含任何 CSS 属性。本例展示如何改变段落的颜色和左外边距：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;p style=”color:sienna;margin-left:20px”&amp;gt;This is a paragraph.&amp;lt;/p&amp;gt;&lt;br&gt;由于要将表现和内容混杂在一起，内联样式会损失掉样式表的许多优势。请慎用这种方法，例如当样式仅需要在一个元素上应用一次时。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;层叠次序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #00ff00;&quot;&gt;&lt;em&gt;当同一个 HTML 元素被不止一个样式定义时，会使用哪个样式呢？&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;一般而言，所有的样式会根据下面的规则层叠于一个新的虚拟样式表中，其中数字 4 拥有最高的优先权。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浏览器缺省设置&lt;/li&gt;
&lt;li&gt;外部样式表&lt;/li&gt;
&lt;li&gt;内部样式表（位于 &amp;lt;head&amp;gt; 标签内部）&lt;/li&gt;
&lt;li&gt;内联样式（在 HTML 元素内部）&lt;br&gt;因此，&lt;span style=&quot;color: #ff0000;&quot;&gt;&lt;strong&gt;内联样式（在 HTML 元素内部）拥有最高的优先权&lt;/strong&gt;，&lt;/span&gt;这意味着它将优先于以下的样式声明：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;内联样式 &amp;gt; 标签中的样式声明 &amp;gt; 外部样式表中的样式声明(或者浏览器中的样式声明（缺省值）)&lt;/p&gt;
&lt;p&gt;提示:如果你使用了外部文件的样式在 &amp;lt;head&amp;gt;中也定义了该样式，则内部样式表会取代外部文件的样式。&lt;/p&gt;
&lt;p&gt;其实总结来说，就是–&lt;strong&gt;就近原则（离被设置元素越近优先级别越高）**&lt;/strong&gt;。**&lt;/p&gt;
&lt;p&gt;但注意上面所总结的优先级是有一个前提：内联式、嵌入式、外部式样式表中css样式是在的相同权值的情况下。&lt;/p&gt;
&lt;h4 id=&quot;CSS语法&quot;&gt;&lt;a href=&quot;#CSS语法&quot; class=&quot;headerlink&quot; title=&quot;CSS语法&quot;&gt;&lt;/a&gt;&lt;strong&gt;CSS语法&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;CSS 规则由两个主要的部分构成：选择器，以及一条或多条声明:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS语法.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS语法.png&quot; alt=&quot;CSS语法&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;选择器（selector）通常是您需要改变样式的 HTML 元素。&lt;/p&gt;
&lt;p&gt;每条声明(Declaration)由一个属性(property)和一个值(value)组成。在英文大括号“｛｝”中的的就是声明.&lt;/p&gt;
&lt;p&gt;属性（property）是您希望设置的样式属性（style attribute）。每个属性有一个值。属性和值被冒号分开。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;浏览器私有属性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于CSS3很多属性尚未成为W3C标准的一部分，因此每种内核的浏览器都只能识别带有自身私有前缀的CSS3属性。我们在书写CSS3代码时，需要在属性前加上浏览器的私有前缀，然后该种内核的浏览器才能识别相应的CSS3属性。&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td colspan=&quot;2&quot; width=&quot;596&quot;&gt;&lt;strong&gt;CSS3浏览器私有前缀&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;私有前缀&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;436&quot;&gt;对应的浏览器&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;-webkit-&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;436&quot;&gt;chrome和safari&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;-moz-&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;436&quot;&gt;Firefox&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;-ms-&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;436&quot;&gt;IE&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;159&quot;&gt;-o-&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;436&quot;&gt;opera&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;举个例子，假如我们想要使用CSS3实现半径为10px的圆角效果的话，可能会这样写：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;border-radius:10px;&lt;br&gt;但是并非所有浏览器都能识别&lt;a href=&quot;http://www.lvyestudy.com/css3/css3_7.2.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;border-radius&lt;/a&gt;这个属性，例如chrome浏览器只能识别-webkit-border-radius（前缀为-webkit-），而firefox浏览器只能识别-moz-border-radius（前缀为-moz-）。因为为了让主流浏览器都能实现圆角效果，我们需要这样写：&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;8&quot;&gt;1&lt;/td&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;5&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;544&quot;&gt;border-radius:10px;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;-webkit-border-radius:10px;  /&lt;em&gt;兼容chrome和Safari&lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;-moz-border-radius:10px;     /&lt;em&gt;兼容Firefox&lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;-ms-border-radius:10px;      /&lt;em&gt;兼容IE&lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;-o-border-radius:10px;       /&lt;em&gt;兼容opera&lt;/em&gt;/&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3 id=&quot;CSS-属性值定义语法：&quot;&gt;&lt;a href=&quot;#CSS-属性值定义语法：&quot; class=&quot;headerlink&quot; title=&quot;CSS**属性值定义语法：**&quot;&gt;&lt;/a&gt;&lt;strong&gt;CSS**&lt;/strong&gt;属性值定义语法：**&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS属性值定义语法.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS属性值定义语法.png&quot; alt=&quot;CSS属性值定义语法&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CSS属性值定义语法&lt;/strong&gt;（CSS value definition syntax）是用来限定CSS属性合法取值的专门语法。在此基础之上，一个CSS属性的合法取值也由语义所限制，比如一些数字必须是正数。&lt;/p&gt;
&lt;p&gt;CSS属性值定义语法描述了哪些值是可取的CSS属性，基本组成元素包括关键字、符号与带类型的参数。&lt;/p&gt;
&lt;h4 id=&quot;基本组成元素&quot;&gt;&lt;a href=&quot;#基本组成元素&quot; class=&quot;headerlink&quot; title=&quot;基本组成元素&quot;&gt;&lt;/a&gt;&lt;strong&gt;基本组成元素&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;1. **&lt;/strong&gt;关键字**&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一般关键字：一般关键字都有预先的定义，不需要引号，如auto, smaller 或 ease-in。&lt;/li&gt;
&lt;li&gt;特殊关键字：inherit与initial：所有CSS属性值都可以使用inherit或者initial。这两个关键字不会出现在CSS合法值定义中，但都是隐含可用的。&lt;br&gt;&lt;strong&gt;2. **&lt;/strong&gt;符号**&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CSS中，有一些符号是可以出现的，比如&lt;span style=&quot;color: #ff0000;&quot;&gt;斜杠(‘/‘)或者逗号(‘,’)&lt;/span&gt;等。它们用来分隔属性值：逗号用来分隔数个并列值，或者分隔函数的参数；斜杠用来分隔一个值的多个部分，通常用在CSS缩写中。这两种符号会以其字面意义出现在CSS属性值定义中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. **&lt;/strong&gt;带类型的参数**&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;基本类型**&lt;/strong&gt;:**一些类型在CSS中经常出现，CSS规范中将其专门定义，称为基本类型，用一对尖括号表示：’&amp;lt;’与’&amp;gt;’，例如：&amp;lt;length&amp;gt;,&amp;lt;percentage&amp;gt;,&amp;lt;color&amp;gt; …&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;其他类型**&lt;/strong&gt;:**其他类型同样也用一对尖括号表示：’&amp;lt;’与’&amp;gt;’。&lt;br&gt;其他类型分为两种：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;取值与其属性取值范围一致的类型，使用包含在尖括号中的带有引号的属性名表示（例如&amp;lt;’border-top-color’&amp;gt;等）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;取值不同于其属性的类型，使用包含在尖括号中的属性名表示（例如&amp;lt;margin-width&amp;gt;、&amp;lt;border-width&amp;gt;等）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;组合符号：&quot;&gt;&lt;a href=&quot;#组合符号：&quot; class=&quot;headerlink&quot; title=&quot;组合符号：&quot;&gt;&lt;/a&gt;&lt;strong&gt;组合符号：&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;值可以按照下面的方法组织，类似于正则表达式&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;几个并列的词(词中间用空格隔开)：&lt;strong&gt;并列的词必须全部出现&lt;/strong&gt;，次序和列出时一样&lt;/li&gt;
&lt;li&gt;两个与符号&amp;amp;&amp;amp;分割两个或多个选择：&lt;strong&gt;必须全部出现的&lt;/strong&gt;，次序任意&lt;/li&gt;
&lt;li&gt;双竖线||分割两个或多个选择：&lt;strong&gt;其中一个或多个出现&lt;/strong&gt;，次序任意&lt;/li&gt;
&lt;li&gt;竖线|分割两个或多个选择：&lt;strong&gt;其中只有一个出现&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;方框[ ]用来&lt;strong&gt;分组&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;方框优先于并列，并列优先于两个与符号&amp;amp;&amp;amp;，两个与符号&amp;amp;&amp;amp;优先于双竖线||，双竖线||优先于竖线|&lt;/span&gt;。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因此，下面两行的含义是一样的：&lt;/p&gt;
&lt;p&gt;a b | c || d &amp;amp;&amp;amp; e f&lt;/p&gt;
&lt;p&gt;[ a b ] | [ c || [ d &amp;amp;&amp;amp; [ e f ]]]&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.**&lt;/strong&gt;并置**（也就是上面的组合符号1）是指将数个关键字、符号或类型，用空格分开写在一起。并置中所有的元素都必须出现并且按所规定的顺序出现。&lt;/p&gt;
&lt;p&gt;例如：&amp;lt;’font-size’&amp;gt; &amp;lt;’font-family’&amp;gt;&lt;/p&gt;
&lt;p&gt;合法值：12px Arial&lt;/p&gt;
&lt;p&gt;不合法值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2em              –两个元素必须出现，此处少一个值；&lt;/li&gt;
&lt;li&gt;Arial 14px       –顺序错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&amp;amp;&amp;amp; —与组合符&lt;/strong&gt;&lt;br&gt;“与”组合符连接的各个部分都必须出现，但是顺序任意。例如：&amp;lt;length&amp;gt;&amp;amp;&amp;amp;&amp;lt;color&amp;gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;合法值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Green 2px&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1em blue&lt;br&gt;不合法值：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Blue             –两个元素必须都出现，此处少一个。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;20px&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;‖ —或组合符&lt;/strong&gt;&lt;br&gt;“或”组合符表示其连接的所有组成元素是可选的，&lt;strong&gt;次序任意，但是至少其中一个要出现&lt;/strong&gt;。“或”组合符通常用来描述属性缩写中的各部分。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如：&amp;lt;’border-width’&amp;gt; || &amp;lt;’border-style’&amp;gt; || &amp;lt;’border-color’&amp;gt;&lt;/p&gt;
&lt;p&gt;以下均为该例的合法取值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1em solid blue&lt;/li&gt;
&lt;li&gt;blue 1em&lt;/li&gt;
&lt;li&gt;&lt;p&gt;solid 1px yellow&lt;br&gt;但以下不是合法取值：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;blue yellow因为一个组成部分最多出现一次。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;bold因为它不允许出现。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;|   —互斥组合符&lt;/strong&gt;&lt;br&gt;“互斥”组合符表示各组成部分中只能&lt;strong&gt;恰好出现一个&lt;/strong&gt;，通常用来分隔一个属性的所有可选值。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;例如：&amp;lt;percentage&amp;gt; | &amp;lt;length&amp;gt; | left | center | right | top | bottom&lt;/p&gt;
&lt;p&gt;以下均为该例的合法取值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3%&lt;/li&gt;
&lt;li&gt;0&lt;/li&gt;
&lt;li&gt;5em&lt;/li&gt;
&lt;li&gt;left&lt;/li&gt;
&lt;li&gt;center&lt;/li&gt;
&lt;li&gt;right&lt;/li&gt;
&lt;li&gt;top&lt;/li&gt;
&lt;li&gt;&lt;p&gt;bottom&lt;br&gt;但以下不是合法取值：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;center 3% —只能出现一个，这里出现两个。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;3em 4.5em&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;[ ]  —方框&lt;/strong&gt;&lt;br&gt;方框将数个基本元素组成一个整体，用来强调组合的优先级。例如：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;bold [ thin &amp;amp;&amp;amp; &amp;lt;length&amp;gt; ]&lt;/p&gt;
&lt;p&gt;以下均为该例的合法取值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bold thin 2vh&lt;/li&gt;
&lt;li&gt;bold 0 thin&lt;/li&gt;
&lt;li&gt;bold thin 3.5em&lt;br&gt;但以下不是合法取值：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;thin bold 3em 因为bold被放置在方括号定义的整体之中。根据定义，bold必须出现在方括号定义的整体之前。&lt;/p&gt;
&lt;h4 id=&quot;数量符号：&quot;&gt;&lt;a href=&quot;#数量符号：&quot; class=&quot;headerlink&quot; title=&quot;数量符号：&quot;&gt;&lt;/a&gt;&lt;strong&gt;数量符号：&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;无：&lt;/strong&gt;&lt;br&gt;数量符号用来描述一个元素可以出现多少次。若不标注，则这个元素比如恰好出现一次。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意数量描述符不能叠加出现，并且优先级最高。&lt;/p&gt;
&lt;p&gt;例如：&amp;lt;length&amp;gt;&lt;/p&gt;
&lt;p&gt;以下为合法值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1px&lt;/li&gt;
&lt;li&gt;10em&lt;br&gt;单以下不是合法取值：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1px 2px                 —此处只能出现一次&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;加号 (**&lt;/strong&gt;+&lt;strong&gt;**)&lt;/strong&gt;&lt;br&gt;加号表示可以出现一次或多次。例如：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;lt;color-stop&amp;gt;[,&amp;lt;color-stop&amp;gt;]+&lt;/p&gt;
&lt;p&gt;以下均为该例的合法取值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;#fff,red&lt;/li&gt;
&lt;li&gt;Blue,green 50%,gray&lt;br&gt;但以下不是合法取值：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;red&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;问号 (**&lt;/strong&gt;?&lt;strong&gt;**)&lt;/strong&gt;&lt;br&gt;问号表示可选，即出现零次或一次。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;例如：inset?&amp;amp;&amp;amp;&amp;lt;color&amp;gt;&lt;/p&gt;
&lt;p&gt;以下均为该例的合法取值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Inset blue&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Red&lt;br&gt;但以下是不合法值：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Inset blue red&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Inset&lt;br&gt;&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;大括号 (**&lt;/strong&gt;{ }&lt;strong&gt;**)&lt;/strong&gt;&lt;br&gt;大括号包含两个以逗号分隔的整数A与B，表示最少出现A次，且最多出现B次。例如：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;bold smaller{1,3}&lt;/p&gt;
&lt;p&gt;以下均为该例的合法取值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bold smaller&lt;/li&gt;
&lt;li&gt;bold smaller smaller&lt;/li&gt;
&lt;li&gt;&lt;p&gt;bold smaller smaller smaller&lt;br&gt;但以下不是合法取值：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;bold 因为smaller 至少要出现一次。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;bold smaller smaller smaller smaller 因为smaller 最多出现三次。&lt;/li&gt;
&lt;li&gt;smaller 因为bold是并置关系，必须出现在smaller之前。&lt;br&gt;&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;星号 (&lt;strong&gt;&lt;em&gt;*&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;)**&lt;br&gt;星号表示可以出现零次（即不出现），一次，或任意多次。例如：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;bold smaller*&lt;/p&gt;
&lt;p&gt;以下均为该例的合法取值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bold&lt;/li&gt;
&lt;li&gt;bold smaller&lt;/li&gt;
&lt;li&gt;bold smaller smaller&lt;/li&gt;
&lt;li&gt;&lt;p&gt;bold smaller smaller smaller and so on.&lt;br&gt;但以下不是合法取值：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;smaller 因为bold并置于smaller，必须出现在任何smaller之前。&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;井号 (**&lt;/strong&gt;#&lt;strong&gt;**)&lt;/strong&gt;&lt;br&gt;井号表示可以出现一次或多次，与加号相似。但是其多次出现必须以&lt;strong&gt;逗号分隔&lt;/strong&gt;。例如：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;bold smaller#&lt;/p&gt;
&lt;p&gt;以下均为该例的合法取值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bold smaller&lt;/li&gt;
&lt;li&gt;bold smaller, smaller&lt;/li&gt;
&lt;li&gt;&lt;p&gt;bold smaller, smaller, smaller and so on.&lt;br&gt;但以下不是合法取值：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;bold 因为smaller必须至少出现一次。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;bold smaller smaller smaller 因为多个smaller必须以逗号分隔。&lt;/li&gt;
&lt;li&gt;smaller 因为bold是并置关系，必须出现在smaller之前。&lt;br&gt;&lt;a href=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS属性值语法案例.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.xifengxx.com/wp-content/uploads/2015/12/CSS属性值语法案例.png&quot; alt=&quot;CSS属性值语法案例&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（绿色的为合法值，红色的为不合法值。）&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;table&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;58&quot;&gt;&lt;strong&gt;符号&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;70&quot;&gt;&lt;strong&gt;名称&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;301&quot;&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td colspan=&quot;4&quot; width=&quot;569&quot;&gt;&lt;strong&gt;组合符号&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;58&quot;&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;70&quot;&gt;并置&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;各部分必须出现且按顺序出现&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;301&quot;&gt;solid &amp;lt;length&amp;gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;58&quot;&gt;&amp;amp;&amp;amp;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;70&quot;&gt;“与”组合符&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;各部分必须出现，但可以不按顺序&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;301&quot;&gt;&amp;lt;length&amp;gt; &amp;amp;&amp;amp; &amp;lt;string&amp;gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;58&quot;&gt;||&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;70&quot;&gt;“或”组合符&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;各部分至少出现一个，可以不按顺序&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;301&quot;&gt;&amp;lt;’border-image-outset’&amp;gt; || &amp;lt;’border-image-slice’&amp;gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;58&quot;&gt;|&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;70&quot;&gt;“互斥”组合符&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;各部分恰好出现一个&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;301&quot;&gt;smaller | small | normal | big | bigger&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;58&quot;&gt;[ ]&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;70&quot;&gt;方括号&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;强调优先级&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;301&quot;&gt;bold [ thin &amp;amp;&amp;amp; &amp;lt;length&amp;gt; ]&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td colspan=&quot;4&quot; width=&quot;569&quot;&gt;&lt;strong&gt;数量符号&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;58&quot;&gt;&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;70&quot;&gt;无数量符号&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;恰好一次&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;301&quot;&gt;solid&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;58&quot;&gt;*&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;70&quot;&gt;星号&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;零次、一次或多次&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;301&quot;&gt;bold smaller*&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;58&quot;&gt;+&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;70&quot;&gt;加号&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;一次或多次&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;301&quot;&gt;bold smaller+&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;58&quot;&gt;?&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;70&quot;&gt;问号&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;零次或一次（即可选）&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;301&quot;&gt;bold smaller?&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;58&quot;&gt;{A,B}&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;70&quot;&gt;大括号&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;至少A次，至多B次&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;301&quot;&gt;bold smaller{1,3}&lt;/td&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;58&quot;&gt;#&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;70&quot;&gt;井号&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;139&quot;&gt;一次或多次，但多次出现必须以逗号分隔&lt;/td&gt;&lt;/p&gt;
&lt;p&gt;&lt;td width=&quot;301&quot;&gt;bold smaller#&lt;/td&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;CSS属性值定义参考资源：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/CSS/Value_definition_syntax&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.mozilla.org/zh-CN/docs/Web/CSS/Value_definition_syntax&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.dreamdu.com/css/property_value/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.dreamdu.com/css/property_value/&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;规则及语法&quot;&gt;&lt;a href=&quot;#规则及语法&quot; class=&quot;headerlink&quot; title=&quot;@规则及语法&quot;&gt;&lt;/a&gt;&lt;strong&gt;@规则及语法&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;@media :&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;指定样式表规则用于指定的媒体类型和查询条件。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;IE8及以下只能实现CSS2中的部分，即只可以设置媒体类型。&lt;/p&gt;
&lt;p&gt;媒体查询可以被用在CSS中的@media和@import规则上，也可以被用在HTML和XML中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例代码：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;@media screen and (width:800px){ … }&lt;/p&gt;
&lt;p&gt;@import url(example.css) screen and (width:800px);&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;@keyframes &lt;/strong&gt;&lt;br&gt;&lt;strong&gt;指定动画名称和动画效果。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;定义动画时，简单的动画可以直接使用关键字from和to，即从一种状态过渡到另一种状态：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例代码：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;@keyframes testanimations {&lt;/p&gt;
&lt;p&gt;from { opacity: 1; }&lt;/p&gt;
&lt;p&gt;to { opacity: 0; }&lt;/p&gt;
&lt;p&gt;}&lt;br&gt;其中testanimations是该动画的名字，该动画表示某个东西将逐渐消失。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;如果复杂的动画，可以混合&lt;/strong&gt;&lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/rules/../values/numeric/percentage.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;percentage&amp;gt;&lt;/a&gt;&lt;strong&gt;去设置某个时间段内的任意时间点的样式：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例代码：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;@keyframes testanimations {&lt;/p&gt;
&lt;p&gt;from { transform: translate(0, 0); }&lt;/p&gt;
&lt;p&gt;20% { transform: translate(20px, 20px); }&lt;/p&gt;
&lt;p&gt;40% { transform: translate(40px, 0); }&lt;/p&gt;
&lt;p&gt;60% { transform: translate(60px, 20); }&lt;/p&gt;
&lt;p&gt;80% { transform: translate(80px, 0); }&lt;/p&gt;
&lt;p&gt;to { transform: translate(100px, 20px); }&lt;/p&gt;
&lt;p&gt;}&lt;br&gt;&lt;strong&gt;当然，也可以不使用关键字from和to，而都使用&lt;/strong&gt;&lt;a href=&quot;mk:@MSITStore:D:\前端开发\css参考手册.chm::/rules/../values/numeric/percentage.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;lt;percentage&amp;gt;&lt;/a&gt;&lt;strong&gt;，如将上面的示例代码中的“**&lt;/strong&gt;from&lt;strong&gt;&lt;strong&gt;”、“&lt;/strong&gt;&lt;/strong&gt;to&lt;strong&gt;&lt;strong&gt;”分别换成“&lt;/strong&gt;&lt;/strong&gt;0%&lt;strong&gt;&lt;strong&gt;”、“&lt;/strong&gt;&lt;/strong&gt;100%&lt;strong&gt;**”。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;@font-face&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;设置嵌入HTML文档的字体。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;需要兼容当前的主流浏览器，需同时使用TureTpe(.ttf)、Web Open Font Format(.woff)、Embedded Open Type(.eot)、SVG(.svg)四种字体格式。&lt;/p&gt;
&lt;p&gt;嵌入HTML文档的字体是指将OpenType字体（压缩的TrueType字体）文件映射到客户端系统，用来提供HTML文档使用该字体，或取代客户端系统已有的同名字体。即让客户端显示客户端所没有安装的字体。&lt;/p&gt;
&lt;p&gt;.eot(Embedded Open Type)为IE的私有字体格式。Safari3.1开始支持.ttf(TrueType)和.otf(OpenType)。&lt;/p&gt;
&lt;p&gt;未来.woff(Web Open Font Format)将会取代.ttf(TrueType)和.otf(OpenType)两种字体格式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例：&lt;/strong&gt;使用一个全浏览器兼容的自定义字体&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代码如下：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;@font-face {&lt;/p&gt;
&lt;p&gt;font-family: ‘diyfont’;&lt;/p&gt;
&lt;p&gt;src: url(‘diyfont.eot’); /&lt;em&gt; IE9+ &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;src: url(‘diyfont.eot?#iefix’) format(‘embedded-opentype’), /&lt;em&gt; IE6-IE8 &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;url(‘diyfont.woff’) format(‘woff’), /&lt;em&gt; chrome、firefox &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;url(‘diyfont.ttf’) format(‘truetype’), /&lt;em&gt; chrome、firefox、opera、Safari, Android, iOS 4.2+&lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;url(‘diyfont.svg#fontname’) format(‘svg’); /&lt;em&gt; iOS 4.1- &lt;/em&gt;/&lt;/p&gt;
&lt;p&gt;}&lt;br&gt;你需要同时提供4种格式的字体&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;另外，还有其他几种@规则，如@import/@charset/@namespace/@page/ @supports/@document等，这几类规则用的比较少，具体可以查看CSS参考手册：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.css88.com/book/css/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.css88.com/book/css/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;以下内容为《前端开发工程师》微专业的第一门课《网页制作》的第五章，学习视频课程后自己整理的学习笔记，会持续更新内容。&lt;/p&gt;
&lt;h2 id=&quot;《网页制作》之CSS&quot;&gt;&lt;a href=&quot;#《网页制作》之CSS&quot; class=&quot;headerlink&quot; title=&quot;《网页制作》
    
    </summary>
    
      <category term="网易微专业·前端开发工程师" scheme="http://yoursite.com/categories/%E7%BD%91%E6%98%93%E5%BE%AE%E4%B8%93%E4%B8%9A%C2%B7%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
    
      <category term="前端开发工程师学习笔记" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
